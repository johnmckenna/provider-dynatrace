---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: generictypes.topologymodel.dynatrace.crossplane.io
spec:
  group: topologymodel.dynatrace.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - dynatrace
    kind: GenericTypes
    listKind: GenericTypesList
    plural: generictypes
    singular: generictypes
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GenericTypes is the Schema for the GenericTypess API. The resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GenericTypesSpec defines the desired state of GenericTypes
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  createdBy:
                    description: |-
                      (String) The user or extension that created this type.
                      The user or extension that created this type.
                    type: string
                  displayName:
                    description: |-
                      (String) The human readable type name for this entity type.
                      The human readable type name for this entity type.
                    type: string
                  enabled:
                    description: |-
                      (Boolean) This setting is enabled (true) or disabled (false)
                      This setting is enabled (`true`) or disabled (`false`)
                    type: boolean
                  insertAfter:
                    description: |-
                      (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                      Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                    type: string
                  name:
                    description: |-
                      (String) The entity type name. This type name must be unique and must not be changed after creation.
                      The entity type name. This type name must be unique and must not be changed after creation.
                    type: string
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Specify a list of rules which are evaluated in order. When any rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated. (see below for nested schema)
                      Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.
                    items:
                      properties:
                        rule:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              attributes:
                                description: |-
                                  (Block List, Max: 1) All attribute extraction rules will be applied and found attributes will be added to the extracted type. (see below for nested schema)
                                  All attribute extraction rules will be applied and found attributes will be added to the extracted type.
                                items:
                                  properties:
                                    attribute:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          displayName:
                                            description: |-
                                              (String) The human readable type name for this entity type.
                                              The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.
                                            type: string
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              The attribute key is the unique name of the attribute.
                                            type: string
                                          pattern:
                                            description: |-
                                              (String) Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                              Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              iconPattern:
                                description: |-
                                  (String) Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                type: string
                              idPattern:
                                description: |-
                                  like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!
                                  ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern **must** contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!


                                  Each dimension key referred to by an identifier placeholder must be present in order to extract an entity. If any dimension key referred to in the identifier is missing, the rule will not be considered for evaluation. If you have cases where you still want to extract the same entity type but have differently named keys, consider creating multiple rules extracting the same entity type. In this case take care that each ID pattern evaluates to the same value if the same entity should be extracted.
                                type: string
                              instanceNamePattern:
                                description: |-
                                  (String) Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                type: string
                              requiredDimensions:
                                description: |-
                                  (Block List, Max: 1) In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule. (see below for nested schema)
                                  In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule.
                                items:
                                  properties:
                                    requiredDimension:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              A dimension key which needs to exist in the ingest data to match this filter.
                                            type: string
                                          valuePattern:
                                            description: |-
                                              (String) A dimension value pattern which needs to exist in the ingest data to match this filter.
                                              A dimension value pattern which needs to exist in the ingest data to match this filter.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              role:
                                description: |-
                                  (String) If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                  If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                type: string
                              sources:
                                description: |-
                                  (Block List, Min: 1, Max: 1) Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match. (see below for nested schema)
                                  Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match.
                                items:
                                  properties:
                                    source:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: $eq(value) will ensure that the source matches exactly 'value', $prefix(value) will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
                                              Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', `$prefix(value)` will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '\~', you need to escape them by adding a '\~' in front of them.
                                            type: string
                                          sourceType:
                                            description: |-
                                              (String) Possible Values: BusinessEvents, Entities, Events, Logs, Metrics, Spans, Topology
                                              Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  createdBy:
                    description: |-
                      (String) The user or extension that created this type.
                      The user or extension that created this type.
                    type: string
                  displayName:
                    description: |-
                      (String) The human readable type name for this entity type.
                      The human readable type name for this entity type.
                    type: string
                  enabled:
                    description: |-
                      (Boolean) This setting is enabled (true) or disabled (false)
                      This setting is enabled (`true`) or disabled (`false`)
                    type: boolean
                  insertAfter:
                    description: |-
                      (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                      Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                    type: string
                  name:
                    description: |-
                      (String) The entity type name. This type name must be unique and must not be changed after creation.
                      The entity type name. This type name must be unique and must not be changed after creation.
                    type: string
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Specify a list of rules which are evaluated in order. When any rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated. (see below for nested schema)
                      Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.
                    items:
                      properties:
                        rule:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              attributes:
                                description: |-
                                  (Block List, Max: 1) All attribute extraction rules will be applied and found attributes will be added to the extracted type. (see below for nested schema)
                                  All attribute extraction rules will be applied and found attributes will be added to the extracted type.
                                items:
                                  properties:
                                    attribute:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          displayName:
                                            description: |-
                                              (String) The human readable type name for this entity type.
                                              The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.
                                            type: string
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              The attribute key is the unique name of the attribute.
                                            type: string
                                          pattern:
                                            description: |-
                                              (String) Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                              Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              iconPattern:
                                description: |-
                                  (String) Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                type: string
                              idPattern:
                                description: |-
                                  like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!
                                  ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern **must** contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!


                                  Each dimension key referred to by an identifier placeholder must be present in order to extract an entity. If any dimension key referred to in the identifier is missing, the rule will not be considered for evaluation. If you have cases where you still want to extract the same entity type but have differently named keys, consider creating multiple rules extracting the same entity type. In this case take care that each ID pattern evaluates to the same value if the same entity should be extracted.
                                type: string
                              instanceNamePattern:
                                description: |-
                                  (String) Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                type: string
                              requiredDimensions:
                                description: |-
                                  (Block List, Max: 1) In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule. (see below for nested schema)
                                  In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule.
                                items:
                                  properties:
                                    requiredDimension:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              A dimension key which needs to exist in the ingest data to match this filter.
                                            type: string
                                          valuePattern:
                                            description: |-
                                              (String) A dimension value pattern which needs to exist in the ingest data to match this filter.
                                              A dimension value pattern which needs to exist in the ingest data to match this filter.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              role:
                                description: |-
                                  (String) If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                  If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                type: string
                              sources:
                                description: |-
                                  (Block List, Min: 1, Max: 1) Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match. (see below for nested schema)
                                  Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match.
                                items:
                                  properties:
                                    source:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: $eq(value) will ensure that the source matches exactly 'value', $prefix(value) will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
                                              Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', `$prefix(value)` will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '\~', you need to escape them by adding a '\~' in front of them.
                                            type: string
                                          sourceType:
                                            description: |-
                                              (String) Possible Values: BusinessEvents, Entities, Events, Logs, Metrics, Spans, Topology
                                              Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.createdBy is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.createdBy)
                || (has(self.initProvider) && has(self.initProvider.createdBy))'
            - message: spec.forProvider.displayName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.displayName)
                || (has(self.initProvider) && has(self.initProvider.displayName))'
            - message: spec.forProvider.enabled is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.enabled)
                || (has(self.initProvider) && has(self.initProvider.enabled))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rules is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rules)
                || (has(self.initProvider) && has(self.initProvider.rules))'
          status:
            description: GenericTypesStatus defines the observed state of GenericTypes.
            properties:
              atProvider:
                properties:
                  createdBy:
                    description: |-
                      (String) The user or extension that created this type.
                      The user or extension that created this type.
                    type: string
                  displayName:
                    description: |-
                      (String) The human readable type name for this entity type.
                      The human readable type name for this entity type.
                    type: string
                  enabled:
                    description: |-
                      (Boolean) This setting is enabled (true) or disabled (false)
                      This setting is enabled (`true`) or disabled (`false`)
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  insertAfter:
                    description: |-
                      (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                      Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
                    type: string
                  name:
                    description: |-
                      (String) The entity type name. This type name must be unique and must not be changed after creation.
                      The entity type name. This type name must be unique and must not be changed after creation.
                    type: string
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Specify a list of rules which are evaluated in order. When any rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated. (see below for nested schema)
                      Specify a list of rules which are evaluated in order. When **any** rule matches, the entity defined according to that rule will be extracted. Subsequent rules will not be evaluated.
                    items:
                      properties:
                        rule:
                          description: '(Block List, Min: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              attributes:
                                description: |-
                                  (Block List, Max: 1) All attribute extraction rules will be applied and found attributes will be added to the extracted type. (see below for nested schema)
                                  All attribute extraction rules will be applied and found attributes will be added to the extracted type.
                                items:
                                  properties:
                                    attribute:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          displayName:
                                            description: |-
                                              (String) The human readable type name for this entity type.
                                              The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.
                                            type: string
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              The attribute key is the unique name of the attribute.
                                            type: string
                                          pattern:
                                            description: |-
                                              (String) Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                              Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              iconPattern:
                                description: |-
                                  (String) Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
                                type: string
                              idPattern:
                                description: |-
                                  like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!
                                  ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern **must** contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!


                                  Each dimension key referred to by an identifier placeholder must be present in order to extract an entity. If any dimension key referred to in the identifier is missing, the rule will not be considered for evaluation. If you have cases where you still want to extract the same entity type but have differently named keys, consider creating multiple rules extracting the same entity type. In this case take care that each ID pattern evaluates to the same value if the same entity should be extracted.
                                type: string
                              instanceNamePattern:
                                description: |-
                                  (String) Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                  Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
                                type: string
                              requiredDimensions:
                                description: |-
                                  (Block List, Max: 1) In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule. (see below for nested schema)
                                  In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule.
                                items:
                                  properties:
                                    requiredDimension:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          key:
                                            description: |-
                                              (String) The attribute key is the unique name of the attribute.
                                              A dimension key which needs to exist in the ingest data to match this filter.
                                            type: string
                                          valuePattern:
                                            description: |-
                                              (String) A dimension value pattern which needs to exist in the ingest data to match this filter.
                                              A dimension value pattern which needs to exist in the ingest data to match this filter.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              role:
                                description: |-
                                  (String) If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                  If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
                                type: string
                              sources:
                                description: |-
                                  (Block List, Min: 1, Max: 1) Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match. (see below for nested schema)
                                  Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match.
                                items:
                                  properties:
                                    source:
                                      description: '(Block Set, Min: 1) (see below
                                        for nested schema)'
                                      items:
                                        properties:
                                          condition:
                                            description: |-
                                              (String) Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: $eq(value) will ensure that the source matches exactly 'value', $prefix(value) will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
                                              Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', `$prefix(value)` will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
                                              If your value contains the characters '(', ')' or '\~', you need to escape them by adding a '\~' in front of them.
                                            type: string
                                          sourceType:
                                            description: |-
                                              (String) Possible Values: BusinessEvents, Entities, Events, Logs, Metrics, Spans, Topology
                                              Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
