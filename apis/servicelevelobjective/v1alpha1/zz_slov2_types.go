// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorBudgetBurnRateInitParameters struct {

	// (Boolean) Burn rate visualization enabled
	// Burn rate visualization enabled
	BurnRateVisualizationEnabled *bool `json:"burnRateVisualizationEnabled,omitempty" tf:"burn_rate_visualization_enabled,omitempty"`

	// burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	FastBurnThreshold *float64 `json:"fastBurnThreshold,omitempty" tf:"fast_burn_threshold,omitempty"`
}

type ErrorBudgetBurnRateObservation struct {

	// (Boolean) Burn rate visualization enabled
	// Burn rate visualization enabled
	BurnRateVisualizationEnabled *bool `json:"burnRateVisualizationEnabled,omitempty" tf:"burn_rate_visualization_enabled,omitempty"`

	// burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	FastBurnThreshold *float64 `json:"fastBurnThreshold,omitempty" tf:"fast_burn_threshold,omitempty"`
}

type ErrorBudgetBurnRateParameters struct {

	// (Boolean) Burn rate visualization enabled
	// Burn rate visualization enabled
	// +kubebuilder:validation:Optional
	BurnRateVisualizationEnabled *bool `json:"burnRateVisualizationEnabled" tf:"burn_rate_visualization_enabled,omitempty"`

	// burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	// +kubebuilder:validation:Optional
	FastBurnThreshold *float64 `json:"fastBurnThreshold,omitempty" tf:"fast_burn_threshold,omitempty"`
}

type SLOV2InitParameters struct {

	// (String) The description of the SLO
	// The description of the SLO
	CustomDescription *string `json:"customDescription,omitempty" tf:"custom_description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ### Error budget burn rate (see below for nested schema)
	// ### Error budget burn rate
	ErrorBudgetBurnRate []ErrorBudgetBurnRateInitParameters `json:"errorBudgetBurnRate,omitempty" tf:"error_budget_burn_rate,omitempty"`

	// (String) Possible Values: AGGREGATE
	// Possible Values: `AGGREGATE`
	EvaluationType *string `json:"evaluationType,omitempty" tf:"evaluation_type,omitempty"`

	// 1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow *string `json:"evaluationWindow,omitempty" tf:"evaluation_window,omitempty"`

	// (String) Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the Entity Selector documentation.
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The ID of this setting when referred to by the Config REST API V1
	// The ID of this setting when referred to by the Config REST API V1
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (String) For details, see the Metrics page.
	// For details, see the [Metrics page](/ui/metrics "Metrics page").
	MetricExpression *string `json:"metricExpression,omitempty" tf:"metric_expression,omitempty"`

	// (String) Metric name
	// Metric name
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// (String) SLO name
	// SLO name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Set the target value of the SLO. A percentage below this value indicates a failure.
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess *float64 `json:"targetSuccess,omitempty" tf:"target_success,omitempty"`

	// (Number) Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning *float64 `json:"targetWarning,omitempty" tf:"target_warning,omitempty"`
}

type SLOV2Observation struct {

	// (String) The description of the SLO
	// The description of the SLO
	CustomDescription *string `json:"customDescription,omitempty" tf:"custom_description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ### Error budget burn rate (see below for nested schema)
	// ### Error budget burn rate
	ErrorBudgetBurnRate []ErrorBudgetBurnRateObservation `json:"errorBudgetBurnRate,omitempty" tf:"error_budget_burn_rate,omitempty"`

	// (String) Possible Values: AGGREGATE
	// Possible Values: `AGGREGATE`
	EvaluationType *string `json:"evaluationType,omitempty" tf:"evaluation_type,omitempty"`

	// 1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow *string `json:"evaluationWindow,omitempty" tf:"evaluation_window,omitempty"`

	// (String) Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the Entity Selector documentation.
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The ID of this setting when referred to by the Config REST API V1
	// The ID of this setting when referred to by the Config REST API V1
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (String) For details, see the Metrics page.
	// For details, see the [Metrics page](/ui/metrics "Metrics page").
	MetricExpression *string `json:"metricExpression,omitempty" tf:"metric_expression,omitempty"`

	// (String) Metric name
	// Metric name
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// (String) SLO name
	// SLO name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Set the target value of the SLO. A percentage below this value indicates a failure.
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess *float64 `json:"targetSuccess,omitempty" tf:"target_success,omitempty"`

	// (Number) Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning *float64 `json:"targetWarning,omitempty" tf:"target_warning,omitempty"`
}

type SLOV2Parameters struct {

	// (String) The description of the SLO
	// The description of the SLO
	// +kubebuilder:validation:Optional
	CustomDescription *string `json:"customDescription,omitempty" tf:"custom_description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ### Error budget burn rate (see below for nested schema)
	// ### Error budget burn rate
	// +kubebuilder:validation:Optional
	ErrorBudgetBurnRate []ErrorBudgetBurnRateParameters `json:"errorBudgetBurnRate,omitempty" tf:"error_budget_burn_rate,omitempty"`

	// (String) Possible Values: AGGREGATE
	// Possible Values: `AGGREGATE`
	// +kubebuilder:validation:Optional
	EvaluationType *string `json:"evaluationType,omitempty" tf:"evaluation_type,omitempty"`

	// 1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	// +kubebuilder:validation:Optional
	EvaluationWindow *string `json:"evaluationWindow,omitempty" tf:"evaluation_window,omitempty"`

	// (String) Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the Entity Selector documentation.
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The ID of this setting when referred to by the Config REST API V1
	// The ID of this setting when referred to by the Config REST API V1
	// +kubebuilder:validation:Optional
	LegacyID *string `json:"legacyId,omitempty" tf:"legacy_id,omitempty"`

	// (String) For details, see the Metrics page.
	// For details, see the [Metrics page](/ui/metrics "Metrics page").
	// +kubebuilder:validation:Optional
	MetricExpression *string `json:"metricExpression,omitempty" tf:"metric_expression,omitempty"`

	// (String) Metric name
	// Metric name
	// +kubebuilder:validation:Optional
	MetricName *string `json:"metricName,omitempty" tf:"metric_name,omitempty"`

	// (String) SLO name
	// SLO name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Set the target value of the SLO. A percentage below this value indicates a failure.
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	// +kubebuilder:validation:Optional
	TargetSuccess *float64 `json:"targetSuccess,omitempty" tf:"target_success,omitempty"`

	// (Number) Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	// +kubebuilder:validation:Optional
	TargetWarning *float64 `json:"targetWarning,omitempty" tf:"target_warning,omitempty"`
}

// SLOV2Spec defines the desired state of SLOV2
type SLOV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SLOV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SLOV2InitParameters `json:"initProvider,omitempty"`
}

// SLOV2Status defines the observed state of SLOV2.
type SLOV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SLOV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SLOV2 is the Schema for the SLOV2s API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type SLOV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.errorBudgetBurnRate) || (has(self.initProvider) && has(self.initProvider.errorBudgetBurnRate))",message="spec.forProvider.errorBudgetBurnRate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.evaluationType) || (has(self.initProvider) && has(self.initProvider.evaluationType))",message="spec.forProvider.evaluationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.evaluationWindow) || (has(self.initProvider) && has(self.initProvider.evaluationWindow))",message="spec.forProvider.evaluationWindow is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.filter) || (has(self.initProvider) && has(self.initProvider.filter))",message="spec.forProvider.filter is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.metricExpression) || (has(self.initProvider) && has(self.initProvider.metricExpression))",message="spec.forProvider.metricExpression is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetSuccess) || (has(self.initProvider) && has(self.initProvider.targetSuccess))",message="spec.forProvider.targetSuccess is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetWarning) || (has(self.initProvider) && has(self.initProvider.targetWarning))",message="spec.forProvider.targetWarning is a required parameter"
	Spec   SLOV2Spec   `json:"spec"`
	Status SLOV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SLOV2List contains a list of SLOV2s
type SLOV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SLOV2 `json:"items"`
}

// Repository type metadata.
var (
	SLOV2_Kind             = "SLOV2"
	SLOV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SLOV2_Kind}.String()
	SLOV2_KindAPIVersion   = SLOV2_Kind + "." + CRDGroupVersion.String()
	SLOV2_GroupVersionKind = CRDGroupVersion.WithKind(SLOV2_Kind)
)

func init() {
	SchemeBuilder.Register(&SLOV2{}, &SLOV2List{})
}
