// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PlatformBucketInitParameters struct {

	// (String) The name of the bucket definition when visualized within the UI
	// The name of the bucket definition when visualized within the UI
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The name / id of the bucket definition
	// The name / id of the bucket definition
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The retention of stored data in days
	// The retention of stored data in days
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`

	// creating the bucket definition
	// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
	Table *string `json:"table,omitempty" tf:"table,omitempty"`
}

type PlatformBucketObservation struct {

	// (String) The name of the bucket definition when visualized within the UI
	// The name of the bucket definition when visualized within the UI
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name / id of the bucket definition
	// The name / id of the bucket definition
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The retention of stored data in days
	// The retention of stored data in days
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`

	// (String) The status of the bucket definition. Usually has the value active unless an update or delete is currently happening
	// The status of the bucket definition. Usually has the value `active` unless an update or delete is currently happening
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// creating the bucket definition
	// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
	Table *string `json:"table,omitempty" tf:"table,omitempty"`
}

type PlatformBucketParameters struct {

	// (String) The name of the bucket definition when visualized within the UI
	// The name of the bucket definition when visualized within the UI
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The name / id of the bucket definition
	// The name / id of the bucket definition
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The retention of stored data in days
	// The retention of stored data in days
	// +kubebuilder:validation:Optional
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`

	// creating the bucket definition
	// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
	// +kubebuilder:validation:Optional
	Table *string `json:"table,omitempty" tf:"table,omitempty"`
}

// PlatformBucketSpec defines the desired state of PlatformBucket
type PlatformBucketSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PlatformBucketParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PlatformBucketInitParameters `json:"initProvider,omitempty"`
}

// PlatformBucketStatus defines the observed state of PlatformBucket.
type PlatformBucketStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PlatformBucketObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PlatformBucket is the Schema for the PlatformBuckets API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type PlatformBucket struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.retention) || (has(self.initProvider) && has(self.initProvider.retention))",message="spec.forProvider.retention is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.table) || (has(self.initProvider) && has(self.initProvider.table))",message="spec.forProvider.table is a required parameter"
	Spec   PlatformBucketSpec   `json:"spec"`
	Status PlatformBucketStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PlatformBucketList contains a list of PlatformBuckets
type PlatformBucketList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PlatformBucket `json:"items"`
}

// Repository type metadata.
var (
	PlatformBucket_Kind             = "PlatformBucket"
	PlatformBucket_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PlatformBucket_Kind}.String()
	PlatformBucket_KindAPIVersion   = PlatformBucket_Kind + "." + CRDGroupVersion.String()
	PlatformBucket_GroupVersionKind = CRDGroupVersion.WithKind(PlatformBucket_Kind)
)

func init() {
	SchemeBuilder.Register(&PlatformBucket{}, &PlatformBucketList{})
}
