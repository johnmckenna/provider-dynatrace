// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowRuleInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Metric key
	// Metric key
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) Possible Values: CONTAINS, EQUALS, STARTSWITH
	// Possible Values: `CONTAINS`, `EQUALS`, `STARTSWITH`
	Pattern *string `json:"pattern,omitempty" tf:"pattern,omitempty"`
}

type AllowRuleObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Metric key
	// Metric key
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) Possible Values: CONTAINS, EQUALS, STARTSWITH
	// Possible Values: `CONTAINS`, `EQUALS`, `STARTSWITH`
	Pattern *string `json:"pattern,omitempty" tf:"pattern,omitempty"`
}

type AllowRuleParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (String) Metric key
	// Metric key
	// +kubebuilder:validation:Optional
	MetricKey *string `json:"metricKey" tf:"metric_key,omitempty"`

	// (String) Possible Values: CONTAINS, EQUALS, STARTSWITH
	// Possible Values: `CONTAINS`, `EQUALS`, `STARTSWITH`
	// +kubebuilder:validation:Optional
	Pattern *string `json:"pattern" tf:"pattern,omitempty"`
}

type AllowRulesInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	AllowRule []AllowRuleInitParameters `json:"allowRule,omitempty" tf:"allow_rule,omitempty"`
}

type AllowRulesObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	AllowRule []AllowRuleObservation `json:"allowRule,omitempty" tf:"allow_rule,omitempty"`
}

type AllowRulesParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	AllowRule []AllowRuleParameters `json:"allowRule" tf:"allow_rule,omitempty"`
}

type GrailMetricsAllowlistInitParameters struct {

	// (Block List, Max: 1) Specify rules for forwarding metrics (see below for nested schema)
	// Specify rules for forwarding metrics
	AllowRules []AllowRulesInitParameters `json:"allowRules,omitempty" tf:"allow_rules,omitempty"`
}

type GrailMetricsAllowlistObservation struct {

	// (Block List, Max: 1) Specify rules for forwarding metrics (see below for nested schema)
	// Specify rules for forwarding metrics
	AllowRules []AllowRulesObservation `json:"allowRules,omitempty" tf:"allow_rules,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type GrailMetricsAllowlistParameters struct {

	// (Block List, Max: 1) Specify rules for forwarding metrics (see below for nested schema)
	// Specify rules for forwarding metrics
	// +kubebuilder:validation:Optional
	AllowRules []AllowRulesParameters `json:"allowRules,omitempty" tf:"allow_rules,omitempty"`
}

// GrailMetricsAllowlistSpec defines the desired state of GrailMetricsAllowlist
type GrailMetricsAllowlistSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GrailMetricsAllowlistParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GrailMetricsAllowlistInitParameters `json:"initProvider,omitempty"`
}

// GrailMetricsAllowlistStatus defines the observed state of GrailMetricsAllowlist.
type GrailMetricsAllowlistStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GrailMetricsAllowlistObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GrailMetricsAllowlist is the Schema for the GrailMetricsAllowlists API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type GrailMetricsAllowlist struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GrailMetricsAllowlistSpec   `json:"spec"`
	Status            GrailMetricsAllowlistStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GrailMetricsAllowlistList contains a list of GrailMetricsAllowlists
type GrailMetricsAllowlistList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GrailMetricsAllowlist `json:"items"`
}

// Repository type metadata.
var (
	GrailMetricsAllowlist_Kind             = "GrailMetricsAllowlist"
	GrailMetricsAllowlist_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GrailMetricsAllowlist_Kind}.String()
	GrailMetricsAllowlist_KindAPIVersion   = GrailMetricsAllowlist_Kind + "." + CRDGroupVersion.String()
	GrailMetricsAllowlist_GroupVersionKind = CRDGroupVersion.WithKind(GrailMetricsAllowlist_Kind)
)

func init() {
	SchemeBuilder.Register(&GrailMetricsAllowlist{}, &GrailMetricsAllowlistList{})
}
