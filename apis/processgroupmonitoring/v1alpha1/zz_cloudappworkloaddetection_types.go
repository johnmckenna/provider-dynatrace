// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudFoundryInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type CloudFoundryObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type CloudFoundryParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type CloudappWorkloaddetectionInitParameters struct {

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Processes of Cloud Foundry application instances merged into process groups by Cloud Foundry application.
	// *  Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	CloudFoundry []CloudFoundryInitParameters `json:"cloudFoundry,omitempty" tf:"cloud_foundry,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting for plain Docker and Podman environments to get
	// Enable this setting for plain Docker and Podman environments to get
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Docker support requires OneAgent 1.257+.
	// * Podman support requires OneAgent 1.267+.
	Docker []DockerInitParameters `json:"docker,omitempty" tf:"docker,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace, cloud application and cloud application instance and entities).
	// * Container resource metrics (container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Similar workloads merged into process groups based on defined rules (see below).
	// * Version detection for services that run in Kubernetes workloads.
	Kubernetes []KubernetesInitParameters `json:"kubernetes,omitempty" tf:"kubernetes,omitempty"`

	// (Block List, Max: 1) Enable this setting to
	// Enable this setting to
	// * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure Container Apps, [and many more](https://dt-url.net/2m02q7b).
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	Serverless []ServerlessInitParameters `json:"serverless,omitempty" tf:"serverless,omitempty"`
}

type CloudappWorkloaddetectionObservation struct {

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Processes of Cloud Foundry application instances merged into process groups by Cloud Foundry application.
	// *  Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	CloudFoundry []CloudFoundryObservation `json:"cloudFoundry,omitempty" tf:"cloud_foundry,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting for plain Docker and Podman environments to get
	// Enable this setting for plain Docker and Podman environments to get
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Docker support requires OneAgent 1.257+.
	// * Podman support requires OneAgent 1.267+.
	Docker []DockerObservation `json:"docker,omitempty" tf:"docker,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace, cloud application and cloud application instance and entities).
	// * Container resource metrics (container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Similar workloads merged into process groups based on defined rules (see below).
	// * Version detection for services that run in Kubernetes workloads.
	Kubernetes []KubernetesObservation `json:"kubernetes,omitempty" tf:"kubernetes,omitempty"`

	// (Block List, Max: 1) Enable this setting to
	// Enable this setting to
	// * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure Container Apps, [and many more](https://dt-url.net/2m02q7b).
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	Serverless []ServerlessObservation `json:"serverless,omitempty" tf:"serverless,omitempty"`
}

type CloudappWorkloaddetectionParameters struct {

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Processes of Cloud Foundry application instances merged into process groups by Cloud Foundry application.
	// *  Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// +kubebuilder:validation:Optional
	CloudFoundry []CloudFoundryParameters `json:"cloudFoundry,omitempty" tf:"cloud_foundry,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting for plain Docker and Podman environments to get
	// Enable this setting for plain Docker and Podman environments to get
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Docker support requires OneAgent 1.257+.
	// * Podman support requires OneAgent 1.267+.
	// +kubebuilder:validation:Optional
	Docker []DockerParameters `json:"docker,omitempty" tf:"docker,omitempty"`

	// (Block List, Min: 1, Max: 1) Enable this setting to get
	// Enable this setting to get
	// * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace, cloud application and cloud application instance and entities).
	// * Container resource metrics (container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// * Similar workloads merged into process groups based on defined rules (see below).
	// * Version detection for services that run in Kubernetes workloads.
	// +kubebuilder:validation:Optional
	Kubernetes []KubernetesParameters `json:"kubernetes,omitempty" tf:"kubernetes,omitempty"`

	// (Block List, Max: 1) Enable this setting to
	// Enable this setting to
	// * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure Container Apps, [and many more](https://dt-url.net/2m02q7b).
	// * Container resource metrics (Container group instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
	// +kubebuilder:validation:Optional
	Serverless []ServerlessParameters `json:"serverless,omitempty" tf:"serverless,omitempty"`
}

type DockerInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DockerObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DockerParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

type FilterInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ID calculation based on (see below for nested schema)
	// ID calculation based on
	InclusionToggles []InclusionTogglesInitParameters `json:"inclusionToggles,omitempty" tf:"inclusion_toggles,omitempty"`

	// (Block List, Min: 1, Max: 1) When namespace (see below for nested schema)
	// When namespace
	MatchFilter []MatchFilterInitParameters `json:"matchFilter,omitempty" tf:"match_filter,omitempty"`
}

type FilterObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ID calculation based on (see below for nested schema)
	// ID calculation based on
	InclusionToggles []InclusionTogglesObservation `json:"inclusionToggles,omitempty" tf:"inclusion_toggles,omitempty"`

	// (Block List, Min: 1, Max: 1) When namespace (see below for nested schema)
	// When namespace
	MatchFilter []MatchFilterObservation `json:"matchFilter,omitempty" tf:"match_filter,omitempty"`
}

type FilterParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) ID calculation based on (see below for nested schema)
	// ID calculation based on
	// +kubebuilder:validation:Optional
	InclusionToggles []InclusionTogglesParameters `json:"inclusionToggles" tf:"inclusion_toggles,omitempty"`

	// (Block List, Min: 1, Max: 1) When namespace (see below for nested schema)
	// When namespace
	// +kubebuilder:validation:Optional
	MatchFilter []MatchFilterParameters `json:"matchFilter" tf:"match_filter,omitempty"`
}

type FiltersInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`
}

type FiltersObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`
}

type FiltersParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter" tf:"filter,omitempty"`
}

type InclusionTogglesInitParameters struct {

	// credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	// E.g. "cloud-credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	IncBasepod *bool `json:"incBasepod,omitempty" tf:"inc_basepod,omitempty"`

	// (Boolean) Container name
	// Container name
	IncContainer *bool `json:"incContainer,omitempty" tf:"inc_container,omitempty"`

	// (Boolean) Namespace name
	// Namespace name
	IncNamespace *bool `json:"incNamespace,omitempty" tf:"inc_namespace,omitempty"`

	// (Boolean) If Product is enabled and has no value, it defaults to Base pod name
	// If Product is enabled and has no value, it defaults to Base pod name
	IncProduct *bool `json:"incProduct,omitempty" tf:"inc_product,omitempty"`

	// (Boolean) Stage
	// Stage
	IncStage *bool `json:"incStage,omitempty" tf:"inc_stage,omitempty"`
}

type InclusionTogglesObservation struct {

	// credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	// E.g. "cloud-credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	IncBasepod *bool `json:"incBasepod,omitempty" tf:"inc_basepod,omitempty"`

	// (Boolean) Container name
	// Container name
	IncContainer *bool `json:"incContainer,omitempty" tf:"inc_container,omitempty"`

	// (Boolean) Namespace name
	// Namespace name
	IncNamespace *bool `json:"incNamespace,omitempty" tf:"inc_namespace,omitempty"`

	// (Boolean) If Product is enabled and has no value, it defaults to Base pod name
	// If Product is enabled and has no value, it defaults to Base pod name
	IncProduct *bool `json:"incProduct,omitempty" tf:"inc_product,omitempty"`

	// (Boolean) Stage
	// Stage
	IncStage *bool `json:"incStage,omitempty" tf:"inc_stage,omitempty"`
}

type InclusionTogglesParameters struct {

	// credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	// E.g. "cloud-credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
	// +kubebuilder:validation:Optional
	IncBasepod *bool `json:"incBasepod" tf:"inc_basepod,omitempty"`

	// (Boolean) Container name
	// Container name
	// +kubebuilder:validation:Optional
	IncContainer *bool `json:"incContainer" tf:"inc_container,omitempty"`

	// (Boolean) Namespace name
	// Namespace name
	// +kubebuilder:validation:Optional
	IncNamespace *bool `json:"incNamespace" tf:"inc_namespace,omitempty"`

	// (Boolean) If Product is enabled and has no value, it defaults to Base pod name
	// If Product is enabled and has no value, it defaults to Base pod name
	// +kubebuilder:validation:Optional
	IncProduct *bool `json:"incProduct" tf:"inc_product,omitempty"`

	// (Boolean) Stage
	// Stage
	// +kubebuilder:validation:Optional
	IncStage *bool `json:"incStage" tf:"inc_stage,omitempty"`
}

type KubernetesInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Define rules to merge similar Kubernetes workloads into process groups.
	// Define rules to merge similar Kubernetes workloads into process groups.
	//
	// You can use workload properties like namespace name, base pod name or container name as well as the [environment variables DT_RELEASE_STAGE and DT_RELEASE_PRODUCT](https://dt-url.net/sb02v2a) for grouping processes of similar workloads. The first applicable rule will be applied. If no rule matches, “Namespace name” + “Base pod name” + “Container name” is used as fallback.
	Filters []FiltersInitParameters `json:"filters,omitempty" tf:"filters,omitempty"`
}

type KubernetesObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Define rules to merge similar Kubernetes workloads into process groups.
	// Define rules to merge similar Kubernetes workloads into process groups.
	//
	// You can use workload properties like namespace name, base pod name or container name as well as the [environment variables DT_RELEASE_STAGE and DT_RELEASE_PRODUCT](https://dt-url.net/sb02v2a) for grouping processes of similar workloads. The first applicable rule will be applied. If no rule matches, “Namespace name” + “Base pod name” + “Container name” is used as fallback.
	Filters []FiltersObservation `json:"filters,omitempty" tf:"filters,omitempty"`
}

type KubernetesParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Define rules to merge similar Kubernetes workloads into process groups.
	// Define rules to merge similar Kubernetes workloads into process groups.
	//
	// You can use workload properties like namespace name, base pod name or container name as well as the [environment variables DT_RELEASE_STAGE and DT_RELEASE_PRODUCT](https://dt-url.net/sb02v2a) for grouping processes of similar workloads. The first applicable rule will be applied. If no rule matches, “Namespace name” + “Base pod name” + “Container name” is used as fallback.
	// +kubebuilder:validation:Optional
	Filters []FiltersParameters `json:"filters,omitempty" tf:"filters,omitempty"`
}

type MatchFilterInitParameters struct {

	// (String) Possible Values: CONTAINS, ENDS, EQUALS, EXISTS, NOT_CONTAINS, NOT_ENDS, NOT_EQUALS, NOT_STARTS, STARTS
	// Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_STARTS`, `STARTS`
	MatchOperator *string `json:"matchOperator,omitempty" tf:"match_operator,omitempty"`

	// (String) Namespace name
	// Namespace name
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type MatchFilterObservation struct {

	// (String) Possible Values: CONTAINS, ENDS, EQUALS, EXISTS, NOT_CONTAINS, NOT_ENDS, NOT_EQUALS, NOT_STARTS, STARTS
	// Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_STARTS`, `STARTS`
	MatchOperator *string `json:"matchOperator,omitempty" tf:"match_operator,omitempty"`

	// (String) Namespace name
	// Namespace name
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type MatchFilterParameters struct {

	// (String) Possible Values: CONTAINS, ENDS, EQUALS, EXISTS, NOT_CONTAINS, NOT_ENDS, NOT_EQUALS, NOT_STARTS, STARTS
	// Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_STARTS`, `STARTS`
	// +kubebuilder:validation:Optional
	MatchOperator *string `json:"matchOperator" tf:"match_operator,omitempty"`

	// (String) Namespace name
	// Namespace name
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type ServerlessInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ServerlessObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ServerlessParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`
}

// CloudappWorkloaddetectionSpec defines the desired state of CloudappWorkloaddetection
type CloudappWorkloaddetectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudappWorkloaddetectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudappWorkloaddetectionInitParameters `json:"initProvider,omitempty"`
}

// CloudappWorkloaddetectionStatus defines the observed state of CloudappWorkloaddetection.
type CloudappWorkloaddetectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudappWorkloaddetectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CloudappWorkloaddetection is the Schema for the CloudappWorkloaddetections API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CloudappWorkloaddetection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cloudFoundry) || (has(self.initProvider) && has(self.initProvider.cloudFoundry))",message="spec.forProvider.cloudFoundry is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.docker) || (has(self.initProvider) && has(self.initProvider.docker))",message="spec.forProvider.docker is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kubernetes) || (has(self.initProvider) && has(self.initProvider.kubernetes))",message="spec.forProvider.kubernetes is a required parameter"
	Spec   CloudappWorkloaddetectionSpec   `json:"spec"`
	Status CloudappWorkloaddetectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudappWorkloaddetectionList contains a list of CloudappWorkloaddetections
type CloudappWorkloaddetectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudappWorkloaddetection `json:"items"`
}

// Repository type metadata.
var (
	CloudappWorkloaddetection_Kind             = "CloudappWorkloaddetection"
	CloudappWorkloaddetection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudappWorkloaddetection_Kind}.String()
	CloudappWorkloaddetection_KindAPIVersion   = CloudappWorkloaddetection_Kind + "." + CRDGroupVersion.String()
	CloudappWorkloaddetection_GroupVersionKind = CRDGroupVersion.WithKind(CloudappWorkloaddetection_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudappWorkloaddetection{}, &CloudappWorkloaddetectionList{})
}
