//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoring) DeepCopyInto(out *BuiltinProcessMonitoring) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoring.
func (in *BuiltinProcessMonitoring) DeepCopy() *BuiltinProcessMonitoring {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuiltinProcessMonitoring) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringInitParameters) DeepCopyInto(out *BuiltinProcessMonitoringInitParameters) {
	*out = *in
	if in.Aspnetcore != nil {
		in, out := &in.Aspnetcore, &out.Aspnetcore
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentlistener != nil {
		in, out := &in.AspnetcoreAgentlistener, &out.AspnetcoreAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentworker != nil {
		in, out := &in.AspnetcoreAgentworker, &out.AspnetcoreAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.Cf != nil {
		in, out := &in.Cf, &out.Cf
		*out = new(bool)
		**out = **in
	}
	if in.CfAppsmanagerjs != nil {
		in, out := &in.CfAppsmanagerjs, &out.CfAppsmanagerjs
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(bool)
		**out = **in
	}
	if in.DockerPauseamd64 != nil {
		in, out := &in.DockerPauseamd64, &out.DockerPauseamd64
		*out = new(bool)
		**out = **in
	}
	if in.ExeAdapter != nil {
		in, out := &in.ExeAdapter, &out.ExeAdapter
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentlistener != nil {
		in, out := &in.ExeAgentlistener, &out.ExeAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentworker != nil {
		in, out := &in.ExeAgentworker, &out.ExeAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuctioneer != nil {
		in, out := &in.ExeAuctioneer, &out.ExeAuctioneer
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuditbeat != nil {
		in, out := &in.ExeAuditbeat, &out.ExeAuditbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeBbs != nil {
		in, out := &in.ExeBbs, &out.ExeBbs
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaddy != nil {
		in, out := &in.ExeCaddy, &out.ExeCaddy
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaliconode != nil {
		in, out := &in.ExeCaliconode, &out.ExeCaliconode
		*out = new(bool)
		**out = **in
	}
	if in.ExeCasclient != nil {
		in, out := &in.ExeCasclient, &out.ExeCasclient
		*out = new(bool)
		**out = **in
	}
	if in.ExeCcuploader != nil {
		in, out := &in.ExeCcuploader, &out.ExeCcuploader
		*out = new(bool)
		**out = **in
	}
	if in.ExeDoppler != nil {
		in, out := &in.ExeDoppler, &out.ExeDoppler
		*out = new(bool)
		**out = **in
	}
	if in.ExeFilebeat != nil {
		in, out := &in.ExeFilebeat, &out.ExeFilebeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetjobexecutorservice != nil {
		in, out := &in.ExeFlexnetjobexecutorservice, &out.ExeFlexnetjobexecutorservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetmaintenanceremotingservice != nil {
		in, out := &in.ExeFlexnetmaintenanceremotingservice, &out.ExeFlexnetmaintenanceremotingservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFunctionbeat != nil {
		in, out := &in.ExeFunctionbeat, &out.ExeFunctionbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeGorouter != nil {
		in, out := &in.ExeGorouter, &out.ExeGorouter
		*out = new(bool)
		**out = **in
	}
	if in.ExeGrootfs != nil {
		in, out := &in.ExeGrootfs, &out.ExeGrootfs
		*out = new(bool)
		**out = **in
	}
	if in.ExeHeartbeat != nil {
		in, out := &in.ExeHeartbeat, &out.ExeHeartbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeInfluxd != nil {
		in, out := &in.ExeInfluxd, &out.ExeInfluxd
		*out = new(bool)
		**out = **in
	}
	if in.ExeLocket != nil {
		in, out := &in.ExeLocket, &out.ExeLocket
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetricbeat != nil {
		in, out := &in.ExeMetricbeat, &out.ExeMetricbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetron != nil {
		in, out := &in.ExeMetron, &out.ExeMetron
		*out = new(bool)
		**out = **in
	}
	if in.ExeMqsi != nil {
		in, out := &in.ExeMqsi, &out.ExeMqsi
		*out = new(bool)
		**out = **in
	}
	if in.ExeOc != nil {
		in, out := &in.ExeOc, &out.ExeOc
		*out = new(bool)
		**out = **in
	}
	if in.ExeOpenhandlecollector != nil {
		in, out := &in.ExeOpenhandlecollector, &out.ExeOpenhandlecollector
		*out = new(bool)
		**out = **in
	}
	if in.ExeOptcnibinhostlocal != nil {
		in, out := &in.ExeOptcnibinhostlocal, &out.ExeOptcnibinhostlocal
		*out = new(bool)
		**out = **in
	}
	if in.ExePacketbeat != nil {
		in, out := &in.ExePacketbeat, &out.ExePacketbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExePhpcgi != nil {
		in, out := &in.ExePhpcgi, &out.ExePhpcgi
		*out = new(bool)
		**out = **in
	}
	if in.ExeRep != nil {
		in, out := &in.ExeRep, &out.ExeRep
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteemitter != nil {
		in, out := &in.ExeRouteemitter, &out.ExeRouteemitter
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteregistrar != nil {
		in, out := &in.ExeRouteregistrar, &out.ExeRouteregistrar
		*out = new(bool)
		**out = **in
	}
	if in.ExeRoutingapi != nil {
		in, out := &in.ExeRoutingapi, &out.ExeRoutingapi
		*out = new(bool)
		**out = **in
	}
	if in.ExeSchedular != nil {
		in, out := &in.ExeSchedular, &out.ExeSchedular
		*out = new(bool)
		**out = **in
	}
	if in.ExeSilkdaemon != nil {
		in, out := &in.ExeSilkdaemon, &out.ExeSilkdaemon
		*out = new(bool)
		**out = **in
	}
	if in.ExeSwitchboard != nil {
		in, out := &in.ExeSwitchboard, &out.ExeSwitchboard
		*out = new(bool)
		**out = **in
	}
	if in.ExeSyslogdrainbinder != nil {
		in, out := &in.ExeSyslogdrainbinder, &out.ExeSyslogdrainbinder
		*out = new(bool)
		**out = **in
	}
	if in.ExeTardis != nil {
		in, out := &in.ExeTardis, &out.ExeTardis
		*out = new(bool)
		**out = **in
	}
	if in.ExeTmpbuildpacks != nil {
		in, out := &in.ExeTmpbuildpacks, &out.ExeTmpbuildpacks
		*out = new(bool)
		**out = **in
	}
	if in.ExeTpswatcher != nil {
		in, out := &in.ExeTpswatcher, &out.ExeTpswatcher
		*out = new(bool)
		**out = **in
	}
	if in.ExeTrafficcontroller != nil {
		in, out := &in.ExeTrafficcontroller, &out.ExeTrafficcontroller
		*out = new(bool)
		**out = **in
	}
	if in.ExeUipath != nil {
		in, out := &in.ExeUipath, &out.ExeUipath
		*out = new(bool)
		**out = **in
	}
	if in.ExeUserbinpiper != nil {
		in, out := &in.ExeUserbinpiper, &out.ExeUserbinpiper
		*out = new(bool)
		**out = **in
	}
	if in.ExeW3Wp != nil {
		in, out := &in.ExeW3Wp, &out.ExeW3Wp
		*out = new(bool)
		**out = **in
	}
	if in.GoStatic != nil {
		in, out := &in.GoStatic, &out.GoStatic
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.JarDtibmmqconnector != nil {
		in, out := &in.JarDtibmmqconnector, &out.JarDtibmmqconnector
		*out = new(bool)
		**out = **in
	}
	if in.JarEclipseequinox != nil {
		in, out := &in.JarEclipseequinox, &out.JarEclipseequinox
		*out = new(bool)
		**out = **in
	}
	if in.K8SCassandraoperator != nil {
		in, out := &in.K8SCassandraoperator, &out.K8SCassandraoperator
		*out = new(bool)
		**out = **in
	}
	if in.K8SContainerpod != nil {
		in, out := &in.K8SContainerpod, &out.K8SContainerpod
		*out = new(bool)
		**out = **in
	}
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(bool)
		**out = **in
	}
	if in.NodeBinpm2 != nil {
		in, out := &in.NodeBinpm2, &out.NodeBinpm2
		*out = new(bool)
		**out = **in
	}
	if in.NodeCorepack != nil {
		in, out := &in.NodeCorepack, &out.NodeCorepack
		*out = new(bool)
		**out = **in
	}
	if in.NodeGrunt != nil {
		in, out := &in.NodeGrunt, &out.NodeGrunt
		*out = new(bool)
		**out = **in
	}
	if in.NodeGulpcli != nil {
		in, out := &in.NodeGulpcli, &out.NodeGulpcli
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodegyp != nil {
		in, out := &in.NodeNodegyp, &out.NodeNodegyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodepregyp != nil {
		in, out := &in.NodeNodepregyp, &out.NodeNodepregyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNpm != nil {
		in, out := &in.NodeNpm, &out.NodeNpm
		*out = new(bool)
		**out = **in
	}
	if in.NodePrebuildinstall != nil {
		in, out := &in.NodePrebuildinstall, &out.NodePrebuildinstall
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypescript != nil {
		in, out := &in.NodeTypescript, &out.NodeTypescript
		*out = new(bool)
		**out = **in
	}
	if in.NodeYarn != nil {
		in, out := &in.NodeYarn, &out.NodeYarn
		*out = new(bool)
		**out = **in
	}
	if in.PHPScript != nil {
		in, out := &in.PHPScript, &out.PHPScript
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringInitParameters.
func (in *BuiltinProcessMonitoringInitParameters) DeepCopy() *BuiltinProcessMonitoringInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringList) DeepCopyInto(out *BuiltinProcessMonitoringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BuiltinProcessMonitoring, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringList.
func (in *BuiltinProcessMonitoringList) DeepCopy() *BuiltinProcessMonitoringList {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuiltinProcessMonitoringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringObservation) DeepCopyInto(out *BuiltinProcessMonitoringObservation) {
	*out = *in
	if in.Aspnetcore != nil {
		in, out := &in.Aspnetcore, &out.Aspnetcore
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentlistener != nil {
		in, out := &in.AspnetcoreAgentlistener, &out.AspnetcoreAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentworker != nil {
		in, out := &in.AspnetcoreAgentworker, &out.AspnetcoreAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.Cf != nil {
		in, out := &in.Cf, &out.Cf
		*out = new(bool)
		**out = **in
	}
	if in.CfAppsmanagerjs != nil {
		in, out := &in.CfAppsmanagerjs, &out.CfAppsmanagerjs
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(bool)
		**out = **in
	}
	if in.DockerPauseamd64 != nil {
		in, out := &in.DockerPauseamd64, &out.DockerPauseamd64
		*out = new(bool)
		**out = **in
	}
	if in.ExeAdapter != nil {
		in, out := &in.ExeAdapter, &out.ExeAdapter
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentlistener != nil {
		in, out := &in.ExeAgentlistener, &out.ExeAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentworker != nil {
		in, out := &in.ExeAgentworker, &out.ExeAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuctioneer != nil {
		in, out := &in.ExeAuctioneer, &out.ExeAuctioneer
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuditbeat != nil {
		in, out := &in.ExeAuditbeat, &out.ExeAuditbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeBbs != nil {
		in, out := &in.ExeBbs, &out.ExeBbs
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaddy != nil {
		in, out := &in.ExeCaddy, &out.ExeCaddy
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaliconode != nil {
		in, out := &in.ExeCaliconode, &out.ExeCaliconode
		*out = new(bool)
		**out = **in
	}
	if in.ExeCasclient != nil {
		in, out := &in.ExeCasclient, &out.ExeCasclient
		*out = new(bool)
		**out = **in
	}
	if in.ExeCcuploader != nil {
		in, out := &in.ExeCcuploader, &out.ExeCcuploader
		*out = new(bool)
		**out = **in
	}
	if in.ExeDoppler != nil {
		in, out := &in.ExeDoppler, &out.ExeDoppler
		*out = new(bool)
		**out = **in
	}
	if in.ExeFilebeat != nil {
		in, out := &in.ExeFilebeat, &out.ExeFilebeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetjobexecutorservice != nil {
		in, out := &in.ExeFlexnetjobexecutorservice, &out.ExeFlexnetjobexecutorservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetmaintenanceremotingservice != nil {
		in, out := &in.ExeFlexnetmaintenanceremotingservice, &out.ExeFlexnetmaintenanceremotingservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFunctionbeat != nil {
		in, out := &in.ExeFunctionbeat, &out.ExeFunctionbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeGorouter != nil {
		in, out := &in.ExeGorouter, &out.ExeGorouter
		*out = new(bool)
		**out = **in
	}
	if in.ExeGrootfs != nil {
		in, out := &in.ExeGrootfs, &out.ExeGrootfs
		*out = new(bool)
		**out = **in
	}
	if in.ExeHeartbeat != nil {
		in, out := &in.ExeHeartbeat, &out.ExeHeartbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeInfluxd != nil {
		in, out := &in.ExeInfluxd, &out.ExeInfluxd
		*out = new(bool)
		**out = **in
	}
	if in.ExeLocket != nil {
		in, out := &in.ExeLocket, &out.ExeLocket
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetricbeat != nil {
		in, out := &in.ExeMetricbeat, &out.ExeMetricbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetron != nil {
		in, out := &in.ExeMetron, &out.ExeMetron
		*out = new(bool)
		**out = **in
	}
	if in.ExeMqsi != nil {
		in, out := &in.ExeMqsi, &out.ExeMqsi
		*out = new(bool)
		**out = **in
	}
	if in.ExeOc != nil {
		in, out := &in.ExeOc, &out.ExeOc
		*out = new(bool)
		**out = **in
	}
	if in.ExeOpenhandlecollector != nil {
		in, out := &in.ExeOpenhandlecollector, &out.ExeOpenhandlecollector
		*out = new(bool)
		**out = **in
	}
	if in.ExeOptcnibinhostlocal != nil {
		in, out := &in.ExeOptcnibinhostlocal, &out.ExeOptcnibinhostlocal
		*out = new(bool)
		**out = **in
	}
	if in.ExePacketbeat != nil {
		in, out := &in.ExePacketbeat, &out.ExePacketbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExePhpcgi != nil {
		in, out := &in.ExePhpcgi, &out.ExePhpcgi
		*out = new(bool)
		**out = **in
	}
	if in.ExeRep != nil {
		in, out := &in.ExeRep, &out.ExeRep
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteemitter != nil {
		in, out := &in.ExeRouteemitter, &out.ExeRouteemitter
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteregistrar != nil {
		in, out := &in.ExeRouteregistrar, &out.ExeRouteregistrar
		*out = new(bool)
		**out = **in
	}
	if in.ExeRoutingapi != nil {
		in, out := &in.ExeRoutingapi, &out.ExeRoutingapi
		*out = new(bool)
		**out = **in
	}
	if in.ExeSchedular != nil {
		in, out := &in.ExeSchedular, &out.ExeSchedular
		*out = new(bool)
		**out = **in
	}
	if in.ExeSilkdaemon != nil {
		in, out := &in.ExeSilkdaemon, &out.ExeSilkdaemon
		*out = new(bool)
		**out = **in
	}
	if in.ExeSwitchboard != nil {
		in, out := &in.ExeSwitchboard, &out.ExeSwitchboard
		*out = new(bool)
		**out = **in
	}
	if in.ExeSyslogdrainbinder != nil {
		in, out := &in.ExeSyslogdrainbinder, &out.ExeSyslogdrainbinder
		*out = new(bool)
		**out = **in
	}
	if in.ExeTardis != nil {
		in, out := &in.ExeTardis, &out.ExeTardis
		*out = new(bool)
		**out = **in
	}
	if in.ExeTmpbuildpacks != nil {
		in, out := &in.ExeTmpbuildpacks, &out.ExeTmpbuildpacks
		*out = new(bool)
		**out = **in
	}
	if in.ExeTpswatcher != nil {
		in, out := &in.ExeTpswatcher, &out.ExeTpswatcher
		*out = new(bool)
		**out = **in
	}
	if in.ExeTrafficcontroller != nil {
		in, out := &in.ExeTrafficcontroller, &out.ExeTrafficcontroller
		*out = new(bool)
		**out = **in
	}
	if in.ExeUipath != nil {
		in, out := &in.ExeUipath, &out.ExeUipath
		*out = new(bool)
		**out = **in
	}
	if in.ExeUserbinpiper != nil {
		in, out := &in.ExeUserbinpiper, &out.ExeUserbinpiper
		*out = new(bool)
		**out = **in
	}
	if in.ExeW3Wp != nil {
		in, out := &in.ExeW3Wp, &out.ExeW3Wp
		*out = new(bool)
		**out = **in
	}
	if in.GoStatic != nil {
		in, out := &in.GoStatic, &out.GoStatic
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JarDtibmmqconnector != nil {
		in, out := &in.JarDtibmmqconnector, &out.JarDtibmmqconnector
		*out = new(bool)
		**out = **in
	}
	if in.JarEclipseequinox != nil {
		in, out := &in.JarEclipseequinox, &out.JarEclipseequinox
		*out = new(bool)
		**out = **in
	}
	if in.K8SCassandraoperator != nil {
		in, out := &in.K8SCassandraoperator, &out.K8SCassandraoperator
		*out = new(bool)
		**out = **in
	}
	if in.K8SContainerpod != nil {
		in, out := &in.K8SContainerpod, &out.K8SContainerpod
		*out = new(bool)
		**out = **in
	}
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(bool)
		**out = **in
	}
	if in.NodeBinpm2 != nil {
		in, out := &in.NodeBinpm2, &out.NodeBinpm2
		*out = new(bool)
		**out = **in
	}
	if in.NodeCorepack != nil {
		in, out := &in.NodeCorepack, &out.NodeCorepack
		*out = new(bool)
		**out = **in
	}
	if in.NodeGrunt != nil {
		in, out := &in.NodeGrunt, &out.NodeGrunt
		*out = new(bool)
		**out = **in
	}
	if in.NodeGulpcli != nil {
		in, out := &in.NodeGulpcli, &out.NodeGulpcli
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodegyp != nil {
		in, out := &in.NodeNodegyp, &out.NodeNodegyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodepregyp != nil {
		in, out := &in.NodeNodepregyp, &out.NodeNodepregyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNpm != nil {
		in, out := &in.NodeNpm, &out.NodeNpm
		*out = new(bool)
		**out = **in
	}
	if in.NodePrebuildinstall != nil {
		in, out := &in.NodePrebuildinstall, &out.NodePrebuildinstall
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypescript != nil {
		in, out := &in.NodeTypescript, &out.NodeTypescript
		*out = new(bool)
		**out = **in
	}
	if in.NodeYarn != nil {
		in, out := &in.NodeYarn, &out.NodeYarn
		*out = new(bool)
		**out = **in
	}
	if in.PHPScript != nil {
		in, out := &in.PHPScript, &out.PHPScript
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringObservation.
func (in *BuiltinProcessMonitoringObservation) DeepCopy() *BuiltinProcessMonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringParameters) DeepCopyInto(out *BuiltinProcessMonitoringParameters) {
	*out = *in
	if in.Aspnetcore != nil {
		in, out := &in.Aspnetcore, &out.Aspnetcore
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentlistener != nil {
		in, out := &in.AspnetcoreAgentlistener, &out.AspnetcoreAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.AspnetcoreAgentworker != nil {
		in, out := &in.AspnetcoreAgentworker, &out.AspnetcoreAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.Cf != nil {
		in, out := &in.Cf, &out.Cf
		*out = new(bool)
		**out = **in
	}
	if in.CfAppsmanagerjs != nil {
		in, out := &in.CfAppsmanagerjs, &out.CfAppsmanagerjs
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(bool)
		**out = **in
	}
	if in.DockerPauseamd64 != nil {
		in, out := &in.DockerPauseamd64, &out.DockerPauseamd64
		*out = new(bool)
		**out = **in
	}
	if in.ExeAdapter != nil {
		in, out := &in.ExeAdapter, &out.ExeAdapter
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentlistener != nil {
		in, out := &in.ExeAgentlistener, &out.ExeAgentlistener
		*out = new(bool)
		**out = **in
	}
	if in.ExeAgentworker != nil {
		in, out := &in.ExeAgentworker, &out.ExeAgentworker
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuctioneer != nil {
		in, out := &in.ExeAuctioneer, &out.ExeAuctioneer
		*out = new(bool)
		**out = **in
	}
	if in.ExeAuditbeat != nil {
		in, out := &in.ExeAuditbeat, &out.ExeAuditbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeBbs != nil {
		in, out := &in.ExeBbs, &out.ExeBbs
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaddy != nil {
		in, out := &in.ExeCaddy, &out.ExeCaddy
		*out = new(bool)
		**out = **in
	}
	if in.ExeCaliconode != nil {
		in, out := &in.ExeCaliconode, &out.ExeCaliconode
		*out = new(bool)
		**out = **in
	}
	if in.ExeCasclient != nil {
		in, out := &in.ExeCasclient, &out.ExeCasclient
		*out = new(bool)
		**out = **in
	}
	if in.ExeCcuploader != nil {
		in, out := &in.ExeCcuploader, &out.ExeCcuploader
		*out = new(bool)
		**out = **in
	}
	if in.ExeDoppler != nil {
		in, out := &in.ExeDoppler, &out.ExeDoppler
		*out = new(bool)
		**out = **in
	}
	if in.ExeFilebeat != nil {
		in, out := &in.ExeFilebeat, &out.ExeFilebeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetjobexecutorservice != nil {
		in, out := &in.ExeFlexnetjobexecutorservice, &out.ExeFlexnetjobexecutorservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFlexnetmaintenanceremotingservice != nil {
		in, out := &in.ExeFlexnetmaintenanceremotingservice, &out.ExeFlexnetmaintenanceremotingservice
		*out = new(bool)
		**out = **in
	}
	if in.ExeFunctionbeat != nil {
		in, out := &in.ExeFunctionbeat, &out.ExeFunctionbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeGorouter != nil {
		in, out := &in.ExeGorouter, &out.ExeGorouter
		*out = new(bool)
		**out = **in
	}
	if in.ExeGrootfs != nil {
		in, out := &in.ExeGrootfs, &out.ExeGrootfs
		*out = new(bool)
		**out = **in
	}
	if in.ExeHeartbeat != nil {
		in, out := &in.ExeHeartbeat, &out.ExeHeartbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeInfluxd != nil {
		in, out := &in.ExeInfluxd, &out.ExeInfluxd
		*out = new(bool)
		**out = **in
	}
	if in.ExeLocket != nil {
		in, out := &in.ExeLocket, &out.ExeLocket
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetricbeat != nil {
		in, out := &in.ExeMetricbeat, &out.ExeMetricbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExeMetron != nil {
		in, out := &in.ExeMetron, &out.ExeMetron
		*out = new(bool)
		**out = **in
	}
	if in.ExeMqsi != nil {
		in, out := &in.ExeMqsi, &out.ExeMqsi
		*out = new(bool)
		**out = **in
	}
	if in.ExeOc != nil {
		in, out := &in.ExeOc, &out.ExeOc
		*out = new(bool)
		**out = **in
	}
	if in.ExeOpenhandlecollector != nil {
		in, out := &in.ExeOpenhandlecollector, &out.ExeOpenhandlecollector
		*out = new(bool)
		**out = **in
	}
	if in.ExeOptcnibinhostlocal != nil {
		in, out := &in.ExeOptcnibinhostlocal, &out.ExeOptcnibinhostlocal
		*out = new(bool)
		**out = **in
	}
	if in.ExePacketbeat != nil {
		in, out := &in.ExePacketbeat, &out.ExePacketbeat
		*out = new(bool)
		**out = **in
	}
	if in.ExePhpcgi != nil {
		in, out := &in.ExePhpcgi, &out.ExePhpcgi
		*out = new(bool)
		**out = **in
	}
	if in.ExeRep != nil {
		in, out := &in.ExeRep, &out.ExeRep
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteemitter != nil {
		in, out := &in.ExeRouteemitter, &out.ExeRouteemitter
		*out = new(bool)
		**out = **in
	}
	if in.ExeRouteregistrar != nil {
		in, out := &in.ExeRouteregistrar, &out.ExeRouteregistrar
		*out = new(bool)
		**out = **in
	}
	if in.ExeRoutingapi != nil {
		in, out := &in.ExeRoutingapi, &out.ExeRoutingapi
		*out = new(bool)
		**out = **in
	}
	if in.ExeSchedular != nil {
		in, out := &in.ExeSchedular, &out.ExeSchedular
		*out = new(bool)
		**out = **in
	}
	if in.ExeSilkdaemon != nil {
		in, out := &in.ExeSilkdaemon, &out.ExeSilkdaemon
		*out = new(bool)
		**out = **in
	}
	if in.ExeSwitchboard != nil {
		in, out := &in.ExeSwitchboard, &out.ExeSwitchboard
		*out = new(bool)
		**out = **in
	}
	if in.ExeSyslogdrainbinder != nil {
		in, out := &in.ExeSyslogdrainbinder, &out.ExeSyslogdrainbinder
		*out = new(bool)
		**out = **in
	}
	if in.ExeTardis != nil {
		in, out := &in.ExeTardis, &out.ExeTardis
		*out = new(bool)
		**out = **in
	}
	if in.ExeTmpbuildpacks != nil {
		in, out := &in.ExeTmpbuildpacks, &out.ExeTmpbuildpacks
		*out = new(bool)
		**out = **in
	}
	if in.ExeTpswatcher != nil {
		in, out := &in.ExeTpswatcher, &out.ExeTpswatcher
		*out = new(bool)
		**out = **in
	}
	if in.ExeTrafficcontroller != nil {
		in, out := &in.ExeTrafficcontroller, &out.ExeTrafficcontroller
		*out = new(bool)
		**out = **in
	}
	if in.ExeUipath != nil {
		in, out := &in.ExeUipath, &out.ExeUipath
		*out = new(bool)
		**out = **in
	}
	if in.ExeUserbinpiper != nil {
		in, out := &in.ExeUserbinpiper, &out.ExeUserbinpiper
		*out = new(bool)
		**out = **in
	}
	if in.ExeW3Wp != nil {
		in, out := &in.ExeW3Wp, &out.ExeW3Wp
		*out = new(bool)
		**out = **in
	}
	if in.GoStatic != nil {
		in, out := &in.GoStatic, &out.GoStatic
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.JarDtibmmqconnector != nil {
		in, out := &in.JarDtibmmqconnector, &out.JarDtibmmqconnector
		*out = new(bool)
		**out = **in
	}
	if in.JarEclipseequinox != nil {
		in, out := &in.JarEclipseequinox, &out.JarEclipseequinox
		*out = new(bool)
		**out = **in
	}
	if in.K8SCassandraoperator != nil {
		in, out := &in.K8SCassandraoperator, &out.K8SCassandraoperator
		*out = new(bool)
		**out = **in
	}
	if in.K8SContainerpod != nil {
		in, out := &in.K8SContainerpod, &out.K8SContainerpod
		*out = new(bool)
		**out = **in
	}
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(bool)
		**out = **in
	}
	if in.NodeBinpm2 != nil {
		in, out := &in.NodeBinpm2, &out.NodeBinpm2
		*out = new(bool)
		**out = **in
	}
	if in.NodeCorepack != nil {
		in, out := &in.NodeCorepack, &out.NodeCorepack
		*out = new(bool)
		**out = **in
	}
	if in.NodeGrunt != nil {
		in, out := &in.NodeGrunt, &out.NodeGrunt
		*out = new(bool)
		**out = **in
	}
	if in.NodeGulpcli != nil {
		in, out := &in.NodeGulpcli, &out.NodeGulpcli
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodegyp != nil {
		in, out := &in.NodeNodegyp, &out.NodeNodegyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNodepregyp != nil {
		in, out := &in.NodeNodepregyp, &out.NodeNodepregyp
		*out = new(bool)
		**out = **in
	}
	if in.NodeNpm != nil {
		in, out := &in.NodeNpm, &out.NodeNpm
		*out = new(bool)
		**out = **in
	}
	if in.NodePrebuildinstall != nil {
		in, out := &in.NodePrebuildinstall, &out.NodePrebuildinstall
		*out = new(bool)
		**out = **in
	}
	if in.NodeTypescript != nil {
		in, out := &in.NodeTypescript, &out.NodeTypescript
		*out = new(bool)
		**out = **in
	}
	if in.NodeYarn != nil {
		in, out := &in.NodeYarn, &out.NodeYarn
		*out = new(bool)
		**out = **in
	}
	if in.PHPScript != nil {
		in, out := &in.PHPScript, &out.PHPScript
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringParameters.
func (in *BuiltinProcessMonitoringParameters) DeepCopy() *BuiltinProcessMonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringSpec) DeepCopyInto(out *BuiltinProcessMonitoringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringSpec.
func (in *BuiltinProcessMonitoringSpec) DeepCopy() *BuiltinProcessMonitoringSpec {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuiltinProcessMonitoringStatus) DeepCopyInto(out *BuiltinProcessMonitoringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuiltinProcessMonitoringStatus.
func (in *BuiltinProcessMonitoringStatus) DeepCopy() *BuiltinProcessMonitoringStatus {
	if in == nil {
		return nil
	}
	out := new(BuiltinProcessMonitoringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionInitParameters) DeepCopyInto(out *ConditionInitParameters) {
	*out = *in
	if in.EnvVar != nil {
		in, out := &in.EnvVar, &out.EnvVar
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionInitParameters.
func (in *ConditionInitParameters) DeepCopy() *ConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.EnvVar != nil {
		in, out := &in.EnvVar, &out.EnvVar
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.EnvVar != nil {
		in, out := &in.EnvVar, &out.EnvVar
		*out = new(string)
		**out = **in
	}
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostMetadataConditionInitParameters) DeepCopyInto(out *HostMetadataConditionInitParameters) {
	*out = *in
	if in.KeyMustExist != nil {
		in, out := &in.KeyMustExist, &out.KeyMustExist
		*out = new(bool)
		**out = **in
	}
	if in.MetadataCondition != nil {
		in, out := &in.MetadataCondition, &out.MetadataCondition
		*out = new(string)
		**out = **in
	}
	if in.MetadataKey != nil {
		in, out := &in.MetadataKey, &out.MetadataKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostMetadataConditionInitParameters.
func (in *HostMetadataConditionInitParameters) DeepCopy() *HostMetadataConditionInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostMetadataConditionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostMetadataConditionObservation) DeepCopyInto(out *HostMetadataConditionObservation) {
	*out = *in
	if in.KeyMustExist != nil {
		in, out := &in.KeyMustExist, &out.KeyMustExist
		*out = new(bool)
		**out = **in
	}
	if in.MetadataCondition != nil {
		in, out := &in.MetadataCondition, &out.MetadataCondition
		*out = new(string)
		**out = **in
	}
	if in.MetadataKey != nil {
		in, out := &in.MetadataKey, &out.MetadataKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostMetadataConditionObservation.
func (in *HostMetadataConditionObservation) DeepCopy() *HostMetadataConditionObservation {
	if in == nil {
		return nil
	}
	out := new(HostMetadataConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostMetadataConditionParameters) DeepCopyInto(out *HostMetadataConditionParameters) {
	*out = *in
	if in.KeyMustExist != nil {
		in, out := &in.KeyMustExist, &out.KeyMustExist
		*out = new(bool)
		**out = **in
	}
	if in.MetadataCondition != nil {
		in, out := &in.MetadataCondition, &out.MetadataCondition
		*out = new(string)
		**out = **in
	}
	if in.MetadataKey != nil {
		in, out := &in.MetadataKey, &out.MetadataKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostMetadataConditionParameters.
func (in *HostMetadataConditionParameters) DeepCopy() *HostMetadataConditionParameters {
	if in == nil {
		return nil
	}
	out := new(HostMetadataConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemInitParameters) DeepCopyInto(out *ItemInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemInitParameters.
func (in *ItemInitParameters) DeepCopy() *ItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(ItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemObservation) DeepCopyInto(out *ItemObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemObservation.
func (in *ItemObservation) DeepCopy() *ItemObservation {
	if in == nil {
		return nil
	}
	out := new(ItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ItemParameters) DeepCopyInto(out *ItemParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ItemParameters.
func (in *ItemParameters) DeepCopy() *ItemParameters {
	if in == nil {
		return nil
	}
	out := new(ItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.Item != nil {
		in, out := &in.Item, &out.Item
		*out = make([]ItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailability) DeepCopyInto(out *ProcessAvailability) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailability.
func (in *ProcessAvailability) DeepCopy() *ProcessAvailability {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailability)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessAvailability) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilityInitParameters) DeepCopyInto(out *ProcessAvailabilityInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcesses != nil {
		in, out := &in.MinimumProcesses, &out.MinimumProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilityInitParameters.
func (in *ProcessAvailabilityInitParameters) DeepCopy() *ProcessAvailabilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilityList) DeepCopyInto(out *ProcessAvailabilityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProcessAvailability, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilityList.
func (in *ProcessAvailabilityList) DeepCopy() *ProcessAvailabilityList {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessAvailabilityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilityObservation) DeepCopyInto(out *ProcessAvailabilityObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcesses != nil {
		in, out := &in.MinimumProcesses, &out.MinimumProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilityObservation.
func (in *ProcessAvailabilityObservation) DeepCopy() *ProcessAvailabilityObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilityParameters) DeepCopyInto(out *ProcessAvailabilityParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinimumProcesses != nil {
		in, out := &in.MinimumProcesses, &out.MinimumProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilityParameters.
func (in *ProcessAvailabilityParameters) DeepCopy() *ProcessAvailabilityParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilitySpec) DeepCopyInto(out *ProcessAvailabilitySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilitySpec.
func (in *ProcessAvailabilitySpec) DeepCopy() *ProcessAvailabilitySpec {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessAvailabilityStatus) DeepCopyInto(out *ProcessAvailabilityStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessAvailabilityStatus.
func (in *ProcessAvailabilityStatus) DeepCopy() *ProcessAvailabilityStatus {
	if in == nil {
		return nil
	}
	out := new(ProcessAvailabilityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoring) DeepCopyInto(out *ProcessMonitoring) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoring.
func (in *ProcessMonitoring) DeepCopy() *ProcessMonitoring {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessMonitoring) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringInitParameters) DeepCopyInto(out *ProcessMonitoringInitParameters) {
	*out = *in
	if in.AutoMonitoring != nil {
		in, out := &in.AutoMonitoring, &out.AutoMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringInitParameters.
func (in *ProcessMonitoringInitParameters) DeepCopy() *ProcessMonitoringInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringList) DeepCopyInto(out *ProcessMonitoringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProcessMonitoring, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringList.
func (in *ProcessMonitoringList) DeepCopy() *ProcessMonitoringList {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessMonitoringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringObservation) DeepCopyInto(out *ProcessMonitoringObservation) {
	*out = *in
	if in.AutoMonitoring != nil {
		in, out := &in.AutoMonitoring, &out.AutoMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringObservation.
func (in *ProcessMonitoringObservation) DeepCopy() *ProcessMonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringParameters) DeepCopyInto(out *ProcessMonitoringParameters) {
	*out = *in
	if in.AutoMonitoring != nil {
		in, out := &in.AutoMonitoring, &out.AutoMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringParameters.
func (in *ProcessMonitoringParameters) DeepCopy() *ProcessMonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRule) DeepCopyInto(out *ProcessMonitoringRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRule.
func (in *ProcessMonitoringRule) DeepCopy() *ProcessMonitoringRule {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessMonitoringRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleInitParameters) DeepCopyInto(out *ProcessMonitoringRuleInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleInitParameters.
func (in *ProcessMonitoringRuleInitParameters) DeepCopy() *ProcessMonitoringRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleList) DeepCopyInto(out *ProcessMonitoringRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProcessMonitoringRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleList.
func (in *ProcessMonitoringRuleList) DeepCopy() *ProcessMonitoringRuleList {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessMonitoringRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleObservation) DeepCopyInto(out *ProcessMonitoringRuleObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleObservation.
func (in *ProcessMonitoringRuleObservation) DeepCopy() *ProcessMonitoringRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleParameters) DeepCopyInto(out *ProcessMonitoringRuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HostGroupID != nil {
		in, out := &in.HostGroupID, &out.HostGroupID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleParameters.
func (in *ProcessMonitoringRuleParameters) DeepCopy() *ProcessMonitoringRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleSpec) DeepCopyInto(out *ProcessMonitoringRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleSpec.
func (in *ProcessMonitoringRuleSpec) DeepCopy() *ProcessMonitoringRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringRuleStatus) DeepCopyInto(out *ProcessMonitoringRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringRuleStatus.
func (in *ProcessMonitoringRuleStatus) DeepCopy() *ProcessMonitoringRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringSpec) DeepCopyInto(out *ProcessMonitoringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringSpec.
func (in *ProcessMonitoringSpec) DeepCopy() *ProcessMonitoringSpec {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessMonitoringStatus) DeepCopyInto(out *ProcessMonitoringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessMonitoringStatus.
func (in *ProcessMonitoringStatus) DeepCopy() *ProcessMonitoringStatus {
	if in == nil {
		return nil
	}
	out := new(ProcessMonitoringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibility) DeepCopyInto(out *ProcessVisibility) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibility.
func (in *ProcessVisibility) DeepCopy() *ProcessVisibility {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibility)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessVisibility) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilityInitParameters) DeepCopyInto(out *ProcessVisibilityInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxProcesses != nil {
		in, out := &in.MaxProcesses, &out.MaxProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilityInitParameters.
func (in *ProcessVisibilityInitParameters) DeepCopy() *ProcessVisibilityInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilityList) DeepCopyInto(out *ProcessVisibilityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProcessVisibility, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilityList.
func (in *ProcessVisibilityList) DeepCopy() *ProcessVisibilityList {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProcessVisibilityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilityObservation) DeepCopyInto(out *ProcessVisibilityObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxProcesses != nil {
		in, out := &in.MaxProcesses, &out.MaxProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilityObservation.
func (in *ProcessVisibilityObservation) DeepCopy() *ProcessVisibilityObservation {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilityParameters) DeepCopyInto(out *ProcessVisibilityParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxProcesses != nil {
		in, out := &in.MaxProcesses, &out.MaxProcesses
		*out = new(float64)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilityParameters.
func (in *ProcessVisibilityParameters) DeepCopy() *ProcessVisibilityParameters {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilitySpec) DeepCopyInto(out *ProcessVisibilitySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilitySpec.
func (in *ProcessVisibilitySpec) DeepCopy() *ProcessVisibilitySpec {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessVisibilityStatus) DeepCopyInto(out *ProcessVisibilityStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessVisibilityStatus.
func (in *ProcessVisibilityStatus) DeepCopy() *ProcessVisibilityStatus {
	if in == nil {
		return nil
	}
	out := new(ProcessVisibilityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.HostMetadataCondition != nil {
		in, out := &in.HostMetadataCondition, &out.HostMetadataCondition
		*out = make([]HostMetadataConditionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.HostMetadataCondition != nil {
		in, out := &in.HostMetadataCondition, &out.HostMetadataCondition
		*out = make([]HostMetadataConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.HostMetadataCondition != nil {
		in, out := &in.HostMetadataCondition, &out.HostMetadataCondition
		*out = make([]HostMetadataConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}
