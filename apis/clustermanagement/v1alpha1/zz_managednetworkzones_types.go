// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagedNetworkZonesInitParameters struct {

	// (List of String) A list of alternative network zones.
	// A list of alternative network zones.
	AlternativeZones []*string `json:"alternativeZones,omitempty" tf:"alternative_zones,omitempty"`

	// (String) A short description of the network zone
	// A short description of the network zone
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The fallback mode of the network zone. Possible values: ANY_ACTIVE_GATE, NONE, ONLY_DEFAULT_ZONE
	// The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`
	FallbackMode *string `json:"fallbackMode,omitempty" tf:"fallback_mode,omitempty"`

	// (String) Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	// Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The number of ActiveGates in the network zone.
	// The number of ActiveGates in the network zone.
	NumOfConfiguredActivegates *float64 `json:"numOfConfiguredActivegates,omitempty" tf:"num_of_configured_activegates,omitempty"`

	// (Number) The number of OneAgents that are configured to use the network zone as primary.
	// The number of OneAgents that are configured to use the network zone as primary.
	NumOfConfiguredOneagents *float64 `json:"numOfConfiguredOneagents,omitempty" tf:"num_of_configured_oneagents,omitempty"`

	// (Number) The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	// The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	NumOfOneagentsFromOtherZones *float64 `json:"numOfOneagentsFromOtherZones,omitempty" tf:"num_of_oneagents_from_other_zones,omitempty"`

	// (Number) The number of OneAgents that are using ActiveGates in the network zone.
	// The number of OneAgents that are using ActiveGates in the network zone.
	NumOfOneagentsUsing *float64 `json:"numOfOneagentsUsing,omitempty" tf:"num_of_oneagents_using,omitempty"`
}

type ManagedNetworkZonesObservation struct {

	// (List of String) A list of alternative network zones.
	// A list of alternative network zones.
	AlternativeZones []*string `json:"alternativeZones,omitempty" tf:"alternative_zones,omitempty"`

	// (String) A short description of the network zone
	// A short description of the network zone
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The fallback mode of the network zone. Possible values: ANY_ACTIVE_GATE, NONE, ONLY_DEFAULT_ZONE
	// The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`
	FallbackMode *string `json:"fallbackMode,omitempty" tf:"fallback_mode,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	// Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The number of ActiveGates in the network zone.
	// The number of ActiveGates in the network zone.
	NumOfConfiguredActivegates *float64 `json:"numOfConfiguredActivegates,omitempty" tf:"num_of_configured_activegates,omitempty"`

	// (Number) The number of OneAgents that are configured to use the network zone as primary.
	// The number of OneAgents that are configured to use the network zone as primary.
	NumOfConfiguredOneagents *float64 `json:"numOfConfiguredOneagents,omitempty" tf:"num_of_configured_oneagents,omitempty"`

	// (Number) The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	// The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	NumOfOneagentsFromOtherZones *float64 `json:"numOfOneagentsFromOtherZones,omitempty" tf:"num_of_oneagents_from_other_zones,omitempty"`

	// (Number) The number of OneAgents that are using ActiveGates in the network zone.
	// The number of OneAgents that are using ActiveGates in the network zone.
	NumOfOneagentsUsing *float64 `json:"numOfOneagentsUsing,omitempty" tf:"num_of_oneagents_using,omitempty"`
}

type ManagedNetworkZonesParameters struct {

	// (List of String) A list of alternative network zones.
	// A list of alternative network zones.
	// +kubebuilder:validation:Optional
	AlternativeZones []*string `json:"alternativeZones,omitempty" tf:"alternative_zones,omitempty"`

	// (String) A short description of the network zone
	// A short description of the network zone
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The fallback mode of the network zone. Possible values: ANY_ACTIVE_GATE, NONE, ONLY_DEFAULT_ZONE
	// The fallback mode of the network zone. Possible values: `ANY_ACTIVE_GATE`, `NONE`, `ONLY_DEFAULT_ZONE`
	// +kubebuilder:validation:Optional
	FallbackMode *string `json:"fallbackMode,omitempty" tf:"fallback_mode,omitempty"`

	// (String) Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	// Name of the network zone cannot be modified once created. Dynatrace stores the field in lowercase, allowed characters: alphanumeric, hyphen, underscore, dot
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) The number of ActiveGates in the network zone.
	// The number of ActiveGates in the network zone.
	// +kubebuilder:validation:Optional
	NumOfConfiguredActivegates *float64 `json:"numOfConfiguredActivegates,omitempty" tf:"num_of_configured_activegates,omitempty"`

	// (Number) The number of OneAgents that are configured to use the network zone as primary.
	// The number of OneAgents that are configured to use the network zone as primary.
	// +kubebuilder:validation:Optional
	NumOfConfiguredOneagents *float64 `json:"numOfConfiguredOneagents,omitempty" tf:"num_of_configured_oneagents,omitempty"`

	// (Number) The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	// The number of OneAgents from other network zones that are using ActiveGates in the network zone.
	// +kubebuilder:validation:Optional
	NumOfOneagentsFromOtherZones *float64 `json:"numOfOneagentsFromOtherZones,omitempty" tf:"num_of_oneagents_from_other_zones,omitempty"`

	// (Number) The number of OneAgents that are using ActiveGates in the network zone.
	// The number of OneAgents that are using ActiveGates in the network zone.
	// +kubebuilder:validation:Optional
	NumOfOneagentsUsing *float64 `json:"numOfOneagentsUsing,omitempty" tf:"num_of_oneagents_using,omitempty"`
}

// ManagedNetworkZonesSpec defines the desired state of ManagedNetworkZones
type ManagedNetworkZonesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagedNetworkZonesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ManagedNetworkZonesInitParameters `json:"initProvider,omitempty"`
}

// ManagedNetworkZonesStatus defines the observed state of ManagedNetworkZones.
type ManagedNetworkZonesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagedNetworkZonesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ManagedNetworkZones is the Schema for the ManagedNetworkZoness API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ManagedNetworkZones struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagedNetworkZonesSpec   `json:"spec"`
	Status            ManagedNetworkZonesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagedNetworkZonesList contains a list of ManagedNetworkZoness
type ManagedNetworkZonesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedNetworkZones `json:"items"`
}

// Repository type metadata.
var (
	ManagedNetworkZones_Kind             = "ManagedNetworkZones"
	ManagedNetworkZones_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagedNetworkZones_Kind}.String()
	ManagedNetworkZones_KindAPIVersion   = ManagedNetworkZones_Kind + "." + CRDGroupVersion.String()
	ManagedNetworkZones_GroupVersionKind = CRDGroupVersion.WithKind(ManagedNetworkZones_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagedNetworkZones{}, &ManagedNetworkZonesList{})
}
