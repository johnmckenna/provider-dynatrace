// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagedBackupInitParameters struct {

	// (Number) Cassandra backup bandwidth limit in Mbps
	// Cassandra backup bandwidth limit in Mbps
	BandwidthLimitMbits *float64 `json:"bandwidthLimitMbits,omitempty" tf:"bandwidth_limit_mbits,omitempty"`

	// (Number) Hour to start Cassandra backups each day.
	// Hour to start Cassandra backups each day.
	CassandraScheduledTime *float64 `json:"cassandraScheduledTime,omitempty" tf:"cassandra_scheduled_time,omitempty"`

	// (String) For internal use: current state of rules in JSON format
	// For internal use: current state of rules in JSON format
	CurrentState *string `json:"currentState,omitempty" tf:"current_state,omitempty"`

	// (String) Datacenter which will create backups
	// Datacenter which will create backups
	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	// (Boolean) Backups are enabled (true) or disabled (false).
	// Backups are enabled (true) or disabled (false).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean) Include (true) or exclude (false) Log Monitoring v2 data
	// Include (true) or exclude (false) Log Monitoring v2 data
	IncludeLm20Data *bool `json:"includeLm20Data,omitempty" tf:"include_lm20_data,omitempty"`

	// (Boolean) Include user sessions (true) or GDPR compliance (false)
	// Include user sessions (true) or GDPR compliance (false)
	IncludeRumData *bool `json:"includeRumData,omitempty" tf:"include_rum_data,omitempty"`

	// data (true) or retain configuration data only (false))
	// Include time series metric-data (true) or retain configuration data only (false))
	IncludeTSMetricData *bool `json:"includeTsMetricData,omitempty" tf:"include_ts_metric_data,omitempty"`

	// (Number) Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	// Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	MaxEsSnapshotsToClean *float64 `json:"maxEsSnapshotsToClean,omitempty" tf:"max_es_snapshots_to_clean,omitempty"`

	// (Boolean) Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	// Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	PauseBackups *bool `json:"pauseBackups,omitempty" tf:"pause_backups,omitempty"`

	// (String) A full path to the backup archive
	// A full path to the backup archive
	StoragePath *string `json:"storagePath,omitempty" tf:"storage_path,omitempty"`
}

type ManagedBackupObservation struct {

	// (Number) Cassandra backup bandwidth limit in Mbps
	// Cassandra backup bandwidth limit in Mbps
	BandwidthLimitMbits *float64 `json:"bandwidthLimitMbits,omitempty" tf:"bandwidth_limit_mbits,omitempty"`

	// (Number) Hour to start Cassandra backups each day.
	// Hour to start Cassandra backups each day.
	CassandraScheduledTime *float64 `json:"cassandraScheduledTime,omitempty" tf:"cassandra_scheduled_time,omitempty"`

	// (String) For internal use: current state of rules in JSON format
	// For internal use: current state of rules in JSON format
	CurrentState *string `json:"currentState,omitempty" tf:"current_state,omitempty"`

	// (String) Datacenter which will create backups
	// Datacenter which will create backups
	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	// (Boolean) Backups are enabled (true) or disabled (false).
	// Backups are enabled (true) or disabled (false).
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Include (true) or exclude (false) Log Monitoring v2 data
	// Include (true) or exclude (false) Log Monitoring v2 data
	IncludeLm20Data *bool `json:"includeLm20Data,omitempty" tf:"include_lm20_data,omitempty"`

	// (Boolean) Include user sessions (true) or GDPR compliance (false)
	// Include user sessions (true) or GDPR compliance (false)
	IncludeRumData *bool `json:"includeRumData,omitempty" tf:"include_rum_data,omitempty"`

	// data (true) or retain configuration data only (false))
	// Include time series metric-data (true) or retain configuration data only (false))
	IncludeTSMetricData *bool `json:"includeTsMetricData,omitempty" tf:"include_ts_metric_data,omitempty"`

	// (Number) Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	// Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	MaxEsSnapshotsToClean *float64 `json:"maxEsSnapshotsToClean,omitempty" tf:"max_es_snapshots_to_clean,omitempty"`

	// (Boolean) Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	// Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	PauseBackups *bool `json:"pauseBackups,omitempty" tf:"pause_backups,omitempty"`

	// (String) A full path to the backup archive
	// A full path to the backup archive
	StoragePath *string `json:"storagePath,omitempty" tf:"storage_path,omitempty"`
}

type ManagedBackupParameters struct {

	// (Number) Cassandra backup bandwidth limit in Mbps
	// Cassandra backup bandwidth limit in Mbps
	// +kubebuilder:validation:Optional
	BandwidthLimitMbits *float64 `json:"bandwidthLimitMbits,omitempty" tf:"bandwidth_limit_mbits,omitempty"`

	// (Number) Hour to start Cassandra backups each day.
	// Hour to start Cassandra backups each day.
	// +kubebuilder:validation:Optional
	CassandraScheduledTime *float64 `json:"cassandraScheduledTime,omitempty" tf:"cassandra_scheduled_time,omitempty"`

	// (String) For internal use: current state of rules in JSON format
	// For internal use: current state of rules in JSON format
	// +kubebuilder:validation:Optional
	CurrentState *string `json:"currentState,omitempty" tf:"current_state,omitempty"`

	// (String) Datacenter which will create backups
	// Datacenter which will create backups
	// +kubebuilder:validation:Optional
	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter,omitempty"`

	// (Boolean) Backups are enabled (true) or disabled (false).
	// Backups are enabled (true) or disabled (false).
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean) Include (true) or exclude (false) Log Monitoring v2 data
	// Include (true) or exclude (false) Log Monitoring v2 data
	// +kubebuilder:validation:Optional
	IncludeLm20Data *bool `json:"includeLm20Data,omitempty" tf:"include_lm20_data,omitempty"`

	// (Boolean) Include user sessions (true) or GDPR compliance (false)
	// Include user sessions (true) or GDPR compliance (false)
	// +kubebuilder:validation:Optional
	IncludeRumData *bool `json:"includeRumData,omitempty" tf:"include_rum_data,omitempty"`

	// data (true) or retain configuration data only (false))
	// Include time series metric-data (true) or retain configuration data only (false))
	// +kubebuilder:validation:Optional
	IncludeTSMetricData *bool `json:"includeTsMetricData,omitempty" tf:"include_ts_metric_data,omitempty"`

	// (Number) Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	// Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.
	// +kubebuilder:validation:Optional
	MaxEsSnapshotsToClean *float64 `json:"maxEsSnapshotsToClean,omitempty" tf:"max_es_snapshots_to_clean,omitempty"`

	// (Boolean) Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	// Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.
	// +kubebuilder:validation:Optional
	PauseBackups *bool `json:"pauseBackups,omitempty" tf:"pause_backups,omitempty"`

	// (String) A full path to the backup archive
	// A full path to the backup archive
	// +kubebuilder:validation:Optional
	StoragePath *string `json:"storagePath,omitempty" tf:"storage_path,omitempty"`
}

// ManagedBackupSpec defines the desired state of ManagedBackup
type ManagedBackupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagedBackupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ManagedBackupInitParameters `json:"initProvider,omitempty"`
}

// ManagedBackupStatus defines the observed state of ManagedBackup.
type ManagedBackupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagedBackupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ManagedBackup is the Schema for the ManagedBackups API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ManagedBackup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cassandraScheduledTime) || (has(self.initProvider) && has(self.initProvider.cassandraScheduledTime))",message="spec.forProvider.cassandraScheduledTime is a required parameter"
	Spec   ManagedBackupSpec   `json:"spec"`
	Status ManagedBackupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagedBackupList contains a list of ManagedBackups
type ManagedBackupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedBackup `json:"items"`
}

// Repository type metadata.
var (
	ManagedBackup_Kind             = "ManagedBackup"
	ManagedBackup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagedBackup_Kind}.String()
	ManagedBackup_KindAPIVersion   = ManagedBackup_Kind + "." + CRDGroupVersion.String()
	ManagedBackup_GroupVersionKind = CRDGroupVersion.WithKind(ManagedBackup_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagedBackup{}, &ManagedBackupList{})
}
