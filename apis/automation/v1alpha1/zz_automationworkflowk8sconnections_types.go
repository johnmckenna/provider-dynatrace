// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutomationWorkflowK8SConnectionsInitParameters struct {

	// (String, Deprecated) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) The name of the EdgeConnect deployment
	// The name of the EdgeConnect deployment
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The namespace where EdgeConnect is deployed
	// The namespace where EdgeConnect is deployed
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (String, Sensitive) Token
	// Token
	TokenSecretRef v1.SecretKeySelector `json:"tokenSecretRef" tf:"-"`

	// ID for the cluster, set to the UID of the kube-system namespace
	// A pseudo-ID for the cluster, set to the UID of the kube-system namespace
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type AutomationWorkflowK8SConnectionsObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String, Deprecated) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) The name of the EdgeConnect deployment
	// The name of the EdgeConnect deployment
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The namespace where EdgeConnect is deployed
	// The namespace where EdgeConnect is deployed
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// ID for the cluster, set to the UID of the kube-system namespace
	// A pseudo-ID for the cluster, set to the UID of the kube-system namespace
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

type AutomationWorkflowK8SConnectionsParameters struct {

	// (String, Deprecated) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) The name of the EdgeConnect deployment
	// The name of the EdgeConnect deployment
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The namespace where EdgeConnect is deployed
	// The namespace where EdgeConnect is deployed
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (String, Sensitive) Token
	// Token
	// +kubebuilder:validation:Optional
	TokenSecretRef v1.SecretKeySelector `json:"tokenSecretRef" tf:"-"`

	// ID for the cluster, set to the UID of the kube-system namespace
	// A pseudo-ID for the cluster, set to the UID of the kube-system namespace
	// +kubebuilder:validation:Optional
	UID *string `json:"uid,omitempty" tf:"uid,omitempty"`
}

// AutomationWorkflowK8SConnectionsSpec defines the desired state of AutomationWorkflowK8SConnections
type AutomationWorkflowK8SConnectionsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutomationWorkflowK8SConnectionsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutomationWorkflowK8SConnectionsInitParameters `json:"initProvider,omitempty"`
}

// AutomationWorkflowK8SConnectionsStatus defines the observed state of AutomationWorkflowK8SConnections.
type AutomationWorkflowK8SConnectionsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutomationWorkflowK8SConnectionsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutomationWorkflowK8SConnections is the Schema for the AutomationWorkflowK8SConnectionss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type AutomationWorkflowK8SConnections struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.__namespace__) || (has(self.initProvider) && has(self.initProvider.__namespace__))",message="spec.forProvider.namespace is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tokenSecretRef)",message="spec.forProvider.tokenSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.uid) || (has(self.initProvider) && has(self.initProvider.uid))",message="spec.forProvider.uid is a required parameter"
	Spec   AutomationWorkflowK8SConnectionsSpec   `json:"spec"`
	Status AutomationWorkflowK8SConnectionsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutomationWorkflowK8SConnectionsList contains a list of AutomationWorkflowK8SConnectionss
type AutomationWorkflowK8SConnectionsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutomationWorkflowK8SConnections `json:"items"`
}

// Repository type metadata.
var (
	AutomationWorkflowK8SConnections_Kind             = "AutomationWorkflowK8SConnections"
	AutomationWorkflowK8SConnections_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutomationWorkflowK8SConnections_Kind}.String()
	AutomationWorkflowK8SConnections_KindAPIVersion   = AutomationWorkflowK8SConnections_Kind + "." + CRDGroupVersion.String()
	AutomationWorkflowK8SConnections_GroupVersionKind = CRDGroupVersion.WithKind(AutomationWorkflowK8SConnections_Kind)
)

func init() {
	SchemeBuilder.Register(&AutomationWorkflowK8SConnections{}, &AutomationWorkflowK8SConnectionsList{})
}
