//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendar) DeepCopyInto(out *AutomationBusinessCalendar) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendar.
func (in *AutomationBusinessCalendar) DeepCopy() *AutomationBusinessCalendar {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationBusinessCalendar) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarInitParameters) DeepCopyInto(out *AutomationBusinessCalendarInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Holidays != nil {
		in, out := &in.Holidays, &out.Holidays
		*out = make([]HolidaysInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidTo != nil {
		in, out := &in.ValidTo, &out.ValidTo
		*out = new(string)
		**out = **in
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarInitParameters.
func (in *AutomationBusinessCalendarInitParameters) DeepCopy() *AutomationBusinessCalendarInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarList) DeepCopyInto(out *AutomationBusinessCalendarList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationBusinessCalendar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarList.
func (in *AutomationBusinessCalendarList) DeepCopy() *AutomationBusinessCalendarList {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationBusinessCalendarList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarObservation) DeepCopyInto(out *AutomationBusinessCalendarObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Holidays != nil {
		in, out := &in.Holidays, &out.Holidays
		*out = make([]HolidaysObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidTo != nil {
		in, out := &in.ValidTo, &out.ValidTo
		*out = new(string)
		**out = **in
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarObservation.
func (in *AutomationBusinessCalendarObservation) DeepCopy() *AutomationBusinessCalendarObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarParameters) DeepCopyInto(out *AutomationBusinessCalendarParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Holidays != nil {
		in, out := &in.Holidays, &out.Holidays
		*out = make([]HolidaysParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.ValidFrom != nil {
		in, out := &in.ValidFrom, &out.ValidFrom
		*out = new(string)
		**out = **in
	}
	if in.ValidTo != nil {
		in, out := &in.ValidTo, &out.ValidTo
		*out = new(string)
		**out = **in
	}
	if in.WeekDays != nil {
		in, out := &in.WeekDays, &out.WeekDays
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.WeekStart != nil {
		in, out := &in.WeekStart, &out.WeekStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarParameters.
func (in *AutomationBusinessCalendarParameters) DeepCopy() *AutomationBusinessCalendarParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarSpec) DeepCopyInto(out *AutomationBusinessCalendarSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarSpec.
func (in *AutomationBusinessCalendarSpec) DeepCopy() *AutomationBusinessCalendarSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationBusinessCalendarStatus) DeepCopyInto(out *AutomationBusinessCalendarStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationBusinessCalendarStatus.
func (in *AutomationBusinessCalendarStatus) DeepCopy() *AutomationBusinessCalendarStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationBusinessCalendarStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRule) DeepCopyInto(out *AutomationSchedulingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRule.
func (in *AutomationSchedulingRule) DeepCopy() *AutomationSchedulingRule {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationSchedulingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleInitParameters) DeepCopyInto(out *AutomationSchedulingRuleInitParameters) {
	*out = *in
	if in.BusinessCalendar != nil {
		in, out := &in.BusinessCalendar, &out.BusinessCalendar
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FixedOffset != nil {
		in, out := &in.FixedOffset, &out.FixedOffset
		*out = make([]FixedOffsetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Grouping != nil {
		in, out := &in.Grouping, &out.Grouping
		*out = make([]GroupingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RelativeOffset != nil {
		in, out := &in.RelativeOffset, &out.RelativeOffset
		*out = make([]RelativeOffsetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleInitParameters.
func (in *AutomationSchedulingRuleInitParameters) DeepCopy() *AutomationSchedulingRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleList) DeepCopyInto(out *AutomationSchedulingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationSchedulingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleList.
func (in *AutomationSchedulingRuleList) DeepCopy() *AutomationSchedulingRuleList {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationSchedulingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleObservation) DeepCopyInto(out *AutomationSchedulingRuleObservation) {
	*out = *in
	if in.BusinessCalendar != nil {
		in, out := &in.BusinessCalendar, &out.BusinessCalendar
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FixedOffset != nil {
		in, out := &in.FixedOffset, &out.FixedOffset
		*out = make([]FixedOffsetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Grouping != nil {
		in, out := &in.Grouping, &out.Grouping
		*out = make([]GroupingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RelativeOffset != nil {
		in, out := &in.RelativeOffset, &out.RelativeOffset
		*out = make([]RelativeOffsetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleObservation.
func (in *AutomationSchedulingRuleObservation) DeepCopy() *AutomationSchedulingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleParameters) DeepCopyInto(out *AutomationSchedulingRuleParameters) {
	*out = *in
	if in.BusinessCalendar != nil {
		in, out := &in.BusinessCalendar, &out.BusinessCalendar
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FixedOffset != nil {
		in, out := &in.FixedOffset, &out.FixedOffset
		*out = make([]FixedOffsetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Grouping != nil {
		in, out := &in.Grouping, &out.Grouping
		*out = make([]GroupingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Recurrence != nil {
		in, out := &in.Recurrence, &out.Recurrence
		*out = make([]RecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RelativeOffset != nil {
		in, out := &in.RelativeOffset, &out.RelativeOffset
		*out = make([]RelativeOffsetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleParameters.
func (in *AutomationSchedulingRuleParameters) DeepCopy() *AutomationSchedulingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleSpec) DeepCopyInto(out *AutomationSchedulingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleSpec.
func (in *AutomationSchedulingRuleSpec) DeepCopy() *AutomationSchedulingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationSchedulingRuleStatus) DeepCopyInto(out *AutomationSchedulingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationSchedulingRuleStatus.
func (in *AutomationSchedulingRuleStatus) DeepCopy() *AutomationSchedulingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationSchedulingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflow) DeepCopyInto(out *AutomationWorkflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflow.
func (in *AutomationWorkflow) DeepCopy() *AutomationWorkflow {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnections) DeepCopyInto(out *AutomationWorkflowAwsConnections) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnections.
func (in *AutomationWorkflowAwsConnections) DeepCopy() *AutomationWorkflowAwsConnections {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnections)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowAwsConnections) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsInitParameters) DeepCopyInto(out *AutomationWorkflowAwsConnectionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WebIdentity != nil {
		in, out := &in.WebIdentity, &out.WebIdentity
		*out = make([]WebIdentityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsInitParameters.
func (in *AutomationWorkflowAwsConnectionsInitParameters) DeepCopy() *AutomationWorkflowAwsConnectionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsList) DeepCopyInto(out *AutomationWorkflowAwsConnectionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationWorkflowAwsConnections, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsList.
func (in *AutomationWorkflowAwsConnectionsList) DeepCopy() *AutomationWorkflowAwsConnectionsList {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowAwsConnectionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsObservation) DeepCopyInto(out *AutomationWorkflowAwsConnectionsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WebIdentity != nil {
		in, out := &in.WebIdentity, &out.WebIdentity
		*out = make([]WebIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsObservation.
func (in *AutomationWorkflowAwsConnectionsObservation) DeepCopy() *AutomationWorkflowAwsConnectionsObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsParameters) DeepCopyInto(out *AutomationWorkflowAwsConnectionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WebIdentity != nil {
		in, out := &in.WebIdentity, &out.WebIdentity
		*out = make([]WebIdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsParameters.
func (in *AutomationWorkflowAwsConnectionsParameters) DeepCopy() *AutomationWorkflowAwsConnectionsParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsSpec) DeepCopyInto(out *AutomationWorkflowAwsConnectionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsSpec.
func (in *AutomationWorkflowAwsConnectionsSpec) DeepCopy() *AutomationWorkflowAwsConnectionsSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowAwsConnectionsStatus) DeepCopyInto(out *AutomationWorkflowAwsConnectionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowAwsConnectionsStatus.
func (in *AutomationWorkflowAwsConnectionsStatus) DeepCopy() *AutomationWorkflowAwsConnectionsStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowAwsConnectionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowInitParameters) DeepCopyInto(out *AutomationWorkflowInitParameters) {
	*out = *in
	if in.Actor != nil {
		in, out := &in.Actor, &out.Actor
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowInitParameters.
func (in *AutomationWorkflowInitParameters) DeepCopy() *AutomationWorkflowInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJira) DeepCopyInto(out *AutomationWorkflowJira) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJira.
func (in *AutomationWorkflowJira) DeepCopy() *AutomationWorkflowJira {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJira)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowJira) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraInitParameters) DeepCopyInto(out *AutomationWorkflowJiraInitParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraInitParameters.
func (in *AutomationWorkflowJiraInitParameters) DeepCopy() *AutomationWorkflowJiraInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraList) DeepCopyInto(out *AutomationWorkflowJiraList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationWorkflowJira, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraList.
func (in *AutomationWorkflowJiraList) DeepCopy() *AutomationWorkflowJiraList {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowJiraList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraObservation) DeepCopyInto(out *AutomationWorkflowJiraObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraObservation.
func (in *AutomationWorkflowJiraObservation) DeepCopy() *AutomationWorkflowJiraObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraParameters) DeepCopyInto(out *AutomationWorkflowJiraParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraParameters.
func (in *AutomationWorkflowJiraParameters) DeepCopy() *AutomationWorkflowJiraParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraSpec) DeepCopyInto(out *AutomationWorkflowJiraSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraSpec.
func (in *AutomationWorkflowJiraSpec) DeepCopy() *AutomationWorkflowJiraSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowJiraStatus) DeepCopyInto(out *AutomationWorkflowJiraStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowJiraStatus.
func (in *AutomationWorkflowJiraStatus) DeepCopy() *AutomationWorkflowJiraStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowJiraStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnections) DeepCopyInto(out *AutomationWorkflowK8SConnections) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnections.
func (in *AutomationWorkflowK8SConnections) DeepCopy() *AutomationWorkflowK8SConnections {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnections)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowK8SConnections) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsInitParameters) DeepCopyInto(out *AutomationWorkflowK8SConnectionsInitParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsInitParameters.
func (in *AutomationWorkflowK8SConnectionsInitParameters) DeepCopy() *AutomationWorkflowK8SConnectionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsList) DeepCopyInto(out *AutomationWorkflowK8SConnectionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationWorkflowK8SConnections, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsList.
func (in *AutomationWorkflowK8SConnectionsList) DeepCopy() *AutomationWorkflowK8SConnectionsList {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowK8SConnectionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsObservation) DeepCopyInto(out *AutomationWorkflowK8SConnectionsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsObservation.
func (in *AutomationWorkflowK8SConnectionsObservation) DeepCopy() *AutomationWorkflowK8SConnectionsObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsParameters) DeepCopyInto(out *AutomationWorkflowK8SConnectionsParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsParameters.
func (in *AutomationWorkflowK8SConnectionsParameters) DeepCopy() *AutomationWorkflowK8SConnectionsParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsSpec) DeepCopyInto(out *AutomationWorkflowK8SConnectionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsSpec.
func (in *AutomationWorkflowK8SConnectionsSpec) DeepCopy() *AutomationWorkflowK8SConnectionsSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowK8SConnectionsStatus) DeepCopyInto(out *AutomationWorkflowK8SConnectionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowK8SConnectionsStatus.
func (in *AutomationWorkflowK8SConnectionsStatus) DeepCopy() *AutomationWorkflowK8SConnectionsStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowK8SConnectionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowList) DeepCopyInto(out *AutomationWorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationWorkflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowList.
func (in *AutomationWorkflowList) DeepCopy() *AutomationWorkflowList {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowObservation) DeepCopyInto(out *AutomationWorkflowObservation) {
	*out = *in
	if in.Actor != nil {
		in, out := &in.Actor, &out.Actor
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowObservation.
func (in *AutomationWorkflowObservation) DeepCopy() *AutomationWorkflowObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowParameters) DeepCopyInto(out *AutomationWorkflowParameters) {
	*out = *in
	if in.Actor != nil {
		in, out := &in.Actor, &out.Actor
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(bool)
		**out = **in
	}
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]TasksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowParameters.
func (in *AutomationWorkflowParameters) DeepCopy() *AutomationWorkflowParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlack) DeepCopyInto(out *AutomationWorkflowSlack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlack.
func (in *AutomationWorkflowSlack) DeepCopy() *AutomationWorkflowSlack {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowSlack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackInitParameters) DeepCopyInto(out *AutomationWorkflowSlackInitParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackInitParameters.
func (in *AutomationWorkflowSlackInitParameters) DeepCopy() *AutomationWorkflowSlackInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackList) DeepCopyInto(out *AutomationWorkflowSlackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutomationWorkflowSlack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackList.
func (in *AutomationWorkflowSlackList) DeepCopy() *AutomationWorkflowSlackList {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutomationWorkflowSlackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackObservation) DeepCopyInto(out *AutomationWorkflowSlackObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackObservation.
func (in *AutomationWorkflowSlackObservation) DeepCopy() *AutomationWorkflowSlackObservation {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackParameters) DeepCopyInto(out *AutomationWorkflowSlackParameters) {
	*out = *in
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackParameters.
func (in *AutomationWorkflowSlackParameters) DeepCopy() *AutomationWorkflowSlackParameters {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackSpec) DeepCopyInto(out *AutomationWorkflowSlackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackSpec.
func (in *AutomationWorkflowSlackSpec) DeepCopy() *AutomationWorkflowSlackSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSlackStatus) DeepCopyInto(out *AutomationWorkflowSlackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSlackStatus.
func (in *AutomationWorkflowSlackStatus) DeepCopy() *AutomationWorkflowSlackStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSlackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowSpec) DeepCopyInto(out *AutomationWorkflowSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowSpec.
func (in *AutomationWorkflowSpec) DeepCopy() *AutomationWorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutomationWorkflowStatus) DeepCopyInto(out *AutomationWorkflowStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutomationWorkflowStatus.
func (in *AutomationWorkflowStatus) DeepCopy() *AutomationWorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(AutomationWorkflowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoriesInitParameters) DeepCopyInto(out *CategoriesInitParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(bool)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(bool)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(bool)
		**out = **in
	}
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringUnavailable != nil {
		in, out := &in.MonitoringUnavailable, &out.MonitoringUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(bool)
		**out = **in
	}
	if in.Slowdown != nil {
		in, out := &in.Slowdown, &out.Slowdown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoriesInitParameters.
func (in *CategoriesInitParameters) DeepCopy() *CategoriesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CategoriesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoriesObservation) DeepCopyInto(out *CategoriesObservation) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(bool)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(bool)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(bool)
		**out = **in
	}
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringUnavailable != nil {
		in, out := &in.MonitoringUnavailable, &out.MonitoringUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(bool)
		**out = **in
	}
	if in.Slowdown != nil {
		in, out := &in.Slowdown, &out.Slowdown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoriesObservation.
func (in *CategoriesObservation) DeepCopy() *CategoriesObservation {
	if in == nil {
		return nil
	}
	out := new(CategoriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoriesParameters) DeepCopyInto(out *CategoriesParameters) {
	*out = *in
	if in.Availability != nil {
		in, out := &in.Availability, &out.Availability
		*out = new(bool)
		**out = **in
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(bool)
		**out = **in
	}
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(bool)
		**out = **in
	}
	if in.Info != nil {
		in, out := &in.Info, &out.Info
		*out = new(bool)
		**out = **in
	}
	if in.MonitoringUnavailable != nil {
		in, out := &in.MonitoringUnavailable, &out.MonitoringUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(bool)
		**out = **in
	}
	if in.Slowdown != nil {
		in, out := &in.Slowdown, &out.Slowdown
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoriesParameters.
func (in *CategoriesParameters) DeepCopy() *CategoriesParameters {
	if in == nil {
		return nil
	}
	out := new(CategoriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsInitParameters) DeepCopyInto(out *ConditionsInitParameters) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(string)
		**out = **in
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = new(string)
		**out = **in
	}
	if in.States != nil {
		in, out := &in.States, &out.States
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsInitParameters.
func (in *ConditionsInitParameters) DeepCopy() *ConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(string)
		**out = **in
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = new(string)
		**out = **in
	}
	if in.States != nil {
		in, out := &in.States, &out.States
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(string)
		**out = **in
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = new(string)
		**out = **in
	}
	if in.States != nil {
		in, out := &in.States, &out.States
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEventInitParameters) DeepCopyInto(out *ConfigEventInitParameters) {
	*out = *in
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEventInitParameters.
func (in *ConfigEventInitParameters) DeepCopy() *ConfigEventInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEventObservation) DeepCopyInto(out *ConfigEventObservation) {
	*out = *in
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEventObservation.
func (in *ConfigEventObservation) DeepCopy() *ConfigEventObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigEventParameters) DeepCopyInto(out *ConfigEventParameters) {
	*out = *in
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigEventParameters.
func (in *ConfigEventParameters) DeepCopy() *ConfigEventParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.DavisEvent != nil {
		in, out := &in.DavisEvent, &out.DavisEvent
		*out = make([]DavisEventInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DavisProblem != nil {
		in, out := &in.DavisProblem, &out.DavisProblem
		*out = make([]DavisProblemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]ConfigEventInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.DavisEvent != nil {
		in, out := &in.DavisEvent, &out.DavisEvent
		*out = make([]DavisEventObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DavisProblem != nil {
		in, out := &in.DavisProblem, &out.DavisProblem
		*out = make([]DavisProblemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]ConfigEventObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.DavisEvent != nil {
		in, out := &in.DavisEvent, &out.DavisEvent
		*out = make([]DavisEventParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DavisProblem != nil {
		in, out := &in.DavisProblem, &out.DavisProblem
		*out = make([]DavisProblemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]ConfigEventParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisEventInitParameters) DeepCopyInto(out *DavisEventInitParameters) {
	*out = *in
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisEventInitParameters.
func (in *DavisEventInitParameters) DeepCopy() *DavisEventInitParameters {
	if in == nil {
		return nil
	}
	out := new(DavisEventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisEventObservation) DeepCopyInto(out *DavisEventObservation) {
	*out = *in
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisEventObservation.
func (in *DavisEventObservation) DeepCopy() *DavisEventObservation {
	if in == nil {
		return nil
	}
	out := new(DavisEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisEventParameters) DeepCopyInto(out *DavisEventParameters) {
	*out = *in
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisEventParameters.
func (in *DavisEventParameters) DeepCopy() *DavisEventParameters {
	if in == nil {
		return nil
	}
	out := new(DavisEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisProblemInitParameters) DeepCopyInto(out *DavisProblemInitParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]CategoriesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilter != nil {
		in, out := &in.CustomFilter, &out.CustomFilter
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisProblemInitParameters.
func (in *DavisProblemInitParameters) DeepCopy() *DavisProblemInitParameters {
	if in == nil {
		return nil
	}
	out := new(DavisProblemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisProblemObservation) DeepCopyInto(out *DavisProblemObservation) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]CategoriesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilter != nil {
		in, out := &in.CustomFilter, &out.CustomFilter
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisProblemObservation.
func (in *DavisProblemObservation) DeepCopy() *DavisProblemObservation {
	if in == nil {
		return nil
	}
	out := new(DavisProblemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DavisProblemParameters) DeepCopyInto(out *DavisProblemParameters) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]CategoriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilter != nil {
		in, out := &in.CustomFilter, &out.CustomFilter
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EntityTagsMatch != nil {
		in, out := &in.EntityTagsMatch, &out.EntityTagsMatch
		*out = new(string)
		**out = **in
	}
	if in.OnProblemClose != nil {
		in, out := &in.OnProblemClose, &out.OnProblemClose
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DavisProblemParameters.
func (in *DavisProblemParameters) DeepCopy() *DavisProblemParameters {
	if in == nil {
		return nil
	}
	out := new(DavisProblemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventInitParameters) DeepCopyInto(out *EventInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventInitParameters.
func (in *EventInitParameters) DeepCopy() *EventInitParameters {
	if in == nil {
		return nil
	}
	out := new(EventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventObservation) DeepCopyInto(out *EventObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventObservation.
func (in *EventObservation) DeepCopy() *EventObservation {
	if in == nil {
		return nil
	}
	out := new(EventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventParameters) DeepCopyInto(out *EventParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventParameters.
func (in *EventParameters) DeepCopy() *EventParameters {
	if in == nil {
		return nil
	}
	out := new(EventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParametersInitParameters) DeepCopyInto(out *FilterParametersInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EarliestStart != nil {
		in, out := &in.EarliestStart, &out.EarliestStart
		*out = new(string)
		**out = **in
	}
	if in.EarliestStartTime != nil {
		in, out := &in.EarliestStartTime, &out.EarliestStartTime
		*out = new(string)
		**out = **in
	}
	if in.ExcludeDates != nil {
		in, out := &in.ExcludeDates, &out.ExcludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeDates != nil {
		in, out := &in.IncludeDates, &out.IncludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Until != nil {
		in, out := &in.Until, &out.Until
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParametersInitParameters.
func (in *FilterParametersInitParameters) DeepCopy() *FilterParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParametersObservation) DeepCopyInto(out *FilterParametersObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EarliestStart != nil {
		in, out := &in.EarliestStart, &out.EarliestStart
		*out = new(string)
		**out = **in
	}
	if in.EarliestStartTime != nil {
		in, out := &in.EarliestStartTime, &out.EarliestStartTime
		*out = new(string)
		**out = **in
	}
	if in.ExcludeDates != nil {
		in, out := &in.ExcludeDates, &out.ExcludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeDates != nil {
		in, out := &in.IncludeDates, &out.IncludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Until != nil {
		in, out := &in.Until, &out.Until
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParametersObservation.
func (in *FilterParametersObservation) DeepCopy() *FilterParametersObservation {
	if in == nil {
		return nil
	}
	out := new(FilterParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParametersParameters) DeepCopyInto(out *FilterParametersParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EarliestStart != nil {
		in, out := &in.EarliestStart, &out.EarliestStart
		*out = new(string)
		**out = **in
	}
	if in.EarliestStartTime != nil {
		in, out := &in.EarliestStartTime, &out.EarliestStartTime
		*out = new(string)
		**out = **in
	}
	if in.ExcludeDates != nil {
		in, out := &in.ExcludeDates, &out.ExcludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeDates != nil {
		in, out := &in.IncludeDates, &out.IncludeDates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Until != nil {
		in, out := &in.Until, &out.Until
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParametersParameters.
func (in *FilterParametersParameters) DeepCopy() *FilterParametersParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedOffsetInitParameters) DeepCopyInto(out *FixedOffsetInitParameters) {
	*out = *in
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedOffsetInitParameters.
func (in *FixedOffsetInitParameters) DeepCopy() *FixedOffsetInitParameters {
	if in == nil {
		return nil
	}
	out := new(FixedOffsetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedOffsetObservation) DeepCopyInto(out *FixedOffsetObservation) {
	*out = *in
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedOffsetObservation.
func (in *FixedOffsetObservation) DeepCopy() *FixedOffsetObservation {
	if in == nil {
		return nil
	}
	out := new(FixedOffsetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedOffsetParameters) DeepCopyInto(out *FixedOffsetParameters) {
	*out = *in
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedOffsetParameters.
func (in *FixedOffsetParameters) DeepCopy() *FixedOffsetParameters {
	if in == nil {
		return nil
	}
	out := new(FixedOffsetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupingInitParameters) DeepCopyInto(out *GroupingInitParameters) {
	*out = *in
	if in.Combine != nil {
		in, out := &in.Combine, &out.Combine
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Intersect != nil {
		in, out := &in.Intersect, &out.Intersect
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subtract != nil {
		in, out := &in.Subtract, &out.Subtract
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupingInitParameters.
func (in *GroupingInitParameters) DeepCopy() *GroupingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupingObservation) DeepCopyInto(out *GroupingObservation) {
	*out = *in
	if in.Combine != nil {
		in, out := &in.Combine, &out.Combine
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Intersect != nil {
		in, out := &in.Intersect, &out.Intersect
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subtract != nil {
		in, out := &in.Subtract, &out.Subtract
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupingObservation.
func (in *GroupingObservation) DeepCopy() *GroupingObservation {
	if in == nil {
		return nil
	}
	out := new(GroupingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupingParameters) DeepCopyInto(out *GroupingParameters) {
	*out = *in
	if in.Combine != nil {
		in, out := &in.Combine, &out.Combine
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Intersect != nil {
		in, out := &in.Intersect, &out.Intersect
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subtract != nil {
		in, out := &in.Subtract, &out.Subtract
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupingParameters.
func (in *GroupingParameters) DeepCopy() *GroupingParameters {
	if in == nil {
		return nil
	}
	out := new(GroupingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidayInitParameters) DeepCopyInto(out *HolidayInitParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidayInitParameters.
func (in *HolidayInitParameters) DeepCopy() *HolidayInitParameters {
	if in == nil {
		return nil
	}
	out := new(HolidayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidayObservation) DeepCopyInto(out *HolidayObservation) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidayObservation.
func (in *HolidayObservation) DeepCopy() *HolidayObservation {
	if in == nil {
		return nil
	}
	out := new(HolidayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidayParameters) DeepCopyInto(out *HolidayParameters) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidayParameters.
func (in *HolidayParameters) DeepCopy() *HolidayParameters {
	if in == nil {
		return nil
	}
	out := new(HolidayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidaysInitParameters) DeepCopyInto(out *HolidaysInitParameters) {
	*out = *in
	if in.Holiday != nil {
		in, out := &in.Holiday, &out.Holiday
		*out = make([]HolidayInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidaysInitParameters.
func (in *HolidaysInitParameters) DeepCopy() *HolidaysInitParameters {
	if in == nil {
		return nil
	}
	out := new(HolidaysInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidaysObservation) DeepCopyInto(out *HolidaysObservation) {
	*out = *in
	if in.Holiday != nil {
		in, out := &in.Holiday, &out.Holiday
		*out = make([]HolidayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidaysObservation.
func (in *HolidaysObservation) DeepCopy() *HolidaysObservation {
	if in == nil {
		return nil
	}
	out := new(HolidaysObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HolidaysParameters) DeepCopyInto(out *HolidaysParameters) {
	*out = *in
	if in.Holiday != nil {
		in, out := &in.Holiday, &out.Holiday
		*out = make([]HolidayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HolidaysParameters.
func (in *HolidaysParameters) DeepCopy() *HolidaysParameters {
	if in == nil {
		return nil
	}
	out := new(HolidaysParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectiveInitParameters) DeepCopyInto(out *ObjectiveInitParameters) {
	*out = *in
	if in.AutoAdaptiveThresholdEnabled != nil {
		in, out := &in.AutoAdaptiveThresholdEnabled, &out.AutoAdaptiveThresholdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComparisonOperator != nil {
		in, out := &in.ComparisonOperator, &out.ComparisonOperator
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DqlQuery != nil {
		in, out := &in.DqlQuery, &out.DqlQuery
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectiveType != nil {
		in, out := &in.ObjectiveType, &out.ObjectiveType
		*out = new(string)
		**out = **in
	}
	if in.ReferenceSLO != nil {
		in, out := &in.ReferenceSLO, &out.ReferenceSLO
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Warning != nil {
		in, out := &in.Warning, &out.Warning
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectiveInitParameters.
func (in *ObjectiveInitParameters) DeepCopy() *ObjectiveInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectiveInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectiveObservation) DeepCopyInto(out *ObjectiveObservation) {
	*out = *in
	if in.AutoAdaptiveThresholdEnabled != nil {
		in, out := &in.AutoAdaptiveThresholdEnabled, &out.AutoAdaptiveThresholdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComparisonOperator != nil {
		in, out := &in.ComparisonOperator, &out.ComparisonOperator
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DqlQuery != nil {
		in, out := &in.DqlQuery, &out.DqlQuery
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectiveType != nil {
		in, out := &in.ObjectiveType, &out.ObjectiveType
		*out = new(string)
		**out = **in
	}
	if in.ReferenceSLO != nil {
		in, out := &in.ReferenceSLO, &out.ReferenceSLO
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Warning != nil {
		in, out := &in.Warning, &out.Warning
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectiveObservation.
func (in *ObjectiveObservation) DeepCopy() *ObjectiveObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectiveObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectiveParameters) DeepCopyInto(out *ObjectiveParameters) {
	*out = *in
	if in.AutoAdaptiveThresholdEnabled != nil {
		in, out := &in.AutoAdaptiveThresholdEnabled, &out.AutoAdaptiveThresholdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ComparisonOperator != nil {
		in, out := &in.ComparisonOperator, &out.ComparisonOperator
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DqlQuery != nil {
		in, out := &in.DqlQuery, &out.DqlQuery
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectiveType != nil {
		in, out := &in.ObjectiveType, &out.ObjectiveType
		*out = new(string)
		**out = **in
	}
	if in.ReferenceSLO != nil {
		in, out := &in.ReferenceSLO, &out.ReferenceSLO
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(float64)
		**out = **in
	}
	if in.Warning != nil {
		in, out := &in.Warning, &out.Warning
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectiveParameters.
func (in *ObjectiveParameters) DeepCopy() *ObjectiveParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectiveParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectivesInitParameters) DeepCopyInto(out *ObjectivesInitParameters) {
	*out = *in
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = make([]ObjectiveInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectivesInitParameters.
func (in *ObjectivesInitParameters) DeepCopy() *ObjectivesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectivesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectivesObservation) DeepCopyInto(out *ObjectivesObservation) {
	*out = *in
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = make([]ObjectiveObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectivesObservation.
func (in *ObjectivesObservation) DeepCopy() *ObjectivesObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectivesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectivesParameters) DeepCopyInto(out *ObjectivesParameters) {
	*out = *in
	if in.Objective != nil {
		in, out := &in.Objective, &out.Objective
		*out = make([]ObjectiveParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectivesParameters.
func (in *ObjectivesParameters) DeepCopy() *ObjectivesParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectivesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionInitParameters) DeepCopyInto(out *PositionInitParameters) {
	*out = *in
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionInitParameters.
func (in *PositionInitParameters) DeepCopy() *PositionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PositionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionObservation) DeepCopyInto(out *PositionObservation) {
	*out = *in
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionObservation.
func (in *PositionObservation) DeepCopy() *PositionObservation {
	if in == nil {
		return nil
	}
	out := new(PositionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PositionParameters) DeepCopyInto(out *PositionParameters) {
	*out = *in
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PositionParameters.
func (in *PositionParameters) DeepCopy() *PositionParameters {
	if in == nil {
		return nil
	}
	out := new(PositionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceInitParameters) DeepCopyInto(out *RecurrenceInitParameters) {
	*out = *in
	if in.Datestart != nil {
		in, out := &in.Datestart, &out.Datestart
		*out = new(string)
		**out = **in
	}
	if in.DaysInMonth != nil {
		in, out := &in.DaysInMonth, &out.DaysInMonth
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DaysInYear != nil {
		in, out := &in.DaysInYear, &out.DaysInYear
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Easter != nil {
		in, out := &in.Easter, &out.Easter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Weekdays != nil {
		in, out := &in.Weekdays, &out.Weekdays
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weeks != nil {
		in, out := &in.Weeks, &out.Weeks
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Workdays != nil {
		in, out := &in.Workdays, &out.Workdays
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceInitParameters.
func (in *RecurrenceInitParameters) DeepCopy() *RecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceObservation) DeepCopyInto(out *RecurrenceObservation) {
	*out = *in
	if in.Datestart != nil {
		in, out := &in.Datestart, &out.Datestart
		*out = new(string)
		**out = **in
	}
	if in.DaysInMonth != nil {
		in, out := &in.DaysInMonth, &out.DaysInMonth
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DaysInYear != nil {
		in, out := &in.DaysInYear, &out.DaysInYear
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Easter != nil {
		in, out := &in.Easter, &out.Easter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Weekdays != nil {
		in, out := &in.Weekdays, &out.Weekdays
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weeks != nil {
		in, out := &in.Weeks, &out.Weeks
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Workdays != nil {
		in, out := &in.Workdays, &out.Workdays
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceObservation.
func (in *RecurrenceObservation) DeepCopy() *RecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(RecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceParameters) DeepCopyInto(out *RecurrenceParameters) {
	*out = *in
	if in.Datestart != nil {
		in, out := &in.Datestart, &out.Datestart
		*out = new(string)
		**out = **in
	}
	if in.DaysInMonth != nil {
		in, out := &in.DaysInMonth, &out.DaysInMonth
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.DaysInYear != nil {
		in, out := &in.DaysInYear, &out.DaysInYear
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Easter != nil {
		in, out := &in.Easter, &out.Easter
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Months != nil {
		in, out := &in.Months, &out.Months
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Weekdays != nil {
		in, out := &in.Weekdays, &out.Weekdays
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Weeks != nil {
		in, out := &in.Weeks, &out.Weeks
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Workdays != nil {
		in, out := &in.Workdays, &out.Workdays
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceParameters.
func (in *RecurrenceParameters) DeepCopy() *RecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelativeOffsetInitParameters) DeepCopyInto(out *RelativeOffsetInitParameters) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.SourceRule != nil {
		in, out := &in.SourceRule, &out.SourceRule
		*out = new(string)
		**out = **in
	}
	if in.TargetRule != nil {
		in, out := &in.TargetRule, &out.TargetRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelativeOffsetInitParameters.
func (in *RelativeOffsetInitParameters) DeepCopy() *RelativeOffsetInitParameters {
	if in == nil {
		return nil
	}
	out := new(RelativeOffsetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelativeOffsetObservation) DeepCopyInto(out *RelativeOffsetObservation) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.SourceRule != nil {
		in, out := &in.SourceRule, &out.SourceRule
		*out = new(string)
		**out = **in
	}
	if in.TargetRule != nil {
		in, out := &in.TargetRule, &out.TargetRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelativeOffsetObservation.
func (in *RelativeOffsetObservation) DeepCopy() *RelativeOffsetObservation {
	if in == nil {
		return nil
	}
	out := new(RelativeOffsetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelativeOffsetParameters) DeepCopyInto(out *RelativeOffsetParameters) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.SourceRule != nil {
		in, out := &in.SourceRule, &out.SourceRule
		*out = new(string)
		**out = **in
	}
	if in.TargetRule != nil {
		in, out := &in.TargetRule, &out.TargetRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelativeOffsetParameters.
func (in *RelativeOffsetParameters) DeepCopy() *RelativeOffsetParameters {
	if in == nil {
		return nil
	}
	out := new(RelativeOffsetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryInitParameters) DeepCopyInto(out *RetryInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.FailedLoopIterationsOnly != nil {
		in, out := &in.FailedLoopIterationsOnly, &out.FailedLoopIterationsOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryInitParameters.
func (in *RetryInitParameters) DeepCopy() *RetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryObservation) DeepCopyInto(out *RetryObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.FailedLoopIterationsOnly != nil {
		in, out := &in.FailedLoopIterationsOnly, &out.FailedLoopIterationsOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryObservation.
func (in *RetryObservation) DeepCopy() *RetryObservation {
	if in == nil {
		return nil
	}
	out := new(RetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryParameters) DeepCopyInto(out *RetryParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.FailedLoopIterationsOnly != nil {
		in, out := &in.FailedLoopIterationsOnly, &out.FailedLoopIterationsOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryParameters.
func (in *RetryParameters) DeepCopy() *RetryParameters {
	if in == nil {
		return nil
	}
	out := new(RetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.FilterParameters != nil {
		in, out := &in.FilterParameters, &out.FilterParameters
		*out = make([]FilterParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ScheduleTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.FilterParameters != nil {
		in, out := &in.FilterParameters, &out.FilterParameters
		*out = make([]FilterParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ScheduleTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.FilterParameters != nil {
		in, out := &in.FilterParameters, &out.FilterParameters
		*out = make([]FilterParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ScheduleTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleTriggerInitParameters) DeepCopyInto(out *ScheduleTriggerInitParameters) {
	*out = *in
	if in.BetweenEnd != nil {
		in, out := &in.BetweenEnd, &out.BetweenEnd
		*out = new(string)
		**out = **in
	}
	if in.BetweenStart != nil {
		in, out := &in.BetweenStart, &out.BetweenStart
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.IntervalMinutes != nil {
		in, out := &in.IntervalMinutes, &out.IntervalMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleTriggerInitParameters.
func (in *ScheduleTriggerInitParameters) DeepCopy() *ScheduleTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleTriggerObservation) DeepCopyInto(out *ScheduleTriggerObservation) {
	*out = *in
	if in.BetweenEnd != nil {
		in, out := &in.BetweenEnd, &out.BetweenEnd
		*out = new(string)
		**out = **in
	}
	if in.BetweenStart != nil {
		in, out := &in.BetweenStart, &out.BetweenStart
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.IntervalMinutes != nil {
		in, out := &in.IntervalMinutes, &out.IntervalMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleTriggerObservation.
func (in *ScheduleTriggerObservation) DeepCopy() *ScheduleTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleTriggerParameters) DeepCopyInto(out *ScheduleTriggerParameters) {
	*out = *in
	if in.BetweenEnd != nil {
		in, out := &in.BetweenEnd, &out.BetweenEnd
		*out = new(string)
		**out = **in
	}
	if in.BetweenStart != nil {
		in, out := &in.BetweenStart, &out.BetweenStart
		*out = new(string)
		**out = **in
	}
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.IntervalMinutes != nil {
		in, out := &in.IntervalMinutes, &out.IntervalMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleTriggerParameters.
func (in *ScheduleTriggerParameters) DeepCopy() *ScheduleTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardian) DeepCopyInto(out *SiteReliabilityGuardian) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardian.
func (in *SiteReliabilityGuardian) DeepCopy() *SiteReliabilityGuardian {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardian)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SiteReliabilityGuardian) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianInitParameters) DeepCopyInto(out *SiteReliabilityGuardianInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Objectives != nil {
		in, out := &in.Objectives, &out.Objectives
		*out = make([]ObjectivesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make([]VariablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianInitParameters.
func (in *SiteReliabilityGuardianInitParameters) DeepCopy() *SiteReliabilityGuardianInitParameters {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianList) DeepCopyInto(out *SiteReliabilityGuardianList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SiteReliabilityGuardian, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianList.
func (in *SiteReliabilityGuardianList) DeepCopy() *SiteReliabilityGuardianList {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SiteReliabilityGuardianList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianObservation) DeepCopyInto(out *SiteReliabilityGuardianObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Objectives != nil {
		in, out := &in.Objectives, &out.Objectives
		*out = make([]ObjectivesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make([]VariablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianObservation.
func (in *SiteReliabilityGuardianObservation) DeepCopy() *SiteReliabilityGuardianObservation {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianParameters) DeepCopyInto(out *SiteReliabilityGuardianParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Objectives != nil {
		in, out := &in.Objectives, &out.Objectives
		*out = make([]ObjectivesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make([]VariablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianParameters.
func (in *SiteReliabilityGuardianParameters) DeepCopy() *SiteReliabilityGuardianParameters {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianSpec) DeepCopyInto(out *SiteReliabilityGuardianSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianSpec.
func (in *SiteReliabilityGuardianSpec) DeepCopy() *SiteReliabilityGuardianSpec {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SiteReliabilityGuardianStatus) DeepCopyInto(out *SiteReliabilityGuardianStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SiteReliabilityGuardianStatus.
func (in *SiteReliabilityGuardianStatus) DeepCopy() *SiteReliabilityGuardianStatus {
	if in == nil {
		return nil
	}
	out := new(SiteReliabilityGuardianStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInitParameters) DeepCopyInto(out *TaskInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.WithItems != nil {
		in, out := &in.WithItems, &out.WithItems
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInitParameters.
func (in *TaskInitParameters) DeepCopy() *TaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskObservation) DeepCopyInto(out *TaskObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.WithItems != nil {
		in, out := &in.WithItems, &out.WithItems
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskObservation.
func (in *TaskObservation) DeepCopy() *TaskObservation {
	if in == nil {
		return nil
	}
	out := new(TaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskParameters) DeepCopyInto(out *TaskParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = make([]PositionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.WithItems != nil {
		in, out := &in.WithItems, &out.WithItems
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskParameters.
func (in *TaskParameters) DeepCopy() *TaskParameters {
	if in == nil {
		return nil
	}
	out := new(TaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksInitParameters) DeepCopyInto(out *TasksInitParameters) {
	*out = *in
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksInitParameters.
func (in *TasksInitParameters) DeepCopy() *TasksInitParameters {
	if in == nil {
		return nil
	}
	out := new(TasksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksObservation) DeepCopyInto(out *TasksObservation) {
	*out = *in
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksObservation.
func (in *TasksObservation) DeepCopy() *TasksObservation {
	if in == nil {
		return nil
	}
	out := new(TasksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TasksParameters) DeepCopyInto(out *TasksParameters) {
	*out = *in
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = make([]TaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TasksParameters.
func (in *TasksParameters) DeepCopy() *TasksParameters {
	if in == nil {
		return nil
	}
	out := new(TasksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerInitParameters) DeepCopyInto(out *TriggerInitParameters) {
	*out = *in
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]EventInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerInitParameters.
func (in *TriggerInitParameters) DeepCopy() *TriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]EventObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Event != nil {
		in, out := &in.Event, &out.Event
		*out = make([]EventParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableInitParameters) DeepCopyInto(out *VariableInitParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableInitParameters.
func (in *VariableInitParameters) DeepCopy() *VariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.Definition != nil {
		in, out := &in.Definition, &out.Definition
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablesInitParameters) DeepCopyInto(out *VariablesInitParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablesInitParameters.
func (in *VariablesInitParameters) DeepCopy() *VariablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablesObservation) DeepCopyInto(out *VariablesObservation) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablesObservation.
func (in *VariablesObservation) DeepCopy() *VariablesObservation {
	if in == nil {
		return nil
	}
	out := new(VariablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablesParameters) DeepCopyInto(out *VariablesParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablesParameters.
func (in *VariablesParameters) DeepCopy() *VariablesParameters {
	if in == nil {
		return nil
	}
	out := new(VariablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebIdentityInitParameters) DeepCopyInto(out *WebIdentityInitParameters) {
	*out = *in
	if in.PolicyArns != nil {
		in, out := &in.PolicyArns, &out.PolicyArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	out.RoleArnSecretRef = in.RoleArnSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebIdentityInitParameters.
func (in *WebIdentityInitParameters) DeepCopy() *WebIdentityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WebIdentityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebIdentityObservation) DeepCopyInto(out *WebIdentityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebIdentityObservation.
func (in *WebIdentityObservation) DeepCopy() *WebIdentityObservation {
	if in == nil {
		return nil
	}
	out := new(WebIdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebIdentityParameters) DeepCopyInto(out *WebIdentityParameters) {
	*out = *in
	if in.PolicyArnsSecretRef != nil {
		in, out := &in.PolicyArnsSecretRef, &out.PolicyArnsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	out.RoleArnSecretRef = in.RoleArnSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebIdentityParameters.
func (in *WebIdentityParameters) DeepCopy() *WebIdentityParameters {
	if in == nil {
		return nil
	}
	out := new(WebIdentityParameters)
	in.DeepCopyInto(out)
	return out
}
