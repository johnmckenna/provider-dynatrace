// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EventsFieldSelectorsInitParameters struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) The field selector string (url decoding is applied) when storing it.
	// The field selector string (url decoding is applied) when storing it.
	FieldSelector *string `json:"fieldSelector,omitempty" tf:"field_selector,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// A label of the events field selector.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type EventsFieldSelectorsObservation struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) The field selector string (url decoding is applied) when storing it.
	// The field selector string (url decoding is applied) when storing it.
	FieldSelector *string `json:"fieldSelector,omitempty" tf:"field_selector,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// A label of the events field selector.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type EventsFieldSelectorsParameters struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector
	// +kubebuilder:validation:Optional
	Active *bool `json:"active" tf:"active,omitempty"`

	// (String) The field selector string (url decoding is applied) when storing it.
	// The field selector string (url decoding is applied) when storing it.
	// +kubebuilder:validation:Optional
	FieldSelector *string `json:"fieldSelector" tf:"field_selector,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// A label of the events field selector.
	// +kubebuilder:validation:Optional
	Label *string `json:"label" tf:"label,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type K8SCredentialsInitParameters struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) Active Gate group to filter active gates for this credentials.
	// Active Gate group to filter active gates for this credentials.
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (String, Sensitive) The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as null.  If the field is omitted during an update, the old value remains unaffected.
	// The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.
	AuthTokenSecretRef *v1.SecretKeySelector `json:"authTokenSecretRef,omitempty" tf:"-"`

	// (Boolean) The check of SSL certificates is enabled (true) or disabled (false) for the Kubernetes cluster.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	CertificateCheckEnabled *bool `json:"certificateCheckEnabled,omitempty" tf:"certificate_check_enabled,omitempty"`

	// (Boolean) Inclusion of all Davis relevant events is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	// Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	DavisEventsIntegrationEnabled *bool `json:"davisEventsIntegrationEnabled,omitempty" tf:"davis_events_integration_enabled,omitempty"`

	// (String) The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	EndpointURL *string `json:"endpointUrl,omitempty" tf:"endpoint_url,omitempty"`

	// (Boolean) Event analysis and alerting is (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	EventAnalysisAndAlertingEnabled *bool `json:"eventAnalysisAndAlertingEnabled,omitempty" tf:"event_analysis_and_alerting_enabled,omitempty"`

	// selectors. If set to null on creation, no events field selectors are subscribed. If set to null on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors. (see below for nested schema)
	// Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
	EventsFieldSelectors []EventsFieldSelectorsInitParameters `json:"eventsFieldSelectors,omitempty" tf:"events_field_selectors,omitempty"`

	// (Boolean) Monitoring of events is enabled (true) or disabled (false) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the false value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.
	EventsIntegrationEnabled *bool `json:"eventsIntegrationEnabled,omitempty" tf:"events_integration_enabled,omitempty"`

	// (Boolean) Verify hostname in certificate against Kubernetes API URL
	// Verify hostname in certificate against Kubernetes API URL
	HostnameVerification *bool `json:"hostnameVerification,omitempty" tf:"hostname_verification,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (Boolean) Prometheus exporters integration is enabled (true) or disabled (false) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	// Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	PrometheusExporters *bool `json:"prometheusExporters,omitempty" tf:"prometheus_exporters,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) Workload and cloud application processing is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	WorkloadIntegrationEnabled *bool `json:"workloadIntegrationEnabled,omitempty" tf:"workload_integration_enabled,omitempty"`
}

type K8SCredentialsObservation struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) Active Gate group to filter active gates for this credentials.
	// Active Gate group to filter active gates for this credentials.
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (Boolean) The check of SSL certificates is enabled (true) or disabled (false) for the Kubernetes cluster.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	CertificateCheckEnabled *bool `json:"certificateCheckEnabled,omitempty" tf:"certificate_check_enabled,omitempty"`

	// (Boolean) Inclusion of all Davis relevant events is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	// Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	DavisEventsIntegrationEnabled *bool `json:"davisEventsIntegrationEnabled,omitempty" tf:"davis_events_integration_enabled,omitempty"`

	// (String) The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	EndpointURL *string `json:"endpointUrl,omitempty" tf:"endpoint_url,omitempty"`

	// (Boolean) Event analysis and alerting is (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	EventAnalysisAndAlertingEnabled *bool `json:"eventAnalysisAndAlertingEnabled,omitempty" tf:"event_analysis_and_alerting_enabled,omitempty"`

	// selectors. If set to null on creation, no events field selectors are subscribed. If set to null on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors. (see below for nested schema)
	// Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
	EventsFieldSelectors []EventsFieldSelectorsObservation `json:"eventsFieldSelectors,omitempty" tf:"events_field_selectors,omitempty"`

	// (Boolean) Monitoring of events is enabled (true) or disabled (false) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the false value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.
	EventsIntegrationEnabled *bool `json:"eventsIntegrationEnabled,omitempty" tf:"events_integration_enabled,omitempty"`

	// (Boolean) Verify hostname in certificate against Kubernetes API URL
	// Verify hostname in certificate against Kubernetes API URL
	HostnameVerification *bool `json:"hostnameVerification,omitempty" tf:"hostname_verification,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (Boolean) Prometheus exporters integration is enabled (true) or disabled (false) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	// Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	PrometheusExporters *bool `json:"prometheusExporters,omitempty" tf:"prometheus_exporters,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) Workload and cloud application processing is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	WorkloadIntegrationEnabled *bool `json:"workloadIntegrationEnabled,omitempty" tf:"workload_integration_enabled,omitempty"`
}

type K8SCredentialsParameters struct {

	// (Boolean) Monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) Active Gate group to filter active gates for this credentials.
	// Active Gate group to filter active gates for this credentials.
	// +kubebuilder:validation:Optional
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (String, Sensitive) The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as null.  If the field is omitted during an update, the old value remains unaffected.
	// The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`.  If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	AuthTokenSecretRef *v1.SecretKeySelector `json:"authTokenSecretRef,omitempty" tf:"-"`

	// (Boolean) The check of SSL certificates is enabled (true) or disabled (false) for the Kubernetes cluster.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The check of SSL certificates is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	CertificateCheckEnabled *bool `json:"certificateCheckEnabled,omitempty" tf:"certificate_check_enabled,omitempty"`

	// (Boolean) Inclusion of all Davis relevant events is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	// Inclusion of all Davis relevant events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
	// +kubebuilder:validation:Optional
	DavisEventsIntegrationEnabled *bool `json:"davisEventsIntegrationEnabled,omitempty" tf:"davis_events_integration_enabled,omitempty"`

	// (String) The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
	// +kubebuilder:validation:Optional
	EndpointURL *string `json:"endpointUrl,omitempty" tf:"endpoint_url,omitempty"`

	// (Boolean) Event analysis and alerting is (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Event analysis and alerting is (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	EventAnalysisAndAlertingEnabled *bool `json:"eventAnalysisAndAlertingEnabled,omitempty" tf:"event_analysis_and_alerting_enabled,omitempty"`

	// selectors. If set to null on creation, no events field selectors are subscribed. If set to null on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors. (see below for nested schema)
	// Kubernetes event filters based on field-selectors. If set to `null` on creation, no events field selectors are subscribed. If set to `null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
	// +kubebuilder:validation:Optional
	EventsFieldSelectors []EventsFieldSelectorsParameters `json:"eventsFieldSelectors,omitempty" tf:"events_field_selectors,omitempty"`

	// (Boolean) Monitoring of events is enabled (true) or disabled (false) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the false value is used.  If the field is omitted during an update, the old value remains unaffected.
	// Monitoring of events is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `false` value is used.  If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	EventsIntegrationEnabled *bool `json:"eventsIntegrationEnabled,omitempty" tf:"events_integration_enabled,omitempty"`

	// (Boolean) Verify hostname in certificate against Kubernetes API URL
	// Verify hostname in certificate against Kubernetes API URL
	// +kubebuilder:validation:Optional
	HostnameVerification *bool `json:"hostnameVerification,omitempty" tf:"hostname_verification,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (Boolean) Prometheus exporters integration is enabled (true) or disabled (false) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	// Prometheus exporters integration is enabled (`true`) or disabled (`false`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
	// +kubebuilder:validation:Optional
	PrometheusExporters *bool `json:"prometheusExporters,omitempty" tf:"prometheus_exporters,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) Workload and cloud application processing is enabled (true) or disabled (false) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// Workload and cloud application processing is enabled (`true`) or disabled (`false`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	WorkloadIntegrationEnabled *bool `json:"workloadIntegrationEnabled,omitempty" tf:"workload_integration_enabled,omitempty"`
}

// K8SCredentialsSpec defines the desired state of K8SCredentials
type K8SCredentialsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     K8SCredentialsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider K8SCredentialsInitParameters `json:"initProvider,omitempty"`
}

// K8SCredentialsStatus defines the observed state of K8SCredentials.
type K8SCredentialsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        K8SCredentialsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// K8SCredentials is the Schema for the K8SCredentialss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type K8SCredentials struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.label) || (has(self.initProvider) && has(self.initProvider.label))",message="spec.forProvider.label is a required parameter"
	Spec   K8SCredentialsSpec   `json:"spec"`
	Status K8SCredentialsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// K8SCredentialsList contains a list of K8SCredentialss
type K8SCredentialsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []K8SCredentials `json:"items"`
}

// Repository type metadata.
var (
	K8SCredentials_Kind             = "K8SCredentials"
	K8SCredentials_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: K8SCredentials_Kind}.String()
	K8SCredentials_KindAPIVersion   = K8SCredentials_Kind + "." + CRDGroupVersion.String()
	K8SCredentials_GroupVersionKind = CRDGroupVersion.WithKind(K8SCredentials_Kind)
)

func init() {
	SchemeBuilder.Register(&K8SCredentials{}, &K8SCredentialsList{})
}
