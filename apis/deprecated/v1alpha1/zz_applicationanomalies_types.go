// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApplicationAnomaliesInitParameters struct {

	// (Block List, Max: 1) Configuration of failure rate increase detection (see below for nested schema)
	// Configuration of failure rate increase detection
	FailureRate []FailureRateInitParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Max: 1) Configuration of response time degradation detection (see below for nested schema)
	// Configuration of response time degradation detection
	ResponseTime []ResponseTimeInitParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (Block List, Max: 1) Configuration for anomalies regarding traffic (see below for nested schema)
	// Configuration for anomalies regarding traffic
	Traffic []TrafficInitParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type ApplicationAnomaliesObservation struct {

	// (Block List, Max: 1) Configuration of failure rate increase detection (see below for nested schema)
	// Configuration of failure rate increase detection
	FailureRate []FailureRateObservation `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Max: 1) Configuration of response time degradation detection (see below for nested schema)
	// Configuration of response time degradation detection
	ResponseTime []ResponseTimeObservation `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (Block List, Max: 1) Configuration for anomalies regarding traffic (see below for nested schema)
	// Configuration for anomalies regarding traffic
	Traffic []TrafficObservation `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type ApplicationAnomaliesParameters struct {

	// (Block List, Max: 1) Configuration of failure rate increase detection (see below for nested schema)
	// Configuration of failure rate increase detection
	// +kubebuilder:validation:Optional
	FailureRate []FailureRateParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Max: 1) Configuration of response time degradation detection (see below for nested schema)
	// Configuration of response time degradation detection
	// +kubebuilder:validation:Optional
	ResponseTime []ResponseTimeParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (Block List, Max: 1) Configuration for anomalies regarding traffic (see below for nested schema)
	// Configuration for anomalies regarding traffic
	// +kubebuilder:validation:Optional
	Traffic []TrafficParameters `json:"traffic,omitempty" tf:"traffic,omitempty"`
}

type AutoInitParameters struct {

	// (Number) Absolute increase of failing service calls to trigger an alert, %
	// Absolute increase of failing service calls to trigger an alert, %
	Absolute *float64 `json:"absolute,omitempty" tf:"absolute,omitempty"`

	// (Number) Relative increase of failing service calls to trigger an alert, %
	// Relative increase of failing service calls to trigger an alert, %
	Relative *float64 `json:"relative,omitempty" tf:"relative,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AutoObservation struct {

	// (Number) Absolute increase of failing service calls to trigger an alert, %
	// Absolute increase of failing service calls to trigger an alert, %
	Absolute *float64 `json:"absolute,omitempty" tf:"absolute,omitempty"`

	// (Number) Relative increase of failing service calls to trigger an alert, %
	// Relative increase of failing service calls to trigger an alert, %
	Relative *float64 `json:"relative,omitempty" tf:"relative,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AutoParameters struct {

	// (Number) Absolute increase of failing service calls to trigger an alert, %
	// Absolute increase of failing service calls to trigger an alert, %
	// +kubebuilder:validation:Optional
	Absolute *float64 `json:"absolute" tf:"absolute,omitempty"`

	// (Number) Relative increase of failing service calls to trigger an alert, %
	// Relative increase of failing service calls to trigger an alert, %
	// +kubebuilder:validation:Optional
	Relative *float64 `json:"relative" tf:"relative,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DropsInitParameters struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type DropsObservation struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type DropsParameters struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type FailureRateInitParameters struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
	Auto []AutoInitParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for failure rate increase detection
	Thresholds []ThresholdsInitParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type FailureRateObservation struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
	Auto []AutoObservation `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for failure rate increase detection
	Thresholds []ThresholdsObservation `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type FailureRateParameters struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
	// +kubebuilder:validation:Optional
	Auto []AutoParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for failure rate increase detection
	// +kubebuilder:validation:Optional
	Thresholds []ThresholdsParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type ResponseTimeAutoInitParameters struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	Load *string `json:"load,omitempty" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Alert if the response time degrades by more than *X* milliseconds
	Milliseconds *float64 `json:"milliseconds,omitempty" tf:"milliseconds,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the response time degrades by more than *X* %
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	SlowestMilliseconds *float64 `json:"slowestMilliseconds,omitempty" tf:"slowest_milliseconds,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	SlowestPercent *float64 `json:"slowestPercent,omitempty" tf:"slowest_percent,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ResponseTimeAutoObservation struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	Load *string `json:"load,omitempty" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Alert if the response time degrades by more than *X* milliseconds
	Milliseconds *float64 `json:"milliseconds,omitempty" tf:"milliseconds,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the response time degrades by more than *X* %
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	SlowestMilliseconds *float64 `json:"slowestMilliseconds,omitempty" tf:"slowest_milliseconds,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	SlowestPercent *float64 `json:"slowestPercent,omitempty" tf:"slowest_percent,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ResponseTimeAutoParameters struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	// +kubebuilder:validation:Optional
	Load *string `json:"load" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Alert if the response time degrades by more than *X* milliseconds
	// +kubebuilder:validation:Optional
	Milliseconds *float64 `json:"milliseconds" tf:"milliseconds,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the response time degrades by more than *X* %
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent" tf:"percent,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	// +kubebuilder:validation:Optional
	SlowestMilliseconds *float64 `json:"slowestMilliseconds" tf:"slowest_milliseconds,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
	// +kubebuilder:validation:Optional
	SlowestPercent *float64 `json:"slowestPercent" tf:"slowest_percent,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ResponseTimeInitParameters struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
	Auto []ResponseTimeAutoInitParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for response time degradation detection
	Thresholds []ResponseTimeThresholdsInitParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type ResponseTimeObservation struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
	Auto []ResponseTimeAutoObservation `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for response time degradation detection
	Thresholds []ResponseTimeThresholdsObservation `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type ResponseTimeParameters struct {

	// detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + 1% = 2.5%  Relative: 1.5% + 1.5% * 50% = 2.25% (see below for nested schema)
	// Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
	// +kubebuilder:validation:Optional
	Auto []ResponseTimeAutoParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List, Max: 1) Fixed thresholds for failure rate increase detection (see below for nested schema)
	// Fixed thresholds for response time degradation detection
	// +kubebuilder:validation:Optional
	Thresholds []ResponseTimeThresholdsParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type ResponseTimeThresholdsInitParameters struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	Load *string `json:"load,omitempty" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Response time during any 5-minute period to trigger an alert, in milliseconds
	Milliseconds *float64 `json:"milliseconds,omitempty" tf:"milliseconds,omitempty"`

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
	SlowestMilliseconds *float64 `json:"slowestMilliseconds,omitempty" tf:"slowest_milliseconds,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ResponseTimeThresholdsObservation struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	Load *string `json:"load,omitempty" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Response time during any 5-minute period to trigger an alert, in milliseconds
	Milliseconds *float64 `json:"milliseconds,omitempty" tf:"milliseconds,omitempty"`

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
	SlowestMilliseconds *float64 `json:"slowestMilliseconds,omitempty" tf:"slowest_milliseconds,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ResponseTimeThresholdsParameters struct {

	// (String) Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are FIFTEEN_REQUESTS_PER_MINUTE, FIVE_REQUESTS_PER_MINUTE, ONE_REQUEST_PER_MINUTE and TEN_REQUESTS_PER_MINUTE
	// Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
	// +kubebuilder:validation:Optional
	Load *string `json:"load" tf:"load,omitempty"`

	// (Number) Alert if the response time degrades by more than X milliseconds
	// Response time during any 5-minute period to trigger an alert, in milliseconds
	// +kubebuilder:validation:Optional
	Milliseconds *float64 `json:"milliseconds" tf:"milliseconds,omitempty"`

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`

	// (Number) Alert if the response time of the slowest 10% degrades by more than X milliseconds
	// Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
	// +kubebuilder:validation:Optional
	SlowestMilliseconds *float64 `json:"slowestMilliseconds" tf:"slowest_milliseconds,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SpikesInitParameters struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type SpikesObservation struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type SpikesParameters struct {

	// (Boolean) The detection is enabled (true) or disabled (false)
	// The detection is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Alert if the response time degrades by more than X %
	// Alert if the observed traffic is less than *X* % of the expected value
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`
}

type ThresholdsInitParameters struct {

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// minute period to trigger an alert, %
	// Failure rate during any 5-minute period to trigger an alert, %
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ThresholdsObservation struct {

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// minute period to trigger an alert, %
	// Failure rate during any 5-minute period to trigger an alert, %
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ThresholdsParameters struct {

	// (String) Sensitivity of the threshold.  With low sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With high sensitivity, no statistical confidence is used. Each violation triggers alert
	// Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`

	// minute period to trigger an alert, %
	// Failure rate during any 5-minute period to trigger an alert, %
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type TrafficInitParameters struct {

	// (Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)
	// The configuration of traffic drops detection
	Drops []DropsInitParameters `json:"drops,omitempty" tf:"drops,omitempty"`

	// (Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)
	// The configuration of traffic spikes detection
	Spikes []SpikesInitParameters `json:"spikes,omitempty" tf:"spikes,omitempty"`
}

type TrafficObservation struct {

	// (Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)
	// The configuration of traffic drops detection
	Drops []DropsObservation `json:"drops,omitempty" tf:"drops,omitempty"`

	// (Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)
	// The configuration of traffic spikes detection
	Spikes []SpikesObservation `json:"spikes,omitempty" tf:"spikes,omitempty"`
}

type TrafficParameters struct {

	// (Block List, Max: 1) The configuration of traffic drops detection (see below for nested schema)
	// The configuration of traffic drops detection
	// +kubebuilder:validation:Optional
	Drops []DropsParameters `json:"drops,omitempty" tf:"drops,omitempty"`

	// (Block List, Max: 1) The configuration of traffic spikes detection (see below for nested schema)
	// The configuration of traffic spikes detection
	// +kubebuilder:validation:Optional
	Spikes []SpikesParameters `json:"spikes,omitempty" tf:"spikes,omitempty"`
}

// ApplicationAnomaliesSpec defines the desired state of ApplicationAnomalies
type ApplicationAnomaliesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ApplicationAnomaliesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ApplicationAnomaliesInitParameters `json:"initProvider,omitempty"`
}

// ApplicationAnomaliesStatus defines the observed state of ApplicationAnomalies.
type ApplicationAnomaliesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ApplicationAnomaliesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ApplicationAnomalies is the Schema for the ApplicationAnomaliess API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ApplicationAnomalies struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApplicationAnomaliesSpec   `json:"spec"`
	Status            ApplicationAnomaliesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationAnomaliesList contains a list of ApplicationAnomaliess
type ApplicationAnomaliesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationAnomalies `json:"items"`
}

// Repository type metadata.
var (
	ApplicationAnomalies_Kind             = "ApplicationAnomalies"
	ApplicationAnomalies_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ApplicationAnomalies_Kind}.String()
	ApplicationAnomalies_KindAPIVersion   = ApplicationAnomalies_Kind + "." + CRDGroupVersion.String()
	ApplicationAnomalies_GroupVersionKind = CRDGroupVersion.WithKind(ApplicationAnomalies_Kind)
)

func init() {
	SchemeBuilder.Register(&ApplicationAnomalies{}, &ApplicationAnomaliesList{})
}
