// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudfoundryCredentialsInitParameters struct {

	// (String) The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (Boolean) The monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The password of the Cloud Foundry foundation credentials.
	// The password of the Cloud Foundry foundation credentials.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type CloudfoundryCredentialsObservation struct {

	// (String) The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (Boolean) The monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type CloudfoundryCredentialsParameters struct {

	// (String) The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// +kubebuilder:validation:Optional
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (Boolean) The monitoring is enabled (true) or disabled (false) for given credentials configuration.  If not set on creation, the true value is used.  If the field is omitted during an update, the old value remains unaffected.
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	// +kubebuilder:validation:Optional
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// (String) The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	// +kubebuilder:validation:Optional
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// _. Leading or trailing whitespace is not allowed.
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The password of the Cloud Foundry foundation credentials.
	// The password of the Cloud Foundry foundation credentials.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

// CloudfoundryCredentialsSpec defines the desired state of CloudfoundryCredentials
type CloudfoundryCredentialsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudfoundryCredentialsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudfoundryCredentialsInitParameters `json:"initProvider,omitempty"`
}

// CloudfoundryCredentialsStatus defines the observed state of CloudfoundryCredentials.
type CloudfoundryCredentialsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudfoundryCredentialsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CloudfoundryCredentials is the Schema for the CloudfoundryCredentialss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CloudfoundryCredentials struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.apiUrl) || (has(self.initProvider) && has(self.initProvider.apiUrl))",message="spec.forProvider.apiUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loginUrl) || (has(self.initProvider) && has(self.initProvider.loginUrl))",message="spec.forProvider.loginUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) && has(self.initProvider.username))",message="spec.forProvider.username is a required parameter"
	Spec   CloudfoundryCredentialsSpec   `json:"spec"`
	Status CloudfoundryCredentialsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudfoundryCredentialsList contains a list of CloudfoundryCredentialss
type CloudfoundryCredentialsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudfoundryCredentials `json:"items"`
}

// Repository type metadata.
var (
	CloudfoundryCredentials_Kind             = "CloudfoundryCredentials"
	CloudfoundryCredentials_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudfoundryCredentials_Kind}.String()
	CloudfoundryCredentials_KindAPIVersion   = CloudfoundryCredentials_Kind + "." + CRDGroupVersion.String()
	CloudfoundryCredentials_GroupVersionKind = CRDGroupVersion.WithKind(CloudfoundryCredentials_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudfoundryCredentials{}, &CloudfoundryCredentialsList{})
}
