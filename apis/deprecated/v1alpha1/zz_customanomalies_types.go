// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomAnomaliesInitParameters struct {

	// (String) How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	// How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	AggregationType *string `json:"aggregationType,omitempty" tf:"aggregation_type,omitempty"`

	// (String) The description of the metric event
	// The description of the metric event
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List) Defines the dimensions of the metric to alert on. The filters are combined by conjunction (see below for nested schema)
	// Defines the dimensions of the metric to alert on. The filters are combined by conjunction
	Dimensions []DimensionsInitParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String, Deprecated) The reason of automatic disabling.  The NONE means config was not disabled automatically. Possible values are METRIC_DEFINITION_INCONSISTENCY, NONE, TOO_MANY_DIMS and TOPX_FORCIBLY_DEACTIVATED
	// The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`
	DisabledReason *string `json:"disabledReason,omitempty" tf:"disabled_reason,omitempty"`

	// (Boolean) The metric event is enabled (true) or disabled (false)
	// The metric event is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of the metric evaluated by the metric event
	// The ID of the metric evaluated by the metric event
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	// (String) The metric selector that should be executed
	// The metric selector that should be executed
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// The name of the metric event displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines which dimension key should be used for the alertingScope
	// Defines which dimension key should be used for the **alertingScope**
	PrimaryDimensionKey *string `json:"primaryDimensionKey,omitempty" tf:"primary_dimension_key,omitempty"`

	// (Block List) Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction (see below for nested schema)
	// Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction
	Scopes []ScopesInitParameters `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) The type of the event to trigger on the threshold violation.  The CUSTOM_ALERT type is not correlated with other alerts. The INFO type does not open a problem
	// The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// (Block List, Min: 1, Max: 1) A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields (see below for nested schema)
	// A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields
	Strategy []StrategyInitParameters `json:"strategy,omitempty" tf:"strategy,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String, Deprecated) The reason of a warning set on the config. The NONE means config has no warnings. The other supported value is TOO_MANY_DIMS
	// The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`
	WarningReason *string `json:"warningReason,omitempty" tf:"warning_reason,omitempty"`
}

type CustomAnomaliesObservation struct {

	// (String) How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	// How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	AggregationType *string `json:"aggregationType,omitempty" tf:"aggregation_type,omitempty"`

	// (String) The description of the metric event
	// The description of the metric event
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List) Defines the dimensions of the metric to alert on. The filters are combined by conjunction (see below for nested schema)
	// Defines the dimensions of the metric to alert on. The filters are combined by conjunction
	Dimensions []DimensionsObservation `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String, Deprecated) The reason of automatic disabling.  The NONE means config was not disabled automatically. Possible values are METRIC_DEFINITION_INCONSISTENCY, NONE, TOO_MANY_DIMS and TOPX_FORCIBLY_DEACTIVATED
	// The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`
	DisabledReason *string `json:"disabledReason,omitempty" tf:"disabled_reason,omitempty"`

	// (Boolean) The metric event is enabled (true) or disabled (false)
	// The metric event is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The ID of the metric evaluated by the metric event
	// The ID of the metric evaluated by the metric event
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	// (String) The metric selector that should be executed
	// The metric selector that should be executed
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// The name of the metric event displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines which dimension key should be used for the alertingScope
	// Defines which dimension key should be used for the **alertingScope**
	PrimaryDimensionKey *string `json:"primaryDimensionKey,omitempty" tf:"primary_dimension_key,omitempty"`

	// (Block List) Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction (see below for nested schema)
	// Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction
	Scopes []ScopesObservation `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) The type of the event to trigger on the threshold violation.  The CUSTOM_ALERT type is not correlated with other alerts. The INFO type does not open a problem
	// The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// (Block List, Min: 1, Max: 1) A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields (see below for nested schema)
	// A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields
	Strategy []StrategyObservation `json:"strategy,omitempty" tf:"strategy,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String, Deprecated) The reason of a warning set on the config. The NONE means config has no warnings. The other supported value is TOO_MANY_DIMS
	// The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`
	WarningReason *string `json:"warningReason,omitempty" tf:"warning_reason,omitempty"`
}

type CustomAnomaliesParameters struct {

	// (String) How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	// How the metric data points are aggregated for the evaluation. The timeseries must support this aggregation
	// +kubebuilder:validation:Optional
	AggregationType *string `json:"aggregationType,omitempty" tf:"aggregation_type,omitempty"`

	// (String) The description of the metric event
	// The description of the metric event
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List) Defines the dimensions of the metric to alert on. The filters are combined by conjunction (see below for nested schema)
	// Defines the dimensions of the metric to alert on. The filters are combined by conjunction
	// +kubebuilder:validation:Optional
	Dimensions []DimensionsParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String, Deprecated) The reason of automatic disabling.  The NONE means config was not disabled automatically. Possible values are METRIC_DEFINITION_INCONSISTENCY, NONE, TOO_MANY_DIMS and TOPX_FORCIBLY_DEACTIVATED
	// The reason of automatic disabling.  The `NONE` means config was not disabled automatically. Possible values are `METRIC_DEFINITION_INCONSISTENCY`, `NONE`, `TOO_MANY_DIMS` and `TOPX_FORCIBLY_DEACTIVATED`
	// +kubebuilder:validation:Optional
	DisabledReason *string `json:"disabledReason,omitempty" tf:"disabled_reason,omitempty"`

	// (Boolean) The metric event is enabled (true) or disabled (false)
	// The metric event is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of the metric evaluated by the metric event
	// The ID of the metric evaluated by the metric event
	// +kubebuilder:validation:Optional
	MetricID *string `json:"metricId,omitempty" tf:"metric_id,omitempty"`

	// (String) The metric selector that should be executed
	// The metric selector that should be executed
	// +kubebuilder:validation:Optional
	MetricSelector *string `json:"metricSelector,omitempty" tf:"metric_selector,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// The name of the metric event displayed in the UI
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines which dimension key should be used for the alertingScope
	// Defines which dimension key should be used for the **alertingScope**
	// +kubebuilder:validation:Optional
	PrimaryDimensionKey *string `json:"primaryDimensionKey,omitempty" tf:"primary_dimension_key,omitempty"`

	// (Block List) Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction (see below for nested schema)
	// Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction
	// +kubebuilder:validation:Optional
	Scopes []ScopesParameters `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) The type of the event to trigger on the threshold violation.  The CUSTOM_ALERT type is not correlated with other alerts. The INFO type does not open a problem
	// The type of the event to trigger on the threshold violation.  The `CUSTOM_ALERT` type is not correlated with other alerts. The `INFO` type does not open a problem
	// +kubebuilder:validation:Optional
	Severity *string `json:"severity,omitempty" tf:"severity,omitempty"`

	// (Block List, Min: 1, Max: 1) A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields (see below for nested schema)
	// A monitoring strategy for a metric event config. This is the base version of the monitoring strategy, depending on the type,  the actual JSON may contain additional fields
	// +kubebuilder:validation:Optional
	Strategy []StrategyParameters `json:"strategy,omitempty" tf:"strategy,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String, Deprecated) The reason of a warning set on the config. The NONE means config has no warnings. The other supported value is TOO_MANY_DIMS
	// The reason of a warning set on the config. The `NONE` means config has no warnings. The other supported value is `TOO_MANY_DIMS`
	// +kubebuilder:validation:Optional
	WarningReason *string `json:"warningReason,omitempty" tf:"warning_reason,omitempty"`
}

type CustomDeviceGroupNameFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomDeviceGroupNameFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomDeviceGroupNameFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type CustomDeviceGroupNameInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []CustomDeviceGroupNameFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CustomDeviceGroupNameObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []CustomDeviceGroupNameFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CustomDeviceGroupNameParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []CustomDeviceGroupNameFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionInitParameters struct {

	// (Number) No documentation available
	// No documentation available
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionObservation struct {

	// (Number) No documentation available
	// No documentation available
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionParameters struct {

	// (Number) No documentation available
	// No documentation available
	// +kubebuilder:validation:Optional
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsEntityInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsEntityObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsEntityParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsInitParameters struct {

	// (Block List) A generic definition for a filter (see below for nested schema)
	// A generic definition for a filter
	Dimension []DimensionInitParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A filter for the metrics entity dimensions
	Entity []DimensionsEntityInitParameters `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A filter for the metrics string dimensions (see below for nested schema)
	// A filter for the metrics string dimensions
	String []DimensionsStringInitParameters `json:"string,omitempty" tf:"string,omitempty"`
}

type DimensionsObservation struct {

	// (Block List) A generic definition for a filter (see below for nested schema)
	// A generic definition for a filter
	Dimension []DimensionObservation `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A filter for the metrics entity dimensions
	Entity []DimensionsEntityObservation `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A filter for the metrics string dimensions (see below for nested schema)
	// A filter for the metrics string dimensions
	String []DimensionsStringObservation `json:"string,omitempty" tf:"string,omitempty"`
}

type DimensionsParameters struct {

	// (Block List) A generic definition for a filter (see below for nested schema)
	// A generic definition for a filter
	// +kubebuilder:validation:Optional
	Dimension []DimensionParameters `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A filter for the metrics entity dimensions
	// +kubebuilder:validation:Optional
	Entity []DimensionsEntityParameters `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A filter for the metrics string dimensions (see below for nested schema)
	// A filter for the metrics string dimensions
	// +kubebuilder:validation:Optional
	String []DimensionsStringParameters `json:"string,omitempty" tf:"string,omitempty"`
}

type DimensionsStringInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []StringFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Number) No documentation available
	// No documentation available
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsStringObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []StringFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Number) No documentation available
	// No documentation available
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionsStringParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []StringFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (Number) No documentation available
	// No documentation available
	// +kubebuilder:validation:Optional
	Index *float64 `json:"index,omitempty" tf:"index,omitempty"`

	// (String) The dimensions key on the metric
	// The dimensions key on the metric
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// No documentation available
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type FilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type GenericInitParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type GenericObservation struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type GenericParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostGroupNameFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostGroupNameFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostGroupNameFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HostGroupNameInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []HostGroupNameFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostGroupNameObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []HostGroupNameFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostGroupNameParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []HostGroupNameFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostNameFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostNameFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostNameFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type HostNameInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []HostNameFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostNameObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []HostNameFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HostNameParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []HostNameFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ManagementZoneInitParameters struct {

	// (String) The ID of this resource.
	// The management zone id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ManagementZoneObservation struct {

	// (String) The ID of this resource.
	// The management zone id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ManagementZoneParameters struct {

	// (String) The ID of this resource.
	// The management zone id to match on
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type NameFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NameFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NameFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type NameInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []NameFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type NameObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []NameFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type NameParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []NameFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupIDInitParameters struct {

	// (String) The ID of this resource.
	// The process groups id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupIDObservation struct {

	// (String) The ID of this resource.
	// The process groups id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupIDParameters struct {

	// (String) The ID of this resource.
	// The process groups id to match on
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupNameFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessGroupNameFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProcessGroupNameFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ProcessGroupNameInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []ProcessGroupNameFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupNameObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []ProcessGroupNameFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ProcessGroupNameParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []ProcessGroupNameFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeInitParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeObservation struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesEntityInitParameters struct {

	// (String) The ID of this resource.
	// The monitored entities id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesEntityObservation struct {

	// (String) The ID of this resource.
	// The monitored entities id to match on
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesEntityParameters struct {

	// (String) The ID of this resource.
	// The monitored entities id to match on
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesInitParameters struct {

	// (Block List) A scope filter for the related custom device group name (see below for nested schema)
	// A scope filter for the related custom device group name
	CustomDeviceGroupName []CustomDeviceGroupNameInitParameters `json:"customDeviceGroupName,omitempty" tf:"custom_device_group_name,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A scope filter for a monitored entity identifier
	Entity []ScopesEntityInitParameters `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A scope filter for the related host group name (see below for nested schema)
	// A scope filter for the related host group name
	HostGroupName []HostGroupNameInitParameters `json:"hostGroupName,omitempty" tf:"host_group_name,omitempty"`

	// (Block List) A scope filter for the related host name (see below for nested schema)
	// A scope filter for the related host name
	HostName []HostNameInitParameters `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// (Block List) A scope filter for a management zone identifier (see below for nested schema)
	// A scope filter for a management zone identifier
	ManagementZone []ManagementZoneInitParameters `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// A scope filter for a monitored entity name
	Name []NameInitParameters `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List) A scope filter for a process group identifier (see below for nested schema)
	// A scope filter for a process group identifier
	ProcessGroupID []ProcessGroupIDInitParameters `json:"processGroupId,omitempty" tf:"process_group_id,omitempty"`

	// (Block List) A scope filter for the related process group name (see below for nested schema)
	// A scope filter for the related process group name
	ProcessGroupName []ProcessGroupNameInitParameters `json:"processGroupName,omitempty" tf:"process_group_name,omitempty"`

	// (Block List) A generic scope filter (see below for nested schema)
	// A generic scope filter
	Scope []ScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List) A scope filter for tags on entities (see below for nested schema)
	// A scope filter for tags on entities
	Tag []ScopesTagInitParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ScopesObservation struct {

	// (Block List) A scope filter for the related custom device group name (see below for nested schema)
	// A scope filter for the related custom device group name
	CustomDeviceGroupName []CustomDeviceGroupNameObservation `json:"customDeviceGroupName,omitempty" tf:"custom_device_group_name,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A scope filter for a monitored entity identifier
	Entity []ScopesEntityObservation `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A scope filter for the related host group name (see below for nested schema)
	// A scope filter for the related host group name
	HostGroupName []HostGroupNameObservation `json:"hostGroupName,omitempty" tf:"host_group_name,omitempty"`

	// (Block List) A scope filter for the related host name (see below for nested schema)
	// A scope filter for the related host name
	HostName []HostNameObservation `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// (Block List) A scope filter for a management zone identifier (see below for nested schema)
	// A scope filter for a management zone identifier
	ManagementZone []ManagementZoneObservation `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// A scope filter for a monitored entity name
	Name []NameObservation `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List) A scope filter for a process group identifier (see below for nested schema)
	// A scope filter for a process group identifier
	ProcessGroupID []ProcessGroupIDObservation `json:"processGroupId,omitempty" tf:"process_group_id,omitempty"`

	// (Block List) A scope filter for the related process group name (see below for nested schema)
	// A scope filter for the related process group name
	ProcessGroupName []ProcessGroupNameObservation `json:"processGroupName,omitempty" tf:"process_group_name,omitempty"`

	// (Block List) A generic scope filter (see below for nested schema)
	// A generic scope filter
	Scope []ScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List) A scope filter for tags on entities (see below for nested schema)
	// A scope filter for tags on entities
	Tag []ScopesTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ScopesParameters struct {

	// (Block List) A scope filter for the related custom device group name (see below for nested schema)
	// A scope filter for the related custom device group name
	// +kubebuilder:validation:Optional
	CustomDeviceGroupName []CustomDeviceGroupNameParameters `json:"customDeviceGroupName,omitempty" tf:"custom_device_group_name,omitempty"`

	// (Block List) A filter for the metrics entity dimensions (see below for nested schema)
	// A scope filter for a monitored entity identifier
	// +kubebuilder:validation:Optional
	Entity []ScopesEntityParameters `json:"entity,omitempty" tf:"entity,omitempty"`

	// (Block List) A scope filter for the related host group name (see below for nested schema)
	// A scope filter for the related host group name
	// +kubebuilder:validation:Optional
	HostGroupName []HostGroupNameParameters `json:"hostGroupName,omitempty" tf:"host_group_name,omitempty"`

	// (Block List) A scope filter for the related host name (see below for nested schema)
	// A scope filter for the related host name
	// +kubebuilder:validation:Optional
	HostName []HostNameParameters `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// (Block List) A scope filter for a management zone identifier (see below for nested schema)
	// A scope filter for a management zone identifier
	// +kubebuilder:validation:Optional
	ManagementZone []ManagementZoneParameters `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (String) The name of the metric event displayed in the UI
	// A scope filter for a monitored entity name
	// +kubebuilder:validation:Optional
	Name []NameParameters `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List) A scope filter for a process group identifier (see below for nested schema)
	// A scope filter for a process group identifier
	// +kubebuilder:validation:Optional
	ProcessGroupID []ProcessGroupIDParameters `json:"processGroupId,omitempty" tf:"process_group_id,omitempty"`

	// (Block List) A scope filter for the related process group name (see below for nested schema)
	// A scope filter for the related process group name
	// +kubebuilder:validation:Optional
	ProcessGroupName []ProcessGroupNameParameters `json:"processGroupName,omitempty" tf:"process_group_name,omitempty"`

	// (Block List) A generic scope filter (see below for nested schema)
	// A generic scope filter
	// +kubebuilder:validation:Optional
	Scope []ScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List) A scope filter for tags on entities (see below for nested schema)
	// A scope filter for tags on entities
	// +kubebuilder:validation:Optional
	Tag []ScopesTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type ScopesTagFilterInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String) The dimensions key on the metric
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The value to match on
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScopesTagFilterObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String) The dimensions key on the metric
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) The value to match on
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScopesTagFilterParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the CONTEXTLESS value
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	// +kubebuilder:validation:Optional
	Context *string `json:"context" tf:"context,omitempty"`

	// (String) The dimensions key on the metric
	// The key of the tag. Custom tags have the tag value here
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (String) The value to match on
	// The value of the tag. Not applicable to custom tags
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ScopesTagInitParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []ScopesTagFilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesTagObservation struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	Filter []ScopesTagFilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopesTagParameters struct {

	// (Block List, Min: 1, Max: 1) A filter for a string value based on the given operator (see below for nested schema)
	// A filter for a string value based on the given operator
	// +kubebuilder:validation:Optional
	Filter []ScopesTagFilterParameters `json:"filter" tf:"filter,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type StaticInitParameters struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) The value of the static threshold based on the specified unit
	// The value of the static threshold based on the specified unit
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (String) The unit of the threshold, matching the metric definition
	// The unit of the threshold, matching the metric definition
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type StaticObservation struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) The value of the static threshold based on the specified unit
	// The value of the static threshold based on the specified unit
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (String) The unit of the threshold, matching the metric definition
	// The unit of the threshold, matching the metric definition
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type StaticParameters struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	// +kubebuilder:validation:Optional
	AlertCondition *string `json:"alertCondition" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	// +kubebuilder:validation:Optional
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	// +kubebuilder:validation:Optional
	DealertingSamples *float64 `json:"dealertingSamples" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	// +kubebuilder:validation:Optional
	Samples *float64 `json:"samples" tf:"samples,omitempty"`

	// (Number) The value of the static threshold based on the specified unit
	// The value of the static threshold based on the specified unit
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`

	// (String) The unit of the threshold, matching the metric definition
	// The unit of the threshold, matching the metric definition
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit" tf:"unit,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	// +kubebuilder:validation:Optional
	ViolatingSamples *float64 `json:"violatingSamples" tf:"violating_samples,omitempty"`
}

type StrategyAutoInitParameters struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	// Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	SignalFluctuations *float64 `json:"signalFluctuations,omitempty" tf:"signal_fluctuations,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type StrategyAutoObservation struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	AlertCondition *string `json:"alertCondition,omitempty" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	DealertingSamples *float64 `json:"dealertingSamples,omitempty" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	// Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	SignalFluctuations *float64 `json:"signalFluctuations,omitempty" tf:"signal_fluctuations,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type StrategyAutoParameters struct {

	// (String) The condition for the threshold value check: ABOVE or BELOW
	// The condition for the **threshold** value check: `ABOVE` or `BELOW`
	// +kubebuilder:validation:Optional
	AlertCondition *string `json:"alertCondition" tf:"alert_condition,omitempty"`

	// minute samples without data are counted as violating samples
	// If true, also one-minute samples without data are counted as violating samples
	// +kubebuilder:validation:Optional
	AlertingOnMissingData *bool `json:"alertingOnMissingData,omitempty" tf:"alerting_on_missing_data,omitempty"`

	// minute samples within the evaluation window that must go back to normal to close the event
	// The number of one-minute samples within the evaluation window that must go back to normal to close the event
	// +kubebuilder:validation:Optional
	DealertingSamples *float64 `json:"dealertingSamples" tf:"dealerting_samples,omitempty"`

	// minute samples that form the sliding evaluation window
	// The number of one-minute samples that form the sliding evaluation window
	// +kubebuilder:validation:Optional
	Samples *float64 `json:"samples" tf:"samples,omitempty"`

	// (Number) Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	// Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
	// +kubebuilder:validation:Optional
	SignalFluctuations *float64 `json:"signalFluctuations" tf:"signal_fluctuations,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// minute samples within the evaluation window that must violate the threshold to trigger an event
	// The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
	// +kubebuilder:validation:Optional
	ViolatingSamples *float64 `json:"violatingSamples" tf:"violating_samples,omitempty"`
}

type StrategyInitParameters struct {

	// adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time (see below for nested schema)
	// An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
	Auto []StrategyAutoInitParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List) A generic monitoring strategy (see below for nested schema)
	// A generic monitoring strategy
	Generic []GenericInitParameters `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit (see below for nested schema)
	// A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
	Static []StaticInitParameters `json:"static,omitempty" tf:"static,omitempty"`
}

type StrategyObservation struct {

	// adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time (see below for nested schema)
	// An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
	Auto []StrategyAutoObservation `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List) A generic monitoring strategy (see below for nested schema)
	// A generic monitoring strategy
	Generic []GenericObservation `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit (see below for nested schema)
	// A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
	Static []StaticObservation `json:"static,omitempty" tf:"static,omitempty"`
}

type StrategyParameters struct {

	// adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time (see below for nested schema)
	// An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
	// +kubebuilder:validation:Optional
	Auto []StrategyAutoParameters `json:"auto,omitempty" tf:"auto,omitempty"`

	// (Block List) A generic monitoring strategy (see below for nested schema)
	// A generic monitoring strategy
	// +kubebuilder:validation:Optional
	Generic []GenericParameters `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit (see below for nested schema)
	// A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
	// +kubebuilder:validation:Optional
	Static []StaticParameters `json:"static,omitempty" tf:"static,omitempty"`
}

type StringFilterInitParameters struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringFilterObservation struct {

	// (String) The operator to match on
	// The operator to match on
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StringFilterParameters struct {

	// (String) The operator to match on
	// The operator to match on
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) The value to match on
	// The value to match on
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// CustomAnomaliesSpec defines the desired state of CustomAnomalies
type CustomAnomaliesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomAnomaliesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomAnomaliesInitParameters `json:"initProvider,omitempty"`
}

// CustomAnomaliesStatus defines the observed state of CustomAnomalies.
type CustomAnomaliesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomAnomaliesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomAnomalies is the Schema for the CustomAnomaliess API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CustomAnomalies struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || (has(self.initProvider) && has(self.initProvider.description))",message="spec.forProvider.description is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.strategy) || (has(self.initProvider) && has(self.initProvider.strategy))",message="spec.forProvider.strategy is a required parameter"
	Spec   CustomAnomaliesSpec   `json:"spec"`
	Status CustomAnomaliesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomAnomaliesList contains a list of CustomAnomaliess
type CustomAnomaliesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomAnomalies `json:"items"`
}

// Repository type metadata.
var (
	CustomAnomalies_Kind             = "CustomAnomalies"
	CustomAnomalies_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomAnomalies_Kind}.String()
	CustomAnomalies_KindAPIVersion   = CustomAnomalies_Kind + "." + CRDGroupVersion.String()
	CustomAnomalies_GroupVersionKind = CRDGroupVersion.WithKind(CustomAnomalies_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomAnomalies{}, &CustomAnomaliesList{})
}
