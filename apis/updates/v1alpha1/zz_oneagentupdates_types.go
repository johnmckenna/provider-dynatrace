// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MaintenanceWindowInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// Select a [maintenance window for OneAgent updates](/ui/settings/builtin:deployment.management.update-windows)
	MaintenanceWindow *string `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`
}

type MaintenanceWindowObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// Select a [maintenance window for OneAgent updates](/ui/settings/builtin:deployment.management.update-windows)
	MaintenanceWindow *string `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`
}

type MaintenanceWindowParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// Select a [maintenance window for OneAgent updates](/ui/settings/builtin:deployment.management.update-windows)
	// +kubebuilder:validation:Optional
	MaintenanceWindow *string `json:"maintenanceWindow" tf:"maintenance_window,omitempty"`
}

type MaintenanceWindowsInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	MaintenanceWindow []MaintenanceWindowInitParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`
}

type MaintenanceWindowsObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	MaintenanceWindow []MaintenanceWindowObservation `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`
}

type MaintenanceWindowsParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	MaintenanceWindow []MaintenanceWindowParameters `json:"maintenanceWindow" tf:"maintenance_window,omitempty"`
}

type OneagentUpdatesInitParameters struct {

	// (Block List, Max: 1) Maintenance windows (see below for nested schema)
	// Maintenance windows
	MaintenanceWindows []MaintenanceWindowsInitParameters `json:"maintenanceWindows,omitempty" tf:"maintenance_windows,omitempty"`

	// (String) Revision
	// Revision
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) Target version
	// Target version
	TargetVersion *string `json:"targetVersion,omitempty" tf:"target_version,omitempty"`

	// (String) Possible Values: AUTOMATIC, AUTOMATIC_DURING_MW, MANUAL
	// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
	UpdateMode *string `json:"updateMode,omitempty" tf:"update_mode,omitempty"`
}

type OneagentUpdatesObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Max: 1) Maintenance windows (see below for nested schema)
	// Maintenance windows
	MaintenanceWindows []MaintenanceWindowsObservation `json:"maintenanceWindows,omitempty" tf:"maintenance_windows,omitempty"`

	// (String) Revision
	// Revision
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) Target version
	// Target version
	TargetVersion *string `json:"targetVersion,omitempty" tf:"target_version,omitempty"`

	// (String) Possible Values: AUTOMATIC, AUTOMATIC_DURING_MW, MANUAL
	// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
	UpdateMode *string `json:"updateMode,omitempty" tf:"update_mode,omitempty"`
}

type OneagentUpdatesParameters struct {

	// (Block List, Max: 1) Maintenance windows (see below for nested schema)
	// Maintenance windows
	// +kubebuilder:validation:Optional
	MaintenanceWindows []MaintenanceWindowsParameters `json:"maintenanceWindows,omitempty" tf:"maintenance_windows,omitempty"`

	// (String) Revision
	// Revision
	// +kubebuilder:validation:Optional
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`

	// (String) The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) Target version
	// Target version
	// +kubebuilder:validation:Optional
	TargetVersion *string `json:"targetVersion,omitempty" tf:"target_version,omitempty"`

	// (String) Possible Values: AUTOMATIC, AUTOMATIC_DURING_MW, MANUAL
	// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
	// +kubebuilder:validation:Optional
	UpdateMode *string `json:"updateMode,omitempty" tf:"update_mode,omitempty"`
}

// OneagentUpdatesSpec defines the desired state of OneagentUpdates
type OneagentUpdatesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OneagentUpdatesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OneagentUpdatesInitParameters `json:"initProvider,omitempty"`
}

// OneagentUpdatesStatus defines the observed state of OneagentUpdates.
type OneagentUpdatesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OneagentUpdatesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OneagentUpdates is the Schema for the OneagentUpdatess API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type OneagentUpdates struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.updateMode) || (has(self.initProvider) && has(self.initProvider.updateMode))",message="spec.forProvider.updateMode is a required parameter"
	Spec   OneagentUpdatesSpec   `json:"spec"`
	Status OneagentUpdatesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OneagentUpdatesList contains a list of OneagentUpdatess
type OneagentUpdatesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OneagentUpdates `json:"items"`
}

// Repository type metadata.
var (
	OneagentUpdates_Kind             = "OneagentUpdates"
	OneagentUpdates_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OneagentUpdates_Kind}.String()
	OneagentUpdates_KindAPIVersion   = OneagentUpdates_Kind + "." + CRDGroupVersion.String()
	OneagentUpdates_GroupVersionKind = CRDGroupVersion.WithKind(OneagentUpdates_Kind)
)

func init() {
	SchemeBuilder.Register(&OneagentUpdates{}, &OneagentUpdatesList{})
}
