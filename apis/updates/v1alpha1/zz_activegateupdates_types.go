// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActivegateUpdatesInitParameters struct {

	// (Boolean) Automatic updates at earliest convenience
	// Automatic updates at earliest convenience
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// (String) The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	// The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ActivegateUpdatesObservation struct {

	// (Boolean) Automatic updates at earliest convenience
	// Automatic updates at earliest convenience
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	// The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ActivegateUpdatesParameters struct {

	// (Boolean) Automatic updates at earliest convenience
	// Automatic updates at earliest convenience
	// +kubebuilder:validation:Optional
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// (String) The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	// The scope of this setting (ENVIRONMENT_ACTIVE_GATE). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

// ActivegateUpdatesSpec defines the desired state of ActivegateUpdates
type ActivegateUpdatesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ActivegateUpdatesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ActivegateUpdatesInitParameters `json:"initProvider,omitempty"`
}

// ActivegateUpdatesStatus defines the observed state of ActivegateUpdates.
type ActivegateUpdatesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ActivegateUpdatesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ActivegateUpdates is the Schema for the ActivegateUpdatess API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ActivegateUpdates struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.autoUpdate) || (has(self.initProvider) && has(self.initProvider.autoUpdate))",message="spec.forProvider.autoUpdate is a required parameter"
	Spec   ActivegateUpdatesSpec   `json:"spec"`
	Status ActivegateUpdatesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ActivegateUpdatesList contains a list of ActivegateUpdatess
type ActivegateUpdatesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ActivegateUpdates `json:"items"`
}

// Repository type metadata.
var (
	ActivegateUpdates_Kind             = "ActivegateUpdates"
	ActivegateUpdates_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ActivegateUpdates_Kind}.String()
	ActivegateUpdates_KindAPIVersion   = ActivegateUpdates_Kind + "." + CRDGroupVersion.String()
	ActivegateUpdates_GroupVersionKind = CRDGroupVersion.WithKind(ActivegateUpdates_Kind)
)

func init() {
	SchemeBuilder.Register(&ActivegateUpdates{}, &ActivegateUpdatesList{})
}
