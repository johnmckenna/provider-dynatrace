// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AttackSettingsInitParameters struct {

	// (Block List, Min: 1, Max: 1) Define global incoming attack control (see below for nested schema)
	// Define global incoming attack control
	DefaultAttackHandling []DefaultAttackHandlingInitParameters `json:"defaultAttackHandling,omitempty" tf:"default_attack_handling,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type AttackSettingsObservation struct {

	// (Block List, Min: 1, Max: 1) Define global incoming attack control (see below for nested schema)
	// Define global incoming attack control
	DefaultAttackHandling []DefaultAttackHandlingObservation `json:"defaultAttackHandling,omitempty" tf:"default_attack_handling,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AttackSettingsParameters struct {

	// (Block List, Min: 1, Max: 1) Define global incoming attack control (see below for nested schema)
	// Define global incoming attack control
	// +kubebuilder:validation:Optional
	DefaultAttackHandling []DefaultAttackHandlingParameters `json:"defaultAttackHandling,omitempty" tf:"default_attack_handling,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type DefaultAttackHandlingInitParameters struct {

	// (String) (v1.290) Possible Values: BLOCK, MONITOR, OFF
	// (v1.290) Possible Values: `BLOCK`, `MONITOR`, `OFF`
	BlockingStrategyDotNet *string `json:"blockingStrategyDotNet,omitempty" tf:"blocking_strategy_dot_net,omitempty"`

	// (String) Possible Values: BLOCK, MONITOR, OFF
	// Possible Values: `BLOCK`, `MONITOR`, `OFF`
	BlockingStrategyJava *string `json:"blockingStrategyJava,omitempty" tf:"blocking_strategy_java,omitempty"`
}

type DefaultAttackHandlingObservation struct {

	// (String) (v1.290) Possible Values: BLOCK, MONITOR, OFF
	// (v1.290) Possible Values: `BLOCK`, `MONITOR`, `OFF`
	BlockingStrategyDotNet *string `json:"blockingStrategyDotNet,omitempty" tf:"blocking_strategy_dot_net,omitempty"`

	// (String) Possible Values: BLOCK, MONITOR, OFF
	// Possible Values: `BLOCK`, `MONITOR`, `OFF`
	BlockingStrategyJava *string `json:"blockingStrategyJava,omitempty" tf:"blocking_strategy_java,omitempty"`
}

type DefaultAttackHandlingParameters struct {

	// (String) (v1.290) Possible Values: BLOCK, MONITOR, OFF
	// (v1.290) Possible Values: `BLOCK`, `MONITOR`, `OFF`
	// +kubebuilder:validation:Optional
	BlockingStrategyDotNet *string `json:"blockingStrategyDotNet,omitempty" tf:"blocking_strategy_dot_net,omitempty"`

	// (String) Possible Values: BLOCK, MONITOR, OFF
	// Possible Values: `BLOCK`, `MONITOR`, `OFF`
	// +kubebuilder:validation:Optional
	BlockingStrategyJava *string `json:"blockingStrategyJava" tf:"blocking_strategy_java,omitempty"`
}

// AttackSettingsSpec defines the desired state of AttackSettings
type AttackSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AttackSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AttackSettingsInitParameters `json:"initProvider,omitempty"`
}

// AttackSettingsStatus defines the observed state of AttackSettings.
type AttackSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AttackSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AttackSettings is the Schema for the AttackSettingss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type AttackSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultAttackHandling) || (has(self.initProvider) && has(self.initProvider.defaultAttackHandling))",message="spec.forProvider.defaultAttackHandling is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	Spec   AttackSettingsSpec   `json:"spec"`
	Status AttackSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AttackSettingsList contains a list of AttackSettingss
type AttackSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AttackSettings `json:"items"`
}

// Repository type metadata.
var (
	AttackSettings_Kind             = "AttackSettings"
	AttackSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AttackSettings_Kind}.String()
	AttackSettings_KindAPIVersion   = AttackSettings_Kind + "." + CRDGroupVersion.String()
	AttackSettings_GroupVersionKind = CRDGroupVersion.WithKind(AttackSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&AttackSettings{}, &AttackSettingsList{})
}
