// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TechnologiesInitParameters struct {

	// (Boolean) NET
	// NET
	EnableDotNet *bool `json:"enableDotNet,omitempty" tf:"enable_dot_net,omitempty"`

	// (Boolean) NET runtimes
	// NET runtimes
	EnableDotNetRuntime *bool `json:"enableDotNetRuntime,omitempty" tf:"enable_dot_net_runtime,omitempty"`

	// (Boolean) Go
	// Go
	EnableGo *bool `json:"enableGo,omitempty" tf:"enable_go,omitempty"`

	// (Boolean) Java
	// Java
	EnableJava *bool `json:"enableJava,omitempty" tf:"enable_java,omitempty"`

	// (Boolean) Java runtimes
	// Java runtimes
	EnableJavaRuntime *bool `json:"enableJavaRuntime,omitempty" tf:"enable_java_runtime,omitempty"`

	// (Boolean) Kubernetes
	// Kubernetes
	EnableKubernetes *bool `json:"enableKubernetes,omitempty" tf:"enable_kubernetes,omitempty"`

	// (Boolean) Node.js
	// Node.js
	EnableNodeJs *bool `json:"enableNodeJs,omitempty" tf:"enable_node_js,omitempty"`

	// (Boolean) Node.js runtimes
	// Node.js runtimes
	EnableNodeJsRuntime *bool `json:"enableNodeJsRuntime,omitempty" tf:"enable_node_js_runtime,omitempty"`

	// (Boolean) PHP
	// PHP
	EnablePHP *bool `json:"enablePhp,omitempty" tf:"enable_php,omitempty"`
}

type TechnologiesObservation struct {

	// (Boolean) NET
	// NET
	EnableDotNet *bool `json:"enableDotNet,omitempty" tf:"enable_dot_net,omitempty"`

	// (Boolean) NET runtimes
	// NET runtimes
	EnableDotNetRuntime *bool `json:"enableDotNetRuntime,omitempty" tf:"enable_dot_net_runtime,omitempty"`

	// (Boolean) Go
	// Go
	EnableGo *bool `json:"enableGo,omitempty" tf:"enable_go,omitempty"`

	// (Boolean) Java
	// Java
	EnableJava *bool `json:"enableJava,omitempty" tf:"enable_java,omitempty"`

	// (Boolean) Java runtimes
	// Java runtimes
	EnableJavaRuntime *bool `json:"enableJavaRuntime,omitempty" tf:"enable_java_runtime,omitempty"`

	// (Boolean) Kubernetes
	// Kubernetes
	EnableKubernetes *bool `json:"enableKubernetes,omitempty" tf:"enable_kubernetes,omitempty"`

	// (Boolean) Node.js
	// Node.js
	EnableNodeJs *bool `json:"enableNodeJs,omitempty" tf:"enable_node_js,omitempty"`

	// (Boolean) Node.js runtimes
	// Node.js runtimes
	EnableNodeJsRuntime *bool `json:"enableNodeJsRuntime,omitempty" tf:"enable_node_js_runtime,omitempty"`

	// (Boolean) PHP
	// PHP
	EnablePHP *bool `json:"enablePhp,omitempty" tf:"enable_php,omitempty"`
}

type TechnologiesParameters struct {

	// (Boolean) NET
	// NET
	// +kubebuilder:validation:Optional
	EnableDotNet *bool `json:"enableDotNet" tf:"enable_dot_net,omitempty"`

	// (Boolean) NET runtimes
	// NET runtimes
	// +kubebuilder:validation:Optional
	EnableDotNetRuntime *bool `json:"enableDotNetRuntime,omitempty" tf:"enable_dot_net_runtime,omitempty"`

	// (Boolean) Go
	// Go
	// +kubebuilder:validation:Optional
	EnableGo *bool `json:"enableGo" tf:"enable_go,omitempty"`

	// (Boolean) Java
	// Java
	// +kubebuilder:validation:Optional
	EnableJava *bool `json:"enableJava" tf:"enable_java,omitempty"`

	// (Boolean) Java runtimes
	// Java runtimes
	// +kubebuilder:validation:Optional
	EnableJavaRuntime *bool `json:"enableJavaRuntime,omitempty" tf:"enable_java_runtime,omitempty"`

	// (Boolean) Kubernetes
	// Kubernetes
	// +kubebuilder:validation:Optional
	EnableKubernetes *bool `json:"enableKubernetes" tf:"enable_kubernetes,omitempty"`

	// (Boolean) Node.js
	// Node.js
	// +kubebuilder:validation:Optional
	EnableNodeJs *bool `json:"enableNodeJs" tf:"enable_node_js,omitempty"`

	// (Boolean) Node.js runtimes
	// Node.js runtimes
	// +kubebuilder:validation:Optional
	EnableNodeJsRuntime *bool `json:"enableNodeJsRuntime,omitempty" tf:"enable_node_js_runtime,omitempty"`

	// (Boolean) PHP
	// PHP
	// +kubebuilder:validation:Optional
	EnablePHP *bool `json:"enablePhp" tf:"enable_php,omitempty"`
}

type VulnerabilitySettingsInitParameters struct {

	// level Vulnerability Analytics
	// Enable Code-level Vulnerability Analytics
	EnableCodeLevelVulnerabilityDetection *bool `json:"enableCodeLevelVulnerabilityDetection,omitempty" tf:"enable_code_level_vulnerability_detection,omitempty"`

	// party Vulnerability Analytics
	// Enable Third-party Vulnerability Analytics
	EnableRuntimeVulnerabilityDetection *bool `json:"enableRuntimeVulnerabilityDetection,omitempty" tf:"enable_runtime_vulnerability_detection,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// (v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeDotNet *string `json:"globalMonitoringModeDotNet,omitempty" tf:"global_monitoring_mode_dot_net,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global Java code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeJava *string `json:"globalMonitoringModeJava,omitempty" tf:"global_monitoring_mode_java,omitempty"`

	// party vulnerability detection control defines the default for all processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global third-party vulnerability detection control defines the default for all processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeTpv *string `json:"globalMonitoringModeTpv,omitempty" tf:"global_monitoring_mode_tpv,omitempty"`

	// (Block List, Min: 1, Max: 1) Vulnerability Analytics can be enabled/disabled per supported technology. (see below for nested schema)
	// Vulnerability Analytics can be enabled/disabled per supported technology.
	Technologies []TechnologiesInitParameters `json:"technologies,omitempty" tf:"technologies,omitempty"`
}

type VulnerabilitySettingsObservation struct {

	// level Vulnerability Analytics
	// Enable Code-level Vulnerability Analytics
	EnableCodeLevelVulnerabilityDetection *bool `json:"enableCodeLevelVulnerabilityDetection,omitempty" tf:"enable_code_level_vulnerability_detection,omitempty"`

	// party Vulnerability Analytics
	// Enable Third-party Vulnerability Analytics
	EnableRuntimeVulnerabilityDetection *bool `json:"enableRuntimeVulnerabilityDetection,omitempty" tf:"enable_runtime_vulnerability_detection,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// (v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeDotNet *string `json:"globalMonitoringModeDotNet,omitempty" tf:"global_monitoring_mode_dot_net,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global Java code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeJava *string `json:"globalMonitoringModeJava,omitempty" tf:"global_monitoring_mode_java,omitempty"`

	// party vulnerability detection control defines the default for all processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global third-party vulnerability detection control defines the default for all processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	GlobalMonitoringModeTpv *string `json:"globalMonitoringModeTpv,omitempty" tf:"global_monitoring_mode_tpv,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Vulnerability Analytics can be enabled/disabled per supported technology. (see below for nested schema)
	// Vulnerability Analytics can be enabled/disabled per supported technology.
	Technologies []TechnologiesObservation `json:"technologies,omitempty" tf:"technologies,omitempty"`
}

type VulnerabilitySettingsParameters struct {

	// level Vulnerability Analytics
	// Enable Code-level Vulnerability Analytics
	// +kubebuilder:validation:Optional
	EnableCodeLevelVulnerabilityDetection *bool `json:"enableCodeLevelVulnerabilityDetection,omitempty" tf:"enable_code_level_vulnerability_detection,omitempty"`

	// party Vulnerability Analytics
	// Enable Third-party Vulnerability Analytics
	// +kubebuilder:validation:Optional
	EnableRuntimeVulnerabilityDetection *bool `json:"enableRuntimeVulnerabilityDetection,omitempty" tf:"enable_runtime_vulnerability_detection,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// (v1.290) Global .NET code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	// +kubebuilder:validation:Optional
	GlobalMonitoringModeDotNet *string `json:"globalMonitoringModeDotNet,omitempty" tf:"global_monitoring_mode_dot_net,omitempty"`

	// level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global Java code-level vulnerability detection control defines the default for all process groups. You can use monitoring rules to override the default for certain processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	// +kubebuilder:validation:Optional
	GlobalMonitoringModeJava *string `json:"globalMonitoringModeJava,omitempty" tf:"global_monitoring_mode_java,omitempty"`

	// party vulnerability detection control defines the default for all processes. Possible Values: MONITORING_OFF, MONITORING_ON
	// Global third-party vulnerability detection control defines the default for all processes. Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	// +kubebuilder:validation:Optional
	GlobalMonitoringModeTpv *string `json:"globalMonitoringModeTpv,omitempty" tf:"global_monitoring_mode_tpv,omitempty"`

	// (Block List, Min: 1, Max: 1) Vulnerability Analytics can be enabled/disabled per supported technology. (see below for nested schema)
	// Vulnerability Analytics can be enabled/disabled per supported technology.
	// +kubebuilder:validation:Optional
	Technologies []TechnologiesParameters `json:"technologies,omitempty" tf:"technologies,omitempty"`
}

// VulnerabilitySettingsSpec defines the desired state of VulnerabilitySettings
type VulnerabilitySettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VulnerabilitySettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VulnerabilitySettingsInitParameters `json:"initProvider,omitempty"`
}

// VulnerabilitySettingsStatus defines the observed state of VulnerabilitySettings.
type VulnerabilitySettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VulnerabilitySettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VulnerabilitySettings is the Schema for the VulnerabilitySettingss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type VulnerabilitySettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enableCodeLevelVulnerabilityDetection) || (has(self.initProvider) && has(self.initProvider.enableCodeLevelVulnerabilityDetection))",message="spec.forProvider.enableCodeLevelVulnerabilityDetection is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enableRuntimeVulnerabilityDetection) || (has(self.initProvider) && has(self.initProvider.enableRuntimeVulnerabilityDetection))",message="spec.forProvider.enableRuntimeVulnerabilityDetection is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.globalMonitoringModeJava) || (has(self.initProvider) && has(self.initProvider.globalMonitoringModeJava))",message="spec.forProvider.globalMonitoringModeJava is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.technologies) || (has(self.initProvider) && has(self.initProvider.technologies))",message="spec.forProvider.technologies is a required parameter"
	Spec   VulnerabilitySettingsSpec   `json:"spec"`
	Status VulnerabilitySettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VulnerabilitySettingsList contains a list of VulnerabilitySettingss
type VulnerabilitySettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VulnerabilitySettings `json:"items"`
}

// Repository type metadata.
var (
	VulnerabilitySettings_Kind             = "VulnerabilitySettings"
	VulnerabilitySettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VulnerabilitySettings_Kind}.String()
	VulnerabilitySettings_KindAPIVersion   = VulnerabilitySettings_Kind + "." + CRDGroupVersion.String()
	VulnerabilitySettings_GroupVersionKind = CRDGroupVersion.WithKind(VulnerabilitySettings_Kind)
)

func init() {
	SchemeBuilder.Register(&VulnerabilitySettings{}, &VulnerabilitySettingsList{})
}
