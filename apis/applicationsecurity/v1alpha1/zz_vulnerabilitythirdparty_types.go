// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VulnerabilityThirdPartyInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: MONITORING_OFF, MONITORING_ON
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (String) Possible Values: EQUALS, NOT_EQUALS
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: HOST_TAG, MANAGEMENT_ZONE, PROCESS_TAG
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property *string `json:"property,omitempty" tf:"property,omitempty"`

	// (String) Condition value
	// Condition value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VulnerabilityThirdPartyObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: MONITORING_OFF, MONITORING_ON
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (String) Possible Values: EQUALS, NOT_EQUALS
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: HOST_TAG, MANAGEMENT_ZONE, PROCESS_TAG
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property *string `json:"property,omitempty" tf:"property,omitempty"`

	// (String) Condition value
	// Condition value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VulnerabilityThirdPartyParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: MONITORING_OFF, MONITORING_ON
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (String) Possible Values: EQUALS, NOT_EQUALS
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: HOST_TAG, MANAGEMENT_ZONE, PROCESS_TAG
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	// +kubebuilder:validation:Optional
	Property *string `json:"property,omitempty" tf:"property,omitempty"`

	// (String) Condition value
	// Condition value
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// VulnerabilityThirdPartySpec defines the desired state of VulnerabilityThirdParty
type VulnerabilityThirdPartySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VulnerabilityThirdPartyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VulnerabilityThirdPartyInitParameters `json:"initProvider,omitempty"`
}

// VulnerabilityThirdPartyStatus defines the observed state of VulnerabilityThirdParty.
type VulnerabilityThirdPartyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VulnerabilityThirdPartyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VulnerabilityThirdParty is the Schema for the VulnerabilityThirdPartys API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type VulnerabilityThirdParty struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.mode) || (has(self.initProvider) && has(self.initProvider.mode))",message="spec.forProvider.mode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.operator) || (has(self.initProvider) && has(self.initProvider.operator))",message="spec.forProvider.operator is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.property) || (has(self.initProvider) && has(self.initProvider.property))",message="spec.forProvider.property is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.value) || (has(self.initProvider) && has(self.initProvider.value))",message="spec.forProvider.value is a required parameter"
	Spec   VulnerabilityThirdPartySpec   `json:"spec"`
	Status VulnerabilityThirdPartyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VulnerabilityThirdPartyList contains a list of VulnerabilityThirdPartys
type VulnerabilityThirdPartyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VulnerabilityThirdParty `json:"items"`
}

// Repository type metadata.
var (
	VulnerabilityThirdParty_Kind             = "VulnerabilityThirdParty"
	VulnerabilityThirdParty_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VulnerabilityThirdParty_Kind}.String()
	VulnerabilityThirdParty_KindAPIVersion   = VulnerabilityThirdParty_Kind + "." + CRDGroupVersion.String()
	VulnerabilityThirdParty_GroupVersionKind = CRDGroupVersion.WithKind(VulnerabilityThirdParty_Kind)
)

func init() {
	SchemeBuilder.Register(&VulnerabilityThirdParty{}, &VulnerabilityThirdPartyList{})
}
