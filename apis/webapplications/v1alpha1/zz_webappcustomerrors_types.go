// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CaptureSettingsInitParameters struct {

	// (Boolean) Capture this error
	// Capture this error
	Capture *bool `json:"capture,omitempty" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type CaptureSettingsObservation struct {

	// (Boolean) Capture this error
	// Capture this error
	Capture *bool `json:"capture,omitempty" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type CaptureSettingsParameters struct {

	// (Boolean) Capture this error
	// Capture this error
	// +kubebuilder:validation:Optional
	Capture *bool `json:"capture" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	// +kubebuilder:validation:Optional
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	// +kubebuilder:validation:Optional
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type ErrorRuleInitParameters struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	CaptureSettings []CaptureSettingsInitParameters `json:"captureSettings,omitempty" tf:"capture_settings,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	KeyMatcher *string `json:"keyMatcher,omitempty" tf:"key_matcher,omitempty"`

	// insensitive key pattern
	// A case-insensitive key pattern
	KeyPattern *string `json:"keyPattern,omitempty" tf:"key_pattern,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	ValueMatcher *string `json:"valueMatcher,omitempty" tf:"value_matcher,omitempty"`

	// insensitive value pattern
	// A case-insensitive value pattern
	ValuePattern *string `json:"valuePattern,omitempty" tf:"value_pattern,omitempty"`
}

type ErrorRuleObservation struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	CaptureSettings []CaptureSettingsObservation `json:"captureSettings,omitempty" tf:"capture_settings,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	KeyMatcher *string `json:"keyMatcher,omitempty" tf:"key_matcher,omitempty"`

	// insensitive key pattern
	// A case-insensitive key pattern
	KeyPattern *string `json:"keyPattern,omitempty" tf:"key_pattern,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	ValueMatcher *string `json:"valueMatcher,omitempty" tf:"value_matcher,omitempty"`

	// insensitive value pattern
	// A case-insensitive value pattern
	ValuePattern *string `json:"valuePattern,omitempty" tf:"value_pattern,omitempty"`
}

type ErrorRuleParameters struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	// +kubebuilder:validation:Optional
	CaptureSettings []CaptureSettingsParameters `json:"captureSettings" tf:"capture_settings,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	// +kubebuilder:validation:Optional
	KeyMatcher *string `json:"keyMatcher" tf:"key_matcher,omitempty"`

	// insensitive key pattern
	// A case-insensitive key pattern
	// +kubebuilder:validation:Optional
	KeyPattern *string `json:"keyPattern,omitempty" tf:"key_pattern,omitempty"`

	// (String) Possible Values: ALL, BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	// +kubebuilder:validation:Optional
	ValueMatcher *string `json:"valueMatcher" tf:"value_matcher,omitempty"`

	// insensitive value pattern
	// A case-insensitive value pattern
	// +kubebuilder:validation:Optional
	ValuePattern *string `json:"valuePattern,omitempty" tf:"value_pattern,omitempty"`
}

type ErrorRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	ErrorRule []ErrorRuleInitParameters `json:"errorRule,omitempty" tf:"error_rule,omitempty"`
}

type ErrorRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	ErrorRule []ErrorRuleObservation `json:"errorRule,omitempty" tf:"error_rule,omitempty"`
}

type ErrorRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ErrorRule []ErrorRuleParameters `json:"errorRule" tf:"error_rule,omitempty"`
}

type WebAppCustomErrorsInitParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	ErrorRules []ErrorRulesInitParameters `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreCustomErrorsInApdexCalculation *bool `json:"ignoreCustomErrorsInApdexCalculation,omitempty" tf:"ignore_custom_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type WebAppCustomErrorsObservation struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	ErrorRules []ErrorRulesObservation `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreCustomErrorsInApdexCalculation *bool `json:"ignoreCustomErrorsInApdexCalculation,omitempty" tf:"ignore_custom_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type WebAppCustomErrorsParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	// +kubebuilder:validation:Optional
	ErrorRules []ErrorRulesParameters `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	// +kubebuilder:validation:Optional
	IgnoreCustomErrorsInApdexCalculation *bool `json:"ignoreCustomErrorsInApdexCalculation,omitempty" tf:"ignore_custom_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

// WebAppCustomErrorsSpec defines the desired state of WebAppCustomErrors
type WebAppCustomErrorsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppCustomErrorsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppCustomErrorsInitParameters `json:"initProvider,omitempty"`
}

// WebAppCustomErrorsStatus defines the observed state of WebAppCustomErrors.
type WebAppCustomErrorsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppCustomErrorsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppCustomErrors is the Schema for the WebAppCustomErrorss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppCustomErrors struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ignoreCustomErrorsInApdexCalculation) || (has(self.initProvider) && has(self.initProvider.ignoreCustomErrorsInApdexCalculation))",message="spec.forProvider.ignoreCustomErrorsInApdexCalculation is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	Spec   WebAppCustomErrorsSpec   `json:"spec"`
	Status WebAppCustomErrorsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppCustomErrorsList contains a list of WebAppCustomErrorss
type WebAppCustomErrorsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppCustomErrors `json:"items"`
}

// Repository type metadata.
var (
	WebAppCustomErrors_Kind             = "WebAppCustomErrors"
	WebAppCustomErrors_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppCustomErrors_Kind}.String()
	WebAppCustomErrors_KindAPIVersion   = WebAppCustomErrors_Kind + "." + CRDGroupVersion.String()
	WebAppCustomErrors_GroupVersionKind = CRDGroupVersion.WithKind(WebAppCustomErrors_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppCustomErrors{}, &WebAppCustomErrorsList{})
}
