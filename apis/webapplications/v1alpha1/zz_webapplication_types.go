// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionInitParameters struct {

	// (String) The domain where the action is performed.
	// The domain where the action is performed.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the action
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionObservation struct {

	// (String) The domain where the action is performed.
	// The domain where the action is performed.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the action
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionParameters struct {

	// (String) The domain where the action is performed.
	// The domain where the action is performed.
	// +kubebuilder:validation:Optional
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the action
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AdditionalEventHandlersInitParameters struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur event handler enabled/disabled
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change event handler enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click event handler enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Number) Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes *float64 `json:"maxDomNodes,omitempty" tf:"max_dom_nodes,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// Mouseup event handler enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) toString method enabled/disabled
	// toString method enabled/disabled
	ToStringMethod *bool `json:"toStringMethod,omitempty" tf:"to_string_method,omitempty"`

	// (Boolean) Use mouseup event for clicks enabled/disabled
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks *bool `json:"useMouseUpEventForClicks,omitempty" tf:"use_mouse_up_event_for_clicks,omitempty"`
}

type AdditionalEventHandlersObservation struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur event handler enabled/disabled
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change event handler enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click event handler enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Number) Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes *float64 `json:"maxDomNodes,omitempty" tf:"max_dom_nodes,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// Mouseup event handler enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) toString method enabled/disabled
	// toString method enabled/disabled
	ToStringMethod *bool `json:"toStringMethod,omitempty" tf:"to_string_method,omitempty"`

	// (Boolean) Use mouseup event for clicks enabled/disabled
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks *bool `json:"useMouseUpEventForClicks,omitempty" tf:"use_mouse_up_event_for_clicks,omitempty"`
}

type AdditionalEventHandlersParameters struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur event handler enabled/disabled
	// +kubebuilder:validation:Optional
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change event handler enabled/disabled
	// +kubebuilder:validation:Optional
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click event handler enabled/disabled
	// +kubebuilder:validation:Optional
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Number) Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	// +kubebuilder:validation:Optional
	MaxDomNodes *float64 `json:"maxDomNodes" tf:"max_dom_nodes,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// Mouseup event handler enabled/disabled
	// +kubebuilder:validation:Optional
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) toString method enabled/disabled
	// toString method enabled/disabled
	// +kubebuilder:validation:Optional
	ToStringMethod *bool `json:"toStringMethod,omitempty" tf:"to_string_method,omitempty"`

	// (Boolean) Use mouseup event for clicks enabled/disabled
	// Use mouseup event for clicks enabled/disabled
	// +kubebuilder:validation:Optional
	UseMouseUpEventForClicks *bool `json:"useMouseUpEventForClicks,omitempty" tf:"use_mouse_up_event_for_clicks,omitempty"`
}

type AdvancedJavascriptTagSettingsInitParameters struct {

	// (Block List, Min: 1, Max: 1) Additional event handlers and wrappers (see below for nested schema)
	// Additional event handlers and wrappers
	AdditionalEventHandlers []AdditionalEventHandlersInitParameters `json:"additionalEventHandlers,omitempty" tf:"additional_event_handlers,omitempty"`

	// (Block List, Max: 1) In addition to the event handlers, events called using addEventListener or attachEvent can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page (see below for nested schema)
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings []EventWrapperSettingsInitParameters `json:"eventWrapperSettings,omitempty" tf:"event_wrapper_settings,omitempty"`

	// (Block List, Max: 1) Global event capture settings (see below for nested schema)
	// Global event capture settings
	GlobalEventCaptureSettings []GlobalEventCaptureSettingsInitParameters `json:"globalEventCaptureSettings,omitempty" tf:"global_event_capture_settings,omitempty"`

	// (Boolean) Instrumentation of unsupported Ajax frameworks enabled/disabled
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks *bool `json:"instrumentUnsupportedAjaxFrameworks,omitempty" tf:"instrument_unsupported_ajax_frameworks,omitempty"`

	// (Number) Maximum character length for action names. Valid values range from 5 to 10000.
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength *float64 `json:"maxActionNameLength,omitempty" tf:"max_action_name_length,omitempty"`

	// (Number) Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture *float64 `json:"maxErrorsToCapture,omitempty" tf:"max_errors_to_capture,omitempty"`

	// alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are ^, \, < and >.
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape *string `json:"specialCharactersToEscape,omitempty" tf:"special_characters_to_escape,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox *bool `json:"syncBeaconFirefox,omitempty" tf:"sync_beacon_firefox,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer *bool `json:"syncBeaconInternetExplorer,omitempty" tf:"sync_beacon_internet_explorer,omitempty"`
}

type AdvancedJavascriptTagSettingsObservation struct {

	// (Block List, Min: 1, Max: 1) Additional event handlers and wrappers (see below for nested schema)
	// Additional event handlers and wrappers
	AdditionalEventHandlers []AdditionalEventHandlersObservation `json:"additionalEventHandlers,omitempty" tf:"additional_event_handlers,omitempty"`

	// (Block List, Max: 1) In addition to the event handlers, events called using addEventListener or attachEvent can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page (see below for nested schema)
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings []EventWrapperSettingsObservation `json:"eventWrapperSettings,omitempty" tf:"event_wrapper_settings,omitempty"`

	// (Block List, Max: 1) Global event capture settings (see below for nested schema)
	// Global event capture settings
	GlobalEventCaptureSettings []GlobalEventCaptureSettingsObservation `json:"globalEventCaptureSettings,omitempty" tf:"global_event_capture_settings,omitempty"`

	// (Boolean) Instrumentation of unsupported Ajax frameworks enabled/disabled
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks *bool `json:"instrumentUnsupportedAjaxFrameworks,omitempty" tf:"instrument_unsupported_ajax_frameworks,omitempty"`

	// (Number) Maximum character length for action names. Valid values range from 5 to 10000.
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength *float64 `json:"maxActionNameLength,omitempty" tf:"max_action_name_length,omitempty"`

	// (Number) Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture *float64 `json:"maxErrorsToCapture,omitempty" tf:"max_errors_to_capture,omitempty"`

	// alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are ^, \, < and >.
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape *string `json:"specialCharactersToEscape,omitempty" tf:"special_characters_to_escape,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox *bool `json:"syncBeaconFirefox,omitempty" tf:"sync_beacon_firefox,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer *bool `json:"syncBeaconInternetExplorer,omitempty" tf:"sync_beacon_internet_explorer,omitempty"`
}

type AdvancedJavascriptTagSettingsParameters struct {

	// (Block List, Min: 1, Max: 1) Additional event handlers and wrappers (see below for nested schema)
	// Additional event handlers and wrappers
	// +kubebuilder:validation:Optional
	AdditionalEventHandlers []AdditionalEventHandlersParameters `json:"additionalEventHandlers" tf:"additional_event_handlers,omitempty"`

	// (Block List, Max: 1) In addition to the event handlers, events called using addEventListener or attachEvent can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page (see below for nested schema)
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	// +kubebuilder:validation:Optional
	EventWrapperSettings []EventWrapperSettingsParameters `json:"eventWrapperSettings,omitempty" tf:"event_wrapper_settings,omitempty"`

	// (Block List, Max: 1) Global event capture settings (see below for nested schema)
	// Global event capture settings
	// +kubebuilder:validation:Optional
	GlobalEventCaptureSettings []GlobalEventCaptureSettingsParameters `json:"globalEventCaptureSettings,omitempty" tf:"global_event_capture_settings,omitempty"`

	// (Boolean) Instrumentation of unsupported Ajax frameworks enabled/disabled
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	// +kubebuilder:validation:Optional
	InstrumentUnsupportedAjaxFrameworks *bool `json:"instrumentUnsupportedAjaxFrameworks,omitempty" tf:"instrument_unsupported_ajax_frameworks,omitempty"`

	// (Number) Maximum character length for action names. Valid values range from 5 to 10000.
	// Maximum character length for action names. Valid values range from 5 to 10000.
	// +kubebuilder:validation:Optional
	MaxActionNameLength *float64 `json:"maxActionNameLength" tf:"max_action_name_length,omitempty"`

	// (Number) Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	// +kubebuilder:validation:Optional
	MaxErrorsToCapture *float64 `json:"maxErrorsToCapture" tf:"max_errors_to_capture,omitempty"`

	// alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are ^, \, < and >.
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	// +kubebuilder:validation:Optional
	SpecialCharactersToEscape *string `json:"specialCharactersToEscape,omitempty" tf:"special_characters_to_escape,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	// +kubebuilder:validation:Optional
	SyncBeaconFirefox *bool `json:"syncBeaconFirefox,omitempty" tf:"sync_beacon_firefox,omitempty"`

	// (Boolean) Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	// +kubebuilder:validation:Optional
	SyncBeaconInternetExplorer *bool `json:"syncBeaconInternetExplorer,omitempty" tf:"sync_beacon_internet_explorer,omitempty"`
}

type BrowserRestrictionSettingsInitParameters struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// A list of browser restrictions
	Restrictions []RestrictionsInitParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type BrowserRestrictionSettingsObservation struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// A list of browser restrictions
	Restrictions []RestrictionsObservation `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type BrowserRestrictionSettingsParameters struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// A list of browser restrictions
	// +kubebuilder:validation:Optional
	Restrictions []RestrictionsParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type CaptureInitParameters struct {

	// (String) The name of the meta data to capture
	// The name of the meta data to capture
	CapturingName *string `json:"capturingName,omitempty" tf:"capturing_name,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Name for displaying the captured values in Dynatrace
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) true if this metadata should be captured regardless of the privacy settings, false otherwise
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata *bool `json:"publicMetadata,omitempty" tf:"public_metadata,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Number) The unique ID of the meta data to capture
	// The unique ID of the meta data to capture
	UniqueID *float64 `json:"uniqueId,omitempty" tf:"unique_id,omitempty"`

	// (Boolean) true if the last captured value should be used for this metadata. By default the first value will be used.
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue *bool `json:"useLastValue,omitempty" tf:"use_last_value,omitempty"`
}

type CaptureObservation struct {

	// (String) The name of the meta data to capture
	// The name of the meta data to capture
	CapturingName *string `json:"capturingName,omitempty" tf:"capturing_name,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Name for displaying the captured values in Dynatrace
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) true if this metadata should be captured regardless of the privacy settings, false otherwise
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata *bool `json:"publicMetadata,omitempty" tf:"public_metadata,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Number) The unique ID of the meta data to capture
	// The unique ID of the meta data to capture
	UniqueID *float64 `json:"uniqueId,omitempty" tf:"unique_id,omitempty"`

	// (Boolean) true if the last captured value should be used for this metadata. By default the first value will be used.
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue *bool `json:"useLastValue,omitempty" tf:"use_last_value,omitempty"`
}

type CaptureParameters struct {

	// (String) The name of the meta data to capture
	// The name of the meta data to capture
	// +kubebuilder:validation:Optional
	CapturingName *string `json:"capturingName" tf:"capturing_name,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Name for displaying the captured values in Dynatrace
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Boolean) true if this metadata should be captured regardless of the privacy settings, false otherwise
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	// +kubebuilder:validation:Optional
	PublicMetadata *bool `json:"publicMetadata,omitempty" tf:"public_metadata,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (Number) The unique ID of the meta data to capture
	// The unique ID of the meta data to capture
	// +kubebuilder:validation:Optional
	UniqueID *float64 `json:"uniqueId,omitempty" tf:"unique_id,omitempty"`

	// (Boolean) true if the last captured value should be used for this metadata. By default the first value will be used.
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	// +kubebuilder:validation:Optional
	UseLastValue *bool `json:"useLastValue,omitempty" tf:"use_last_value,omitempty"`
}

type ConditionInitParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type ConditionObservation struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type ConditionParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand1 *string `json:"operand1" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`
}

type ConditionsConditionInitParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type ConditionsConditionObservation struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type ConditionsConditionParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand1 *string `json:"operand1" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`
}

type ConditionsInitParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ConditionsObservation struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ConditionsParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type ContentCaptureInitParameters struct {

	// (Boolean) JavaScript errors monitoring enabled/disabled
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors *bool `json:"javascriptErrors,omitempty" tf:"javascript_errors,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for resource timings capture (see below for nested schema)
	// Settings for resource timings capture
	ResourceTimingSettings []ResourceTimingSettingsInitParameters `json:"resourceTimingSettings,omitempty" tf:"resource_timing_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for timed action capture (see below for nested schema)
	// Settings for timed action capture
	TimeoutSettings []TimeoutSettingsInitParameters `json:"timeoutSettings,omitempty" tf:"timeout_settings,omitempty"`

	// (Boolean) Visually complete and Speed index support enabled/disabled
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex *bool `json:"visuallyCompleteAndSpeedIndex,omitempty" tf:"visually_complete_and_speed_index,omitempty"`

	// (Block List, Max: 1) Settings for VisuallyComplete (see below for nested schema)
	// Settings for VisuallyComplete
	VisuallyCompleteSettings []VisuallyCompleteSettingsInitParameters `json:"visuallyCompleteSettings,omitempty" tf:"visually_complete_settings,omitempty"`
}

type ContentCaptureObservation struct {

	// (Boolean) JavaScript errors monitoring enabled/disabled
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors *bool `json:"javascriptErrors,omitempty" tf:"javascript_errors,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for resource timings capture (see below for nested schema)
	// Settings for resource timings capture
	ResourceTimingSettings []ResourceTimingSettingsObservation `json:"resourceTimingSettings,omitempty" tf:"resource_timing_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for timed action capture (see below for nested schema)
	// Settings for timed action capture
	TimeoutSettings []TimeoutSettingsObservation `json:"timeoutSettings,omitempty" tf:"timeout_settings,omitempty"`

	// (Boolean) Visually complete and Speed index support enabled/disabled
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex *bool `json:"visuallyCompleteAndSpeedIndex,omitempty" tf:"visually_complete_and_speed_index,omitempty"`

	// (Block List, Max: 1) Settings for VisuallyComplete (see below for nested schema)
	// Settings for VisuallyComplete
	VisuallyCompleteSettings []VisuallyCompleteSettingsObservation `json:"visuallyCompleteSettings,omitempty" tf:"visually_complete_settings,omitempty"`
}

type ContentCaptureParameters struct {

	// (Boolean) JavaScript errors monitoring enabled/disabled
	// JavaScript errors monitoring enabled/disabled
	// +kubebuilder:validation:Optional
	JavascriptErrors *bool `json:"javascriptErrors,omitempty" tf:"javascript_errors,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for resource timings capture (see below for nested schema)
	// Settings for resource timings capture
	// +kubebuilder:validation:Optional
	ResourceTimingSettings []ResourceTimingSettingsParameters `json:"resourceTimingSettings" tf:"resource_timing_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for timed action capture (see below for nested schema)
	// Settings for timed action capture
	// +kubebuilder:validation:Optional
	TimeoutSettings []TimeoutSettingsParameters `json:"timeoutSettings" tf:"timeout_settings,omitempty"`

	// (Boolean) Visually complete and Speed index support enabled/disabled
	// Visually complete and Speed index support enabled/disabled
	// +kubebuilder:validation:Optional
	VisuallyCompleteAndSpeedIndex *bool `json:"visuallyCompleteAndSpeedIndex,omitempty" tf:"visually_complete_and_speed_index,omitempty"`

	// (Block List, Max: 1) Settings for VisuallyComplete (see below for nested schema)
	// Settings for VisuallyComplete
	// +kubebuilder:validation:Optional
	VisuallyCompleteSettings []VisuallyCompleteSettingsParameters `json:"visuallyCompleteSettings,omitempty" tf:"visually_complete_settings,omitempty"`
}

type ConversionGoalsInitParameters struct {

	// (Block List, Min: 1) A conversion goal of the application (see below for nested schema)
	// A conversion goal of the application
	Goal []GoalInitParameters `json:"goal,omitempty" tf:"goal,omitempty"`
}

type ConversionGoalsObservation struct {

	// (Block List, Min: 1) A conversion goal of the application (see below for nested schema)
	// A conversion goal of the application
	Goal []GoalObservation `json:"goal,omitempty" tf:"goal,omitempty"`
}

type ConversionGoalsParameters struct {

	// (Block List, Min: 1) A conversion goal of the application (see below for nested schema)
	// A conversion goal of the application
	// +kubebuilder:validation:Optional
	Goal []GoalParameters `json:"goal" tf:"goal,omitempty"`
}

type CustomActionApdexSettingsInitParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type CustomActionApdexSettingsObservation struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type CustomActionApdexSettingsParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingThreshold *float64 `json:"frustratingThreshold" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedThreshold *float64 `json:"toleratedThreshold" tf:"tolerated_threshold,omitempty"`
}

type CustomActionNamingRulesInitParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []CustomActionNamingRulesRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type CustomActionNamingRulesObservation struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []CustomActionNamingRulesRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type CustomActionNamingRulesParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	// +kubebuilder:validation:Optional
	Rule []CustomActionNamingRulesRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type CustomActionNamingRulesRuleInitParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type CustomActionNamingRulesRuleObservation struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type CustomActionNamingRulesRuleParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	// +kubebuilder:validation:Optional
	Template *string `json:"template" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	// +kubebuilder:validation:Optional
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type DestinationInitParameters struct {

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The path to be reached to hit the conversion goal
	// The path to be reached to hit the conversion goal
	URLOrPath *string `json:"urlOrPath,omitempty" tf:"url_or_path,omitempty"`
}

type DestinationObservation struct {

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The path to be reached to hit the conversion goal
	// The path to be reached to hit the conversion goal
	URLOrPath *string `json:"urlOrPath,omitempty" tf:"url_or_path,omitempty"`
}

type DestinationParameters struct {

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	// +kubebuilder:validation:Optional
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The path to be reached to hit the conversion goal
	// The path to be reached to hit the conversion goal
	// +kubebuilder:validation:Optional
	URLOrPath *string `json:"urlOrPath" tf:"url_or_path,omitempty"`
}

type EventWrapperSettingsInitParameters struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur enabled/disabled
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type EventWrapperSettingsObservation struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur enabled/disabled
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type EventWrapperSettingsParameters struct {

	// (Boolean) Blur event handler enabled/disabled
	// Blur enabled/disabled
	// +kubebuilder:validation:Optional
	Blur *bool `json:"blur,omitempty" tf:"blur,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	// +kubebuilder:validation:Optional
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	// +kubebuilder:validation:Optional
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	// +kubebuilder:validation:Optional
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	// +kubebuilder:validation:Optional
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	// +kubebuilder:validation:Optional
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type GlobalEventCaptureSettingsInitParameters struct {

	// (String) Additional events to be captured globally as user input.
	// Additional events to be captured globally as user input.
	//
	// For example `DragStart` or `DragEnd`. Maximum 100 characters.
	AdditionalEventCapturedAsUserInput *string `json:"additionalEventCapturedAsUserInput,omitempty" tf:"additional_event_captured_as_user_input,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) DoubleClick enabled/disabled
	// DoubleClick enabled/disabled
	Doubleclick *bool `json:"doubleclick,omitempty" tf:"doubleclick,omitempty"`

	// (Boolean) KeyDown enabled/disabled
	// KeyDown enabled/disabled
	Keydown *bool `json:"keydown,omitempty" tf:"keydown,omitempty"`

	// (Boolean) KeyUp enabled/disabled
	// KeyUp enabled/disabled
	Keyup *bool `json:"keyup,omitempty" tf:"keyup,omitempty"`

	// (Boolean) MouseDown enabled/disabled
	// MouseDown enabled/disabled
	Mousedown *bool `json:"mousedown,omitempty" tf:"mousedown,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) Scroll enabled/disabled
	// Scroll enabled/disabled
	Scroll *bool `json:"scroll,omitempty" tf:"scroll,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type GlobalEventCaptureSettingsObservation struct {

	// (String) Additional events to be captured globally as user input.
	// Additional events to be captured globally as user input.
	//
	// For example `DragStart` or `DragEnd`. Maximum 100 characters.
	AdditionalEventCapturedAsUserInput *string `json:"additionalEventCapturedAsUserInput,omitempty" tf:"additional_event_captured_as_user_input,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) DoubleClick enabled/disabled
	// DoubleClick enabled/disabled
	Doubleclick *bool `json:"doubleclick,omitempty" tf:"doubleclick,omitempty"`

	// (Boolean) KeyDown enabled/disabled
	// KeyDown enabled/disabled
	Keydown *bool `json:"keydown,omitempty" tf:"keydown,omitempty"`

	// (Boolean) KeyUp enabled/disabled
	// KeyUp enabled/disabled
	Keyup *bool `json:"keyup,omitempty" tf:"keyup,omitempty"`

	// (Boolean) MouseDown enabled/disabled
	// MouseDown enabled/disabled
	Mousedown *bool `json:"mousedown,omitempty" tf:"mousedown,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) Scroll enabled/disabled
	// Scroll enabled/disabled
	Scroll *bool `json:"scroll,omitempty" tf:"scroll,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type GlobalEventCaptureSettingsParameters struct {

	// (String) Additional events to be captured globally as user input.
	// Additional events to be captured globally as user input.
	//
	// For example `DragStart` or `DragEnd`. Maximum 100 characters.
	// +kubebuilder:validation:Optional
	AdditionalEventCapturedAsUserInput *string `json:"additionalEventCapturedAsUserInput,omitempty" tf:"additional_event_captured_as_user_input,omitempty"`

	// (Boolean) Change event handler enabled/disabled
	// Change enabled/disabled
	// +kubebuilder:validation:Optional
	Change *bool `json:"change,omitempty" tf:"change,omitempty"`

	// (Boolean) Click event handler enabled/disabled
	// Click enabled/disabled
	// +kubebuilder:validation:Optional
	Click *bool `json:"click,omitempty" tf:"click,omitempty"`

	// (Boolean) DoubleClick enabled/disabled
	// DoubleClick enabled/disabled
	// +kubebuilder:validation:Optional
	Doubleclick *bool `json:"doubleclick,omitempty" tf:"doubleclick,omitempty"`

	// (Boolean) KeyDown enabled/disabled
	// KeyDown enabled/disabled
	// +kubebuilder:validation:Optional
	Keydown *bool `json:"keydown,omitempty" tf:"keydown,omitempty"`

	// (Boolean) KeyUp enabled/disabled
	// KeyUp enabled/disabled
	// +kubebuilder:validation:Optional
	Keyup *bool `json:"keyup,omitempty" tf:"keyup,omitempty"`

	// (Boolean) MouseDown enabled/disabled
	// MouseDown enabled/disabled
	// +kubebuilder:validation:Optional
	Mousedown *bool `json:"mousedown,omitempty" tf:"mousedown,omitempty"`

	// (Boolean) Mouseup event handler enabled/disabled
	// MouseUp enabled/disabled
	// +kubebuilder:validation:Optional
	Mouseup *bool `json:"mouseup,omitempty" tf:"mouseup,omitempty"`

	// (Boolean) Scroll enabled/disabled
	// Scroll enabled/disabled
	// +kubebuilder:validation:Optional
	Scroll *bool `json:"scroll,omitempty" tf:"scroll,omitempty"`

	// (Boolean) TouchEnd enabled/disabled
	// TouchEnd enabled/disabled
	// +kubebuilder:validation:Optional
	TouchEnd *bool `json:"touchEnd,omitempty" tf:"touch_end,omitempty"`

	// (Boolean) TouchStart enabled/disabled
	// TouchStart enabled/disabled
	// +kubebuilder:validation:Optional
	TouchStart *bool `json:"touchStart,omitempty" tf:"touch_start,omitempty"`
}

type GoalInitParameters struct {

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	Destination []DestinationInitParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// (String) The ID of this resource.
	// The ID of conversion goal.
	//
	// Omit it while creating a new conversion goal
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the conversion goal. Possible values are `Destination`, `UserAction`, `VisitDuration` and `VisitNumActions`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	UserAction []UserActionInitParameters `json:"userAction,omitempty" tf:"user_action,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	VisitDuration []VisitDurationInitParameters `json:"visitDuration,omitempty" tf:"visit_duration,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	VisitNumAction []VisitNumActionInitParameters `json:"visitNumAction,omitempty" tf:"visit_num_action,omitempty"`
}

type GoalObservation struct {

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	Destination []DestinationObservation `json:"destination,omitempty" tf:"destination,omitempty"`

	// (String) The ID of this resource.
	// The ID of conversion goal.
	//
	// Omit it while creating a new conversion goal
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the conversion goal. Possible values are `Destination`, `UserAction`, `VisitDuration` and `VisitNumActions`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	UserAction []UserActionObservation `json:"userAction,omitempty" tf:"user_action,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	VisitDuration []VisitDurationObservation `json:"visitDuration,omitempty" tf:"visit_duration,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	VisitNumAction []VisitNumActionObservation `json:"visitNumAction,omitempty" tf:"visit_num_action,omitempty"`
}

type GoalParameters struct {

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	// +kubebuilder:validation:Optional
	Destination []DestinationParameters `json:"destination,omitempty" tf:"destination,omitempty"`

	// (String) The ID of this resource.
	// The ID of conversion goal.
	//
	// Omit it while creating a new conversion goal
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the conversion goal. Possible values are `Destination`, `UserAction`, `VisitDuration` and `VisitNumActions`
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	// +kubebuilder:validation:Optional
	UserAction []UserActionParameters `json:"userAction,omitempty" tf:"user_action,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	// +kubebuilder:validation:Optional
	VisitDuration []VisitDurationParameters `json:"visitDuration,omitempty" tf:"visit_duration,omitempty"`

	// based conversion goal (see below for nested schema)
	// Configuration of a destination-based conversion goal
	// +kubebuilder:validation:Optional
	VisitNumAction []VisitNumActionParameters `json:"visitNumAction,omitempty" tf:"visit_num_action,omitempty"`
}

type IPAddressRestrictionSettingsInitParameters struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions []IPAddressRestrictionSettingsRestrictionsInitParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type IPAddressRestrictionSettingsObservation struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions []IPAddressRestrictionSettingsRestrictionsObservation `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type IPAddressRestrictionSettingsParameters struct {

	// (String) The mode of the list of browser restrictions. Possible values area EXCLUDE and INCLUDE.
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`

	// (Block List, Max: 1) A list of browser restrictions (see below for nested schema)
	// The IP addresses or the IP address ranges to be mapped to the location
	// +kubebuilder:validation:Optional
	Restrictions []IPAddressRestrictionSettingsRestrictionsParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`
}

type IPAddressRestrictionSettingsRestrictionsInitParameters struct {

	// (Block List, Min: 1) The IP address or the IP address range to be mapped to the location (see below for nested schema)
	// The IP address or the IP address range to be mapped to the location
	Range []RangeInitParameters `json:"range,omitempty" tf:"range,omitempty"`
}

type IPAddressRestrictionSettingsRestrictionsObservation struct {

	// (Block List, Min: 1) The IP address or the IP address range to be mapped to the location (see below for nested schema)
	// The IP address or the IP address range to be mapped to the location
	Range []RangeObservation `json:"range,omitempty" tf:"range,omitempty"`
}

type IPAddressRestrictionSettingsRestrictionsParameters struct {

	// (Block List, Min: 1) The IP address or the IP address range to be mapped to the location (see below for nested schema)
	// The IP address or the IP address range to be mapped to the location
	// +kubebuilder:validation:Optional
	Range []RangeParameters `json:"range" tf:"range,omitempty"`
}

type JavascriptFrameworkSupportInitParameters struct {

	// (Boolean) ActiveXObject support enabled/disabled
	// ActiveXObject support enabled/disabled
	ActiveXObject *bool `json:"activeXObject,omitempty" tf:"active_x_object,omitempty"`

	// (Boolean) AngularJS and Angular support enabled/disabled
	// AngularJS and Angular support enabled/disabled
	Angular *bool `json:"angular,omitempty" tf:"angular,omitempty"`

	// (Boolean) Dojo support enabled/disabled
	// Dojo support enabled/disabled
	Dojo *bool `json:"dojo,omitempty" tf:"dojo,omitempty"`

	// (Boolean) ExtJS, Sencha Touch support enabled/disabled
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs *bool `json:"extjs,omitempty" tf:"extjs,omitempty"`

	// (Boolean) ICEfaces support enabled/disabled
	// ICEfaces support enabled/disabled
	Icefaces *bool `json:"icefaces,omitempty" tf:"icefaces,omitempty"`

	// (Boolean) jQuery, Backbone.js support enabled/disabled
	// jQuery, Backbone.js support enabled/disabled
	Jquery *bool `json:"jquery,omitempty" tf:"jquery,omitempty"`

	// (Boolean) MooTools support enabled/disabled
	// MooTools support enabled/disabled
	MooTools *bool `json:"mooTools,omitempty" tf:"moo_tools,omitempty"`

	// (Boolean) Prototype support enabled/disabled
	// Prototype support enabled/disabled
	Prototype *bool `json:"prototype,omitempty" tf:"prototype,omitempty"`
}

type JavascriptFrameworkSupportObservation struct {

	// (Boolean) ActiveXObject support enabled/disabled
	// ActiveXObject support enabled/disabled
	ActiveXObject *bool `json:"activeXObject,omitempty" tf:"active_x_object,omitempty"`

	// (Boolean) AngularJS and Angular support enabled/disabled
	// AngularJS and Angular support enabled/disabled
	Angular *bool `json:"angular,omitempty" tf:"angular,omitempty"`

	// (Boolean) Dojo support enabled/disabled
	// Dojo support enabled/disabled
	Dojo *bool `json:"dojo,omitempty" tf:"dojo,omitempty"`

	// (Boolean) ExtJS, Sencha Touch support enabled/disabled
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs *bool `json:"extjs,omitempty" tf:"extjs,omitempty"`

	// (Boolean) ICEfaces support enabled/disabled
	// ICEfaces support enabled/disabled
	Icefaces *bool `json:"icefaces,omitempty" tf:"icefaces,omitempty"`

	// (Boolean) jQuery, Backbone.js support enabled/disabled
	// jQuery, Backbone.js support enabled/disabled
	Jquery *bool `json:"jquery,omitempty" tf:"jquery,omitempty"`

	// (Boolean) MooTools support enabled/disabled
	// MooTools support enabled/disabled
	MooTools *bool `json:"mooTools,omitempty" tf:"moo_tools,omitempty"`

	// (Boolean) Prototype support enabled/disabled
	// Prototype support enabled/disabled
	Prototype *bool `json:"prototype,omitempty" tf:"prototype,omitempty"`
}

type JavascriptFrameworkSupportParameters struct {

	// (Boolean) ActiveXObject support enabled/disabled
	// ActiveXObject support enabled/disabled
	// +kubebuilder:validation:Optional
	ActiveXObject *bool `json:"activeXObject,omitempty" tf:"active_x_object,omitempty"`

	// (Boolean) AngularJS and Angular support enabled/disabled
	// AngularJS and Angular support enabled/disabled
	// +kubebuilder:validation:Optional
	Angular *bool `json:"angular,omitempty" tf:"angular,omitempty"`

	// (Boolean) Dojo support enabled/disabled
	// Dojo support enabled/disabled
	// +kubebuilder:validation:Optional
	Dojo *bool `json:"dojo,omitempty" tf:"dojo,omitempty"`

	// (Boolean) ExtJS, Sencha Touch support enabled/disabled
	// ExtJS, Sencha Touch support enabled/disabled
	// +kubebuilder:validation:Optional
	Extjs *bool `json:"extjs,omitempty" tf:"extjs,omitempty"`

	// (Boolean) ICEfaces support enabled/disabled
	// ICEfaces support enabled/disabled
	// +kubebuilder:validation:Optional
	Icefaces *bool `json:"icefaces,omitempty" tf:"icefaces,omitempty"`

	// (Boolean) jQuery, Backbone.js support enabled/disabled
	// jQuery, Backbone.js support enabled/disabled
	// +kubebuilder:validation:Optional
	Jquery *bool `json:"jquery,omitempty" tf:"jquery,omitempty"`

	// (Boolean) MooTools support enabled/disabled
	// MooTools support enabled/disabled
	// +kubebuilder:validation:Optional
	MooTools *bool `json:"mooTools,omitempty" tf:"moo_tools,omitempty"`

	// (Boolean) Prototype support enabled/disabled
	// Prototype support enabled/disabled
	// +kubebuilder:validation:Optional
	Prototype *bool `json:"prototype,omitempty" tf:"prototype,omitempty"`
}

type JavascriptInjectionRulesInitParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// Java script injection rule
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type JavascriptInjectionRulesObservation struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// Java script injection rule
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type JavascriptInjectionRulesParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// Java script injection rule
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule" tf:"rule,omitempty"`
}

type KeyUserActionsInitParameters struct {

	// (Block Set, Min: 1) Configuration of the key user action (see below for nested schema)
	// Configuration of the key user action
	Action []ActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`
}

type KeyUserActionsObservation struct {

	// (Block Set, Min: 1) Configuration of the key user action (see below for nested schema)
	// Configuration of the key user action
	Action []ActionObservation `json:"action,omitempty" tf:"action,omitempty"`
}

type KeyUserActionsParameters struct {

	// (Block Set, Min: 1) Configuration of the key user action (see below for nested schema)
	// Configuration of the key user action
	// +kubebuilder:validation:Optional
	Action []ActionParameters `json:"action" tf:"action,omitempty"`
}

type LoadActionApdexSettingsInitParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type LoadActionApdexSettingsObservation struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type LoadActionApdexSettingsParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingThreshold *float64 `json:"frustratingThreshold" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedThreshold *float64 `json:"toleratedThreshold" tf:"tolerated_threshold,omitempty"`
}

type LoadActionNamingRulesInitParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []LoadActionNamingRulesRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type LoadActionNamingRulesObservation struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []LoadActionNamingRulesRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type LoadActionNamingRulesParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	// +kubebuilder:validation:Optional
	Rule []LoadActionNamingRulesRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type LoadActionNamingRulesRuleInitParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []RuleConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type LoadActionNamingRulesRuleObservation struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []RuleConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type LoadActionNamingRulesRuleParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Conditions []RuleConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	// +kubebuilder:validation:Optional
	Template *string `json:"template" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	// +kubebuilder:validation:Optional
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type MetaDataCaptureSettingsInitParameters struct {

	// (Block List) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	Capture []CaptureInitParameters `json:"capture,omitempty" tf:"capture,omitempty"`
}

type MetaDataCaptureSettingsObservation struct {

	// (Block List) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	Capture []CaptureObservation `json:"capture,omitempty" tf:"capture,omitempty"`
}

type MetaDataCaptureSettingsParameters struct {

	// (Block List) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	// +kubebuilder:validation:Optional
	Capture []CaptureParameters `json:"capture,omitempty" tf:"capture,omitempty"`
}

type MonitoringSettingsInitParameters struct {

	// (Boolean) Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute *bool `json:"addCrossOriginAnonymousAttribute,omitempty" tf:"add_cross_origin_anonymous_attribute,omitempty"`

	// (Block List, Min: 1, Max: 1) Advanced JavaScript tag settings (see below for nested schema)
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings []AdvancedJavascriptTagSettingsInitParameters `json:"advancedJavascriptTagSettings,omitempty" tf:"advanced_javascript_tag_settings,omitempty"`

	// (String) The name of the angular package
	// The name of the angular package
	AngularPackageName *string `json:"angularPackageName,omitempty" tf:"angular_package_name,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings []BrowserRestrictionSettingsInitParameters `json:"browserRestrictionSettings,omitempty" tf:"browser_restriction_settings,omitempty"`

	// (Boolean) Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations *bool `json:"cacheControlHeaderOptimizations,omitempty" tf:"cache_control_header_optimizations,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for content capture (see below for nested schema)
	// Settings for content capture
	ContentCapture []ContentCaptureInitParameters `json:"contentCapture,omitempty" tf:"content_capture,omitempty"`

	// (String) Domain for cookie placement. Maximum 150 characters.
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain *string `json:"cookiePlacementDomain,omitempty" tf:"cookie_placement_domain,omitempty"`

	// dtc) to each such request to the respective endpoints in AWS.
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	//
	// Important: These endpoints must accept the `x-dtc` header, or the requests will fail
	CorrelationHeaderInclusionRegex *string `json:"correlationHeaderInclusionRegex,omitempty" tf:"correlation_header_inclusion_regex,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties *string `json:"customConfigurationProperties,omitempty" tf:"custom_configuration_properties,omitempty"`

	// (String) You can exclude some actions from becoming XHR actions.
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex *string `json:"excludeXhrRegex,omitempty" tf:"exclude_xhr_regex,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	FetchRequests *bool `json:"fetchRequests,omitempty" tf:"fetch_requests,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IPAddressRestrictionSettings []IPAddressRestrictionSettingsInitParameters `json:"ipAddressRestrictionSettings,omitempty" tf:"ip_address_restriction_settings,omitempty"`

	// (String) Possible valures are CODE_SNIPPET, CODE_SNIPPET_ASYNC, INLINE_CODE and JAVASCRIPT_TAG.
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode *string `json:"injectionMode,omitempty" tf:"injection_mode,omitempty"`

	// (Boolean) Instrumented web or app server.
	// Instrumented web or app server.
	InstrumentedWebServer *bool `json:"instrumentedWebServer,omitempty" tf:"instrumented_web_server,omitempty"`

	// (Block List, Max: 1) Support of various JavaScript frameworks (see below for nested schema)
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport []JavascriptFrameworkSupportInitParameters `json:"javascriptFrameworkSupport,omitempty" tf:"javascript_framework_support,omitempty"`

	// (Block List, Max: 1) Java script injection rules (see below for nested schema)
	// Java script injection rules
	JavascriptInjectionRules []JavascriptInjectionRulesInitParameters `json:"javascriptInjectionRules,omitempty" tf:"javascript_injection_rules,omitempty"`

	// (String) The location of your application’s custom JavaScript library file.
	// The location of your application’s custom JavaScript library file.
	//
	// If nothing specified the root directory of your web server is used.
	//
	// **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation *string `json:"libraryFileLocation,omitempty" tf:"library_file_location,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath *string `json:"monitoringDataPath,omitempty" tf:"monitoring_data_path,omitempty"`

	// (String) Same site cookie attribute
	// Same site cookie attribute
	SameSiteCookieAttribute *string `json:"sameSiteCookieAttribute,omitempty" tf:"same_site_cookie_attribute,omitempty"`

	// (Number) Time duration for the cache settings
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours *float64 `json:"scriptTagCacheDurationInHours,omitempty" tf:"script_tag_cache_duration_in_hours,omitempty"`

	// (Boolean) Secure attribute usage for Dynatrace cookies enabled/disabled
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute *bool `json:"secureCookieAttribute,omitempty" tf:"secure_cookie_attribute,omitempty"`

	// (String) Path to identify the server’s request ID. Maximum 150 characters.
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathID *string `json:"serverRequestPathId,omitempty" tf:"server_request_path_id,omitempty"`

	// (Boolean) Send beacon data via CORS.
	// Send beacon data via CORS.
	UseCors *bool `json:"useCors,omitempty" tf:"use_cors,omitempty"`

	// (Boolean) XmlHttpRequest support enabled/disabled
	// `XmlHttpRequest` support enabled/disabled
	XMLHTTPRequest *bool `json:"xmlHttpRequest,omitempty" tf:"xml_http_request,omitempty"`
}

type MonitoringSettingsObservation struct {

	// (Boolean) Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute *bool `json:"addCrossOriginAnonymousAttribute,omitempty" tf:"add_cross_origin_anonymous_attribute,omitempty"`

	// (Block List, Min: 1, Max: 1) Advanced JavaScript tag settings (see below for nested schema)
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings []AdvancedJavascriptTagSettingsObservation `json:"advancedJavascriptTagSettings,omitempty" tf:"advanced_javascript_tag_settings,omitempty"`

	// (String) The name of the angular package
	// The name of the angular package
	AngularPackageName *string `json:"angularPackageName,omitempty" tf:"angular_package_name,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings []BrowserRestrictionSettingsObservation `json:"browserRestrictionSettings,omitempty" tf:"browser_restriction_settings,omitempty"`

	// (Boolean) Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations *bool `json:"cacheControlHeaderOptimizations,omitempty" tf:"cache_control_header_optimizations,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for content capture (see below for nested schema)
	// Settings for content capture
	ContentCapture []ContentCaptureObservation `json:"contentCapture,omitempty" tf:"content_capture,omitempty"`

	// (String) Domain for cookie placement. Maximum 150 characters.
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain *string `json:"cookiePlacementDomain,omitempty" tf:"cookie_placement_domain,omitempty"`

	// dtc) to each such request to the respective endpoints in AWS.
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	//
	// Important: These endpoints must accept the `x-dtc` header, or the requests will fail
	CorrelationHeaderInclusionRegex *string `json:"correlationHeaderInclusionRegex,omitempty" tf:"correlation_header_inclusion_regex,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties *string `json:"customConfigurationProperties,omitempty" tf:"custom_configuration_properties,omitempty"`

	// (String) You can exclude some actions from becoming XHR actions.
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex *string `json:"excludeXhrRegex,omitempty" tf:"exclude_xhr_regex,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	FetchRequests *bool `json:"fetchRequests,omitempty" tf:"fetch_requests,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IPAddressRestrictionSettings []IPAddressRestrictionSettingsObservation `json:"ipAddressRestrictionSettings,omitempty" tf:"ip_address_restriction_settings,omitempty"`

	// (String) Possible valures are CODE_SNIPPET, CODE_SNIPPET_ASYNC, INLINE_CODE and JAVASCRIPT_TAG.
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode *string `json:"injectionMode,omitempty" tf:"injection_mode,omitempty"`

	// (Boolean) Instrumented web or app server.
	// Instrumented web or app server.
	InstrumentedWebServer *bool `json:"instrumentedWebServer,omitempty" tf:"instrumented_web_server,omitempty"`

	// (Block List, Max: 1) Support of various JavaScript frameworks (see below for nested schema)
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport []JavascriptFrameworkSupportObservation `json:"javascriptFrameworkSupport,omitempty" tf:"javascript_framework_support,omitempty"`

	// (Block List, Max: 1) Java script injection rules (see below for nested schema)
	// Java script injection rules
	JavascriptInjectionRules []JavascriptInjectionRulesObservation `json:"javascriptInjectionRules,omitempty" tf:"javascript_injection_rules,omitempty"`

	// (String) The location of your application’s custom JavaScript library file.
	// The location of your application’s custom JavaScript library file.
	//
	// If nothing specified the root directory of your web server is used.
	//
	// **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation *string `json:"libraryFileLocation,omitempty" tf:"library_file_location,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath *string `json:"monitoringDataPath,omitempty" tf:"monitoring_data_path,omitempty"`

	// (String) Same site cookie attribute
	// Same site cookie attribute
	SameSiteCookieAttribute *string `json:"sameSiteCookieAttribute,omitempty" tf:"same_site_cookie_attribute,omitempty"`

	// (Number) Time duration for the cache settings
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours *float64 `json:"scriptTagCacheDurationInHours,omitempty" tf:"script_tag_cache_duration_in_hours,omitempty"`

	// (Boolean) Secure attribute usage for Dynatrace cookies enabled/disabled
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute *bool `json:"secureCookieAttribute,omitempty" tf:"secure_cookie_attribute,omitempty"`

	// (String) Path to identify the server’s request ID. Maximum 150 characters.
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathID *string `json:"serverRequestPathId,omitempty" tf:"server_request_path_id,omitempty"`

	// (Boolean) Send beacon data via CORS.
	// Send beacon data via CORS.
	UseCors *bool `json:"useCors,omitempty" tf:"use_cors,omitempty"`

	// (Boolean) XmlHttpRequest support enabled/disabled
	// `XmlHttpRequest` support enabled/disabled
	XMLHTTPRequest *bool `json:"xmlHttpRequest,omitempty" tf:"xml_http_request,omitempty"`
}

type MonitoringSettingsParameters struct {

	// (Boolean) Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	// +kubebuilder:validation:Optional
	AddCrossOriginAnonymousAttribute *bool `json:"addCrossOriginAnonymousAttribute,omitempty" tf:"add_cross_origin_anonymous_attribute,omitempty"`

	// (Block List, Min: 1, Max: 1) Advanced JavaScript tag settings (see below for nested schema)
	// Advanced JavaScript tag settings
	// +kubebuilder:validation:Optional
	AdvancedJavascriptTagSettings []AdvancedJavascriptTagSettingsParameters `json:"advancedJavascriptTagSettings" tf:"advanced_javascript_tag_settings,omitempty"`

	// (String) The name of the angular package
	// The name of the angular package
	// +kubebuilder:validation:Optional
	AngularPackageName *string `json:"angularPackageName,omitempty" tf:"angular_package_name,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	// +kubebuilder:validation:Optional
	BrowserRestrictionSettings []BrowserRestrictionSettingsParameters `json:"browserRestrictionSettings,omitempty" tf:"browser_restriction_settings,omitempty"`

	// (Boolean) Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	// +kubebuilder:validation:Optional
	CacheControlHeaderOptimizations *bool `json:"cacheControlHeaderOptimizations,omitempty" tf:"cache_control_header_optimizations,omitempty"`

	// (Block List, Min: 1, Max: 1) Settings for content capture (see below for nested schema)
	// Settings for content capture
	// +kubebuilder:validation:Optional
	ContentCapture []ContentCaptureParameters `json:"contentCapture" tf:"content_capture,omitempty"`

	// (String) Domain for cookie placement. Maximum 150 characters.
	// Domain for cookie placement. Maximum 150 characters.
	// +kubebuilder:validation:Optional
	CookiePlacementDomain *string `json:"cookiePlacementDomain,omitempty" tf:"cookie_placement_domain,omitempty"`

	// dtc) to each such request to the respective endpoints in AWS.
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	//
	// Important: These endpoints must accept the `x-dtc` header, or the requests will fail
	// +kubebuilder:validation:Optional
	CorrelationHeaderInclusionRegex *string `json:"correlationHeaderInclusionRegex,omitempty" tf:"correlation_header_inclusion_regex,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	// +kubebuilder:validation:Optional
	CustomConfigurationProperties *string `json:"customConfigurationProperties,omitempty" tf:"custom_configuration_properties,omitempty"`

	// (String) You can exclude some actions from becoming XHR actions.
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	// +kubebuilder:validation:Optional
	ExcludeXhrRegex *string `json:"excludeXhrRegex,omitempty" tf:"exclude_xhr_regex,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	// +kubebuilder:validation:Optional
	FetchRequests *bool `json:"fetchRequests,omitempty" tf:"fetch_requests,omitempty"`

	// (Block List, Max: 1) Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode (see below for nested schema)
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	// +kubebuilder:validation:Optional
	IPAddressRestrictionSettings []IPAddressRestrictionSettingsParameters `json:"ipAddressRestrictionSettings,omitempty" tf:"ip_address_restriction_settings,omitempty"`

	// (String) Possible valures are CODE_SNIPPET, CODE_SNIPPET_ASYNC, INLINE_CODE and JAVASCRIPT_TAG.
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	// +kubebuilder:validation:Optional
	InjectionMode *string `json:"injectionMode" tf:"injection_mode,omitempty"`

	// (Boolean) Instrumented web or app server.
	// Instrumented web or app server.
	// +kubebuilder:validation:Optional
	InstrumentedWebServer *bool `json:"instrumentedWebServer,omitempty" tf:"instrumented_web_server,omitempty"`

	// (Block List, Max: 1) Support of various JavaScript frameworks (see below for nested schema)
	// Support of various JavaScript frameworks
	// +kubebuilder:validation:Optional
	JavascriptFrameworkSupport []JavascriptFrameworkSupportParameters `json:"javascriptFrameworkSupport,omitempty" tf:"javascript_framework_support,omitempty"`

	// (Block List, Max: 1) Java script injection rules (see below for nested schema)
	// Java script injection rules
	// +kubebuilder:validation:Optional
	JavascriptInjectionRules []JavascriptInjectionRulesParameters `json:"javascriptInjectionRules,omitempty" tf:"javascript_injection_rules,omitempty"`

	// (String) The location of your application’s custom JavaScript library file.
	// The location of your application’s custom JavaScript library file.
	//
	// If nothing specified the root directory of your web server is used.
	//
	// **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	// +kubebuilder:validation:Optional
	LibraryFileLocation *string `json:"libraryFileLocation,omitempty" tf:"library_file_location,omitempty"`

	// (String) The location to send monitoring data from the JavaScript tag.
	// The location to send monitoring data from the JavaScript tag.
	//
	// Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	// **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	// +kubebuilder:validation:Optional
	MonitoringDataPath *string `json:"monitoringDataPath,omitempty" tf:"monitoring_data_path,omitempty"`

	// (String) Same site cookie attribute
	// Same site cookie attribute
	// +kubebuilder:validation:Optional
	SameSiteCookieAttribute *string `json:"sameSiteCookieAttribute,omitempty" tf:"same_site_cookie_attribute,omitempty"`

	// (Number) Time duration for the cache settings
	// Time duration for the cache settings
	// +kubebuilder:validation:Optional
	ScriptTagCacheDurationInHours *float64 `json:"scriptTagCacheDurationInHours,omitempty" tf:"script_tag_cache_duration_in_hours,omitempty"`

	// (Boolean) Secure attribute usage for Dynatrace cookies enabled/disabled
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	// +kubebuilder:validation:Optional
	SecureCookieAttribute *bool `json:"secureCookieAttribute,omitempty" tf:"secure_cookie_attribute,omitempty"`

	// (String) Path to identify the server’s request ID. Maximum 150 characters.
	// Path to identify the server’s request ID. Maximum 150 characters.
	// +kubebuilder:validation:Optional
	ServerRequestPathID *string `json:"serverRequestPathId,omitempty" tf:"server_request_path_id,omitempty"`

	// (Boolean) Send beacon data via CORS.
	// Send beacon data via CORS.
	// +kubebuilder:validation:Optional
	UseCors *bool `json:"useCors,omitempty" tf:"use_cors,omitempty"`

	// (Boolean) XmlHttpRequest support enabled/disabled
	// `XmlHttpRequest` support enabled/disabled
	// +kubebuilder:validation:Optional
	XMLHTTPRequest *bool `json:"xmlHttpRequest,omitempty" tf:"xml_http_request,omitempty"`
}

type PlaceholderInitParameters struct {

	// (String) The input for the place holder. Possible values are ELEMENT_IDENTIFIER, INPUT_TYPE, METADATA, PAGE_TITLE, PAGE_URL, SOURCE_URL, TOP_XHR_URL and XHR_URL
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input *string `json:"input,omitempty" tf:"input,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// The ID of the metadata
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The part to process. Possible values are ALL, ANCHOR and PATH
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart *string `json:"processingPart,omitempty" tf:"processing_part,omitempty"`

	// (Block List, Max: 1) The processing step settings (see below for nested schema)
	// The processing step settings
	ProcessingSteps []ProcessingStepsInitParameters `json:"processingSteps,omitempty" tf:"processing_steps,omitempty"`

	// (Boolean) Use the element identifier that was selected by Dynatrace
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier *bool `json:"useGuessedElementIdentifier,omitempty" tf:"use_guessed_element_identifier,omitempty"`
}

type PlaceholderObservation struct {

	// (String) The input for the place holder. Possible values are ELEMENT_IDENTIFIER, INPUT_TYPE, METADATA, PAGE_TITLE, PAGE_URL, SOURCE_URL, TOP_XHR_URL and XHR_URL
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input *string `json:"input,omitempty" tf:"input,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// The ID of the metadata
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The part to process. Possible values are ALL, ANCHOR and PATH
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart *string `json:"processingPart,omitempty" tf:"processing_part,omitempty"`

	// (Block List, Max: 1) The processing step settings (see below for nested schema)
	// The processing step settings
	ProcessingSteps []ProcessingStepsObservation `json:"processingSteps,omitempty" tf:"processing_steps,omitempty"`

	// (Boolean) Use the element identifier that was selected by Dynatrace
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier *bool `json:"useGuessedElementIdentifier,omitempty" tf:"use_guessed_element_identifier,omitempty"`
}

type PlaceholderParameters struct {

	// (String) The input for the place holder. Possible values are ELEMENT_IDENTIFIER, INPUT_TYPE, METADATA, PAGE_TITLE, PAGE_URL, SOURCE_URL, TOP_XHR_URL and XHR_URL
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	// +kubebuilder:validation:Optional
	Input *string `json:"input" tf:"input,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// The ID of the metadata
	// +kubebuilder:validation:Optional
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The part to process. Possible values are ALL, ANCHOR and PATH
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	// +kubebuilder:validation:Optional
	ProcessingPart *string `json:"processingPart" tf:"processing_part,omitempty"`

	// (Block List, Max: 1) The processing step settings (see below for nested schema)
	// The processing step settings
	// +kubebuilder:validation:Optional
	ProcessingSteps []ProcessingStepsParameters `json:"processingSteps,omitempty" tf:"processing_steps,omitempty"`

	// (Boolean) Use the element identifier that was selected by Dynatrace
	// Use the element identifier that was selected by Dynatrace
	// +kubebuilder:validation:Optional
	UseGuessedElementIdentifier *bool `json:"useGuessedElementIdentifier,omitempty" tf:"use_guessed_element_identifier,omitempty"`
}

type PlaceholdersInitParameters struct {

	// (Block List, Min: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	Placeholder []PlaceholderInitParameters `json:"placeholder,omitempty" tf:"placeholder,omitempty"`
}

type PlaceholdersObservation struct {

	// (Block List, Min: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	Placeholder []PlaceholderObservation `json:"placeholder,omitempty" tf:"placeholder,omitempty"`
}

type PlaceholdersParameters struct {

	// (Block List, Min: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	// +kubebuilder:validation:Optional
	Placeholder []PlaceholderParameters `json:"placeholder" tf:"placeholder,omitempty"`
}

type ProcessingStepsInitParameters struct {

	// (Block List, Min: 1) The processing step (see below for nested schema)
	// The processing step
	Step []StepInitParameters `json:"step,omitempty" tf:"step,omitempty"`
}

type ProcessingStepsObservation struct {

	// (Block List, Min: 1) The processing step (see below for nested schema)
	// The processing step
	Step []StepObservation `json:"step,omitempty" tf:"step,omitempty"`
}

type ProcessingStepsParameters struct {

	// (Block List, Min: 1) The processing step (see below for nested schema)
	// The processing step
	// +kubebuilder:validation:Optional
	Step []StepParameters `json:"step" tf:"step,omitempty"`
}

type RangeInitParameters struct {

	// (String) The IP address to be mapped.
	// The IP address to be mapped.
	//
	// For an IP address range, this is the **from** address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// (String) The to address of the IP address range.
	// The **to** address of the IP address range.
	AddressTo *string `json:"addressTo,omitempty" tf:"address_to,omitempty"`

	// (Number) The subnet mask of the IP address range. Valid values range from 0 to 128.
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask *float64 `json:"subnetMask,omitempty" tf:"subnet_mask,omitempty"`
}

type RangeObservation struct {

	// (String) The IP address to be mapped.
	// The IP address to be mapped.
	//
	// For an IP address range, this is the **from** address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// (String) The to address of the IP address range.
	// The **to** address of the IP address range.
	AddressTo *string `json:"addressTo,omitempty" tf:"address_to,omitempty"`

	// (Number) The subnet mask of the IP address range. Valid values range from 0 to 128.
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask *float64 `json:"subnetMask,omitempty" tf:"subnet_mask,omitempty"`
}

type RangeParameters struct {

	// (String) The IP address to be mapped.
	// The IP address to be mapped.
	//
	// For an IP address range, this is the **from** address.
	// +kubebuilder:validation:Optional
	Address *string `json:"address" tf:"address,omitempty"`

	// (String) The to address of the IP address range.
	// The **to** address of the IP address range.
	// +kubebuilder:validation:Optional
	AddressTo *string `json:"addressTo,omitempty" tf:"address_to,omitempty"`

	// (Number) The subnet mask of the IP address range. Valid values range from 0 to 128.
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	// +kubebuilder:validation:Optional
	SubnetMask *float64 `json:"subnetMask,omitempty" tf:"subnet_mask,omitempty"`
}

type ResourceTimingSettingsInitParameters struct {

	// (Number) Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	//
	// Valid values range from 0 to 9999.
	//
	// Only effective if `nonW3cResourceTimings` is enabled
	InstrumentationDelay *float64 `json:"instrumentationDelay,omitempty" tf:"instrumentation_delay,omitempty"`

	// W3C supported browsers enabled/disabled
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3CResourceTimings *bool `json:"nonW3CResourceTimings,omitempty" tf:"non_w3c_resource_timings,omitempty"`

	// (String) Defines how detailed resource timings are captured.
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType *string `json:"resourceTimingCaptureType,omitempty" tf:"resource_timing_capture_type,omitempty"`

	// (Number) Limits the number of domains for which W3C resource timings are captured.
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit *float64 `json:"resourceTimingsDomainLimit,omitempty" tf:"resource_timings_domain_limit,omitempty"`

	// (Boolean) W3C resource timings for third party/CDN enabled/disabled
	// W3C resource timings for third party/CDN enabled/disabled
	W3CResourceTimings *bool `json:"w3cResourceTimings,omitempty" tf:"w3c_resource_timings,omitempty"`
}

type ResourceTimingSettingsObservation struct {

	// (Number) Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	//
	// Valid values range from 0 to 9999.
	//
	// Only effective if `nonW3cResourceTimings` is enabled
	InstrumentationDelay *float64 `json:"instrumentationDelay,omitempty" tf:"instrumentation_delay,omitempty"`

	// W3C supported browsers enabled/disabled
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3CResourceTimings *bool `json:"nonW3CResourceTimings,omitempty" tf:"non_w3c_resource_timings,omitempty"`

	// (String) Defines how detailed resource timings are captured.
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType *string `json:"resourceTimingCaptureType,omitempty" tf:"resource_timing_capture_type,omitempty"`

	// (Number) Limits the number of domains for which W3C resource timings are captured.
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit *float64 `json:"resourceTimingsDomainLimit,omitempty" tf:"resource_timings_domain_limit,omitempty"`

	// (Boolean) W3C resource timings for third party/CDN enabled/disabled
	// W3C resource timings for third party/CDN enabled/disabled
	W3CResourceTimings *bool `json:"w3cResourceTimings,omitempty" tf:"w3c_resource_timings,omitempty"`
}

type ResourceTimingSettingsParameters struct {

	// (Number) Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	//
	// Valid values range from 0 to 9999.
	//
	// Only effective if `nonW3cResourceTimings` is enabled
	// +kubebuilder:validation:Optional
	InstrumentationDelay *float64 `json:"instrumentationDelay" tf:"instrumentation_delay,omitempty"`

	// W3C supported browsers enabled/disabled
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	// +kubebuilder:validation:Optional
	NonW3CResourceTimings *bool `json:"nonW3CResourceTimings,omitempty" tf:"non_w3c_resource_timings,omitempty"`

	// (String) Defines how detailed resource timings are captured.
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	// +kubebuilder:validation:Optional
	ResourceTimingCaptureType *string `json:"resourceTimingCaptureType,omitempty" tf:"resource_timing_capture_type,omitempty"`

	// (Number) Limits the number of domains for which W3C resource timings are captured.
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	// +kubebuilder:validation:Optional
	ResourceTimingsDomainLimit *float64 `json:"resourceTimingsDomainLimit,omitempty" tf:"resource_timings_domain_limit,omitempty"`

	// (Boolean) W3C resource timings for third party/CDN enabled/disabled
	// W3C resource timings for third party/CDN enabled/disabled
	// +kubebuilder:validation:Optional
	W3CResourceTimings *bool `json:"w3cResourceTimings,omitempty" tf:"w3c_resource_timings,omitempty"`
}

type RestrictionInitParameters struct {

	// (String) The type of the browser that is used. Possible values are ANDROID_WEBKIT, BOTS_SPIDERS, CHROME, EDGE, FIREFOX, INTERNET_EXPLORER, OPERAandSAFARI`
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER, `OPERA` and `SAFARI`
	BrowserType *string `json:"browserType,omitempty" tf:"browser_type,omitempty"`

	// (String) The version of the browser that is used
	// The version of the browser that is used
	BrowserVersion *string `json:"browserVersion,omitempty" tf:"browser_version,omitempty"`

	// (String) No documentation available. Possible values are EQUALS, GREATER_THAN_OR_EQUAL and LOWER_THAN_OR_EQUAL.
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	// (String) The platform on which the browser is being used. Possible values are ALL, DESKTOP and MOBILE
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type RestrictionObservation struct {

	// (String) The type of the browser that is used. Possible values are ANDROID_WEBKIT, BOTS_SPIDERS, CHROME, EDGE, FIREFOX, INTERNET_EXPLORER, OPERAandSAFARI`
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER, `OPERA` and `SAFARI`
	BrowserType *string `json:"browserType,omitempty" tf:"browser_type,omitempty"`

	// (String) The version of the browser that is used
	// The version of the browser that is used
	BrowserVersion *string `json:"browserVersion,omitempty" tf:"browser_version,omitempty"`

	// (String) No documentation available. Possible values are EQUALS, GREATER_THAN_OR_EQUAL and LOWER_THAN_OR_EQUAL.
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	// (String) The platform on which the browser is being used. Possible values are ALL, DESKTOP and MOBILE
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type RestrictionParameters struct {

	// (String) The type of the browser that is used. Possible values are ANDROID_WEBKIT, BOTS_SPIDERS, CHROME, EDGE, FIREFOX, INTERNET_EXPLORER, OPERAandSAFARI`
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER, `OPERA` and `SAFARI`
	// +kubebuilder:validation:Optional
	BrowserType *string `json:"browserType" tf:"browser_type,omitempty"`

	// (String) The version of the browser that is used
	// The version of the browser that is used
	// +kubebuilder:validation:Optional
	BrowserVersion *string `json:"browserVersion,omitempty" tf:"browser_version,omitempty"`

	// (String) No documentation available. Possible values are EQUALS, GREATER_THAN_OR_EQUAL and LOWER_THAN_OR_EQUAL.
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	// +kubebuilder:validation:Optional
	Comparator *string `json:"comparator,omitempty" tf:"comparator,omitempty"`

	// (String) The platform on which the browser is being used. Possible values are ALL, DESKTOP and MOBILE
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`
}

type RestrictionsInitParameters struct {

	// (Block List, Min: 1) Browser exclusion rules for the browsers that are to be excluded (see below for nested schema)
	// Browser exclusion rules for the browsers that are to be excluded
	Restriction []RestrictionInitParameters `json:"restriction,omitempty" tf:"restriction,omitempty"`
}

type RestrictionsObservation struct {

	// (Block List, Min: 1) Browser exclusion rules for the browsers that are to be excluded (see below for nested schema)
	// Browser exclusion rules for the browsers that are to be excluded
	Restriction []RestrictionObservation `json:"restriction,omitempty" tf:"restriction,omitempty"`
}

type RestrictionsParameters struct {

	// (Block List, Min: 1) Browser exclusion rules for the browsers that are to be excluded (see below for nested schema)
	// Browser exclusion rules for the browsers that are to be excluded
	// +kubebuilder:validation:Optional
	Restriction []RestrictionParameters `json:"restriction" tf:"restriction,omitempty"`
}

type RuleConditionsConditionInitParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type RuleConditionsConditionObservation struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	Operand1 *string `json:"operand1,omitempty" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`
}

type RuleConditionsConditionParameters struct {

	// (String) Must be a defined placeholder wrapped in curly braces
	// Must be a defined placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand1 *string `json:"operand1" tf:"operand1,omitempty"`

	// (String) Must be null if operator is IS_EMPTY, a regex if operator is MATCHES_REGULAR_ERPRESSION. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	// +kubebuilder:validation:Optional
	Operand2 *string `json:"operand2,omitempty" tf:"operand2,omitempty"`

	// (String) The operator of the condition. Possible values are CONTAINS, ENDS_WITH, EQUALS, IS_EMPTY, IS_NOT_EMPTY, MATCHES_REGULAR_EXPRESSION, NOT_CONTAINS, NOT_ENDS_WITH, NOT_EQUALS, NOT_MATCHES_REGULAR_EXPRESSION, NOT_STARTS_WITH and STARTS_WITH.
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`
}

type RuleConditionsInitParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []ConditionsConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type RuleConditionsObservation struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []ConditionsConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type RuleConditionsParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Condition []ConditionsConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type RuleInitParameters struct {

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The HTML pattern of the java script injection
	// The HTML pattern of the java script injection
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) The target against which the rule of the java script injection should be matched. Possible values are PAGE_QUERY and URL.
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (String) The url operator of the java script injection. Possible values are ALL_PAGES, CONTAINS, ENDS_WITH, EQUALS and STARTS_WITH.
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	URLOperator *string `json:"urlOperator,omitempty" tf:"url_operator,omitempty"`

	// (String) The url pattern of the java script injection
	// The url pattern of the java script injection
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

type RuleObservation struct {

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The HTML pattern of the java script injection
	// The HTML pattern of the java script injection
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) The target against which the rule of the java script injection should be matched. Possible values are PAGE_QUERY and URL.
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (String) The url operator of the java script injection. Possible values are ALL_PAGES, CONTAINS, ENDS_WITH, EQUALS and STARTS_WITH.
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	URLOperator *string `json:"urlOperator,omitempty" tf:"url_operator,omitempty"`

	// (String) The url pattern of the java script injection
	// The url pattern of the java script injection
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

type RuleParameters struct {

	// (Boolean) fetch() request capture enabled/disabled
	// `fetch()` request capture enabled/disabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The HTML pattern of the java script injection
	// The HTML pattern of the java script injection
	// +kubebuilder:validation:Optional
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// (String) The target against which the rule of the java script injection should be matched. Possible values are PAGE_QUERY and URL.
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	// +kubebuilder:validation:Optional
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (String) The url operator of the java script injection. Possible values are ALL_PAGES, CONTAINS, ENDS_WITH, EQUALS and STARTS_WITH.
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	// +kubebuilder:validation:Optional
	URLOperator *string `json:"urlOperator" tf:"url_operator,omitempty"`

	// (String) The url pattern of the java script injection
	// The url pattern of the java script injection
	// +kubebuilder:validation:Optional
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

type SessionReplayConfigInitParameters struct {

	// (List of String) (Field has overlap with dynatrace_session_replay_resource_capture) A list of URLs to be excluded from CSS resource capturing
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) A list of URLs to be excluded from CSS resource capturing
	CSSResourceCapturingExclusionRules []*string `json:"cssResourceCapturingExclusionRules,omitempty" tf:"css_resource_capturing_exclusion_rules,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Session replay sampling rating in percent
	// (Field has overlap with `dynatrace_web_app_enablement`) Session replay sampling rating in percent
	CostControlPercentage *float64 `json:"costControlPercentage,omitempty" tf:"cost_control_percentage,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_session_replay_resource_capture) Capture (true) or don't capture (false) CSS resources from the session
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCSSResourceCapturing *bool `json:"enableCssResourceCapturing,omitempty" tf:"enable_css_resource_capturing,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) SessionReplay Enabled/Disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SessionReplayConfigObservation struct {

	// (List of String) (Field has overlap with dynatrace_session_replay_resource_capture) A list of URLs to be excluded from CSS resource capturing
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) A list of URLs to be excluded from CSS resource capturing
	CSSResourceCapturingExclusionRules []*string `json:"cssResourceCapturingExclusionRules,omitempty" tf:"css_resource_capturing_exclusion_rules,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Session replay sampling rating in percent
	// (Field has overlap with `dynatrace_web_app_enablement`) Session replay sampling rating in percent
	CostControlPercentage *float64 `json:"costControlPercentage,omitempty" tf:"cost_control_percentage,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_session_replay_resource_capture) Capture (true) or don't capture (false) CSS resources from the session
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCSSResourceCapturing *bool `json:"enableCssResourceCapturing,omitempty" tf:"enable_css_resource_capturing,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) SessionReplay Enabled/Disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type SessionReplayConfigParameters struct {

	// (List of String) (Field has overlap with dynatrace_session_replay_resource_capture) A list of URLs to be excluded from CSS resource capturing
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) A list of URLs to be excluded from CSS resource capturing
	// +kubebuilder:validation:Optional
	CSSResourceCapturingExclusionRules []*string `json:"cssResourceCapturingExclusionRules,omitempty" tf:"css_resource_capturing_exclusion_rules,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Session replay sampling rating in percent
	// (Field has overlap with `dynatrace_web_app_enablement`) Session replay sampling rating in percent
	// +kubebuilder:validation:Optional
	CostControlPercentage *float64 `json:"costControlPercentage" tf:"cost_control_percentage,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_session_replay_resource_capture) Capture (true) or don't capture (false) CSS resources from the session
	// (Field has overlap with `dynatrace_session_replay_resource_capture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	// +kubebuilder:validation:Optional
	EnableCSSResourceCapturing *bool `json:"enableCssResourceCapturing,omitempty" tf:"enable_css_resource_capturing,omitempty"`

	// (Boolean) fetch() request capture enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) SessionReplay Enabled/Disabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type StepInitParameters struct {

	// (Boolean) If set to true: Returns the input if patternBefore or patternAfter cannot be found and the type is SUBSTRING. Returns the input if regularExpression doesn't match and type is EXTRACT_BY_REGULAR_EXPRESSION.
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	//
	// Otherwise `null` is returned.
	FallbackToInput *bool `json:"fallbackToInput,omitempty" tf:"fallback_to_input,omitempty"`

	// (String) The pattern after the required value. It will be removed.
	// The pattern after the required value. It will be removed.
	PatternAfter *string `json:"patternAfter,omitempty" tf:"pattern_after,omitempty"`

	// (String) The required occurrence of patternAfter. Possible values are FIRST and LAST.
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType *string `json:"patternAfterSearchType,omitempty" tf:"pattern_after_search_type,omitempty"`

	// (String) The pattern before the required value. It will be removed.
	// The pattern before the required value. It will be removed.
	PatternBefore *string `json:"patternBefore,omitempty" tf:"pattern_before,omitempty"`

	// (String) The required occurrence of patternBefore. Possible values are FIRST and LAST.
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType *string `json:"patternBeforeSearchType,omitempty" tf:"pattern_before_search_type,omitempty"`

	// (String) The pattern to be replaced.
	// The pattern to be replaced.
	//
	// Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace *string `json:"patternToReplace,omitempty" tf:"pattern_to_replace,omitempty"`

	// (String) A regular expression for the string to be extracted or replaced. Only applicable if the type is EXTRACT_BY_REGULAR_EXPRESSION or REPLACE_WITH_REGULAR_EXPRESSION.
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) Replacement for the original value
	// Replacement for the original value
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// An action to be taken by the processing:
	//
	// * `SUBSTRING`: Extracts the string between `patternBefore` and `patternAfter`.
	// * `REPLACEMENT`: Replaces the string between `patternBefore` and `patternAfter` with the specified `replacement`.
	// * `REPLACE_WITH_PATTERN`: Replaces the **patternToReplace** with the specified **replacement**.
	// * `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string that matches the **regularExpression**.
	// * `REPLACE_WITH_REGULAR_EXPRESSION`: Replaces all occurrences that match **regularExpression** with the specified **replacement**.
	// * `REPLACE_IDS`: Replaces all IDs and UUIDs with the specified **replacement**. Possible values are `EXTRACT_BY_REGULAR_EXPRESSION`, `REPLACEMENT`, `REPLACE_IDS`, `REPLACE_WITH_PATTERN`, `REPLACE_WITH_REGULAR_EXPRESSION` and `SUBSTRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type StepObservation struct {

	// (Boolean) If set to true: Returns the input if patternBefore or patternAfter cannot be found and the type is SUBSTRING. Returns the input if regularExpression doesn't match and type is EXTRACT_BY_REGULAR_EXPRESSION.
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	//
	// Otherwise `null` is returned.
	FallbackToInput *bool `json:"fallbackToInput,omitempty" tf:"fallback_to_input,omitempty"`

	// (String) The pattern after the required value. It will be removed.
	// The pattern after the required value. It will be removed.
	PatternAfter *string `json:"patternAfter,omitempty" tf:"pattern_after,omitempty"`

	// (String) The required occurrence of patternAfter. Possible values are FIRST and LAST.
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType *string `json:"patternAfterSearchType,omitempty" tf:"pattern_after_search_type,omitempty"`

	// (String) The pattern before the required value. It will be removed.
	// The pattern before the required value. It will be removed.
	PatternBefore *string `json:"patternBefore,omitempty" tf:"pattern_before,omitempty"`

	// (String) The required occurrence of patternBefore. Possible values are FIRST and LAST.
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType *string `json:"patternBeforeSearchType,omitempty" tf:"pattern_before_search_type,omitempty"`

	// (String) The pattern to be replaced.
	// The pattern to be replaced.
	//
	// Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace *string `json:"patternToReplace,omitempty" tf:"pattern_to_replace,omitempty"`

	// (String) A regular expression for the string to be extracted or replaced. Only applicable if the type is EXTRACT_BY_REGULAR_EXPRESSION or REPLACE_WITH_REGULAR_EXPRESSION.
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) Replacement for the original value
	// Replacement for the original value
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// An action to be taken by the processing:
	//
	// * `SUBSTRING`: Extracts the string between `patternBefore` and `patternAfter`.
	// * `REPLACEMENT`: Replaces the string between `patternBefore` and `patternAfter` with the specified `replacement`.
	// * `REPLACE_WITH_PATTERN`: Replaces the **patternToReplace** with the specified **replacement**.
	// * `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string that matches the **regularExpression**.
	// * `REPLACE_WITH_REGULAR_EXPRESSION`: Replaces all occurrences that match **regularExpression** with the specified **replacement**.
	// * `REPLACE_IDS`: Replaces all IDs and UUIDs with the specified **replacement**. Possible values are `EXTRACT_BY_REGULAR_EXPRESSION`, `REPLACEMENT`, `REPLACE_IDS`, `REPLACE_WITH_PATTERN`, `REPLACE_WITH_REGULAR_EXPRESSION` and `SUBSTRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type StepParameters struct {

	// (Boolean) If set to true: Returns the input if patternBefore or patternAfter cannot be found and the type is SUBSTRING. Returns the input if regularExpression doesn't match and type is EXTRACT_BY_REGULAR_EXPRESSION.
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	//
	// Otherwise `null` is returned.
	// +kubebuilder:validation:Optional
	FallbackToInput *bool `json:"fallbackToInput,omitempty" tf:"fallback_to_input,omitempty"`

	// (String) The pattern after the required value. It will be removed.
	// The pattern after the required value. It will be removed.
	// +kubebuilder:validation:Optional
	PatternAfter *string `json:"patternAfter,omitempty" tf:"pattern_after,omitempty"`

	// (String) The required occurrence of patternAfter. Possible values are FIRST and LAST.
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	// +kubebuilder:validation:Optional
	PatternAfterSearchType *string `json:"patternAfterSearchType,omitempty" tf:"pattern_after_search_type,omitempty"`

	// (String) The pattern before the required value. It will be removed.
	// The pattern before the required value. It will be removed.
	// +kubebuilder:validation:Optional
	PatternBefore *string `json:"patternBefore,omitempty" tf:"pattern_before,omitempty"`

	// (String) The required occurrence of patternBefore. Possible values are FIRST and LAST.
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	// +kubebuilder:validation:Optional
	PatternBeforeSearchType *string `json:"patternBeforeSearchType,omitempty" tf:"pattern_before_search_type,omitempty"`

	// (String) The pattern to be replaced.
	// The pattern to be replaced.
	//
	// Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	// +kubebuilder:validation:Optional
	PatternToReplace *string `json:"patternToReplace,omitempty" tf:"pattern_to_replace,omitempty"`

	// (String) A regular expression for the string to be extracted or replaced. Only applicable if the type is EXTRACT_BY_REGULAR_EXPRESSION or REPLACE_WITH_REGULAR_EXPRESSION.
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	// +kubebuilder:validation:Optional
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) Replacement for the original value
	// Replacement for the original value
	// +kubebuilder:validation:Optional
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// An action to be taken by the processing:
	//
	// * `SUBSTRING`: Extracts the string between `patternBefore` and `patternAfter`.
	// * `REPLACEMENT`: Replaces the string between `patternBefore` and `patternAfter` with the specified `replacement`.
	// * `REPLACE_WITH_PATTERN`: Replaces the **patternToReplace** with the specified **replacement**.
	// * `EXTRACT_BY_REGULAR_EXPRESSION`: Extracts the part of the string that matches the **regularExpression**.
	// * `REPLACE_WITH_REGULAR_EXPRESSION`: Replaces all occurrences that match **regularExpression** with the specified **replacement**.
	// * `REPLACE_IDS`: Replaces all IDs and UUIDs with the specified **replacement**. Possible values are `EXTRACT_BY_REGULAR_EXPRESSION`, `REPLACEMENT`, `REPLACE_IDS`, `REPLACE_WITH_PATTERN`, `REPLACE_WITH_REGULAR_EXPRESSION` and `SUBSTRING`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type TagInitParameters struct {

	// (String) The cleanup rule of the property.
	// Cleanup rule expression of the userTag
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The ID of this resource.
	// A unique ID among all userTags and properties of this application. Minimum value is 1. Kept for backwards compatibility
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If it's of type metaData, metaData id of the userTag
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`
}

type TagObservation struct {

	// (String) The cleanup rule of the property.
	// Cleanup rule expression of the userTag
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The ID of this resource.
	// A unique ID among all userTags and properties of this application. Minimum value is 1. Kept for backwards compatibility
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If it's of type metaData, metaData id of the userTag
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`

	// (Number) The unique ID of the meta data to capture
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueID *float64 `json:"uniqueId,omitempty" tf:"unique_id,omitempty"`
}

type TagParameters struct {

	// (String) The cleanup rule of the property.
	// Cleanup rule expression of the userTag
	// +kubebuilder:validation:Optional
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The ID of this resource.
	// A unique ID among all userTags and properties of this application. Minimum value is 1. Kept for backwards compatibility
	// +kubebuilder:validation:Optional
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If it's of type metaData, metaData id of the userTag
	// +kubebuilder:validation:Optional
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the RrequestAttribute for the userTag
	// +kubebuilder:validation:Optional
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`
}

type TimeoutSettingsInitParameters struct {

	// (Number) Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit *float64 `json:"temporaryActionLimit,omitempty" tf:"temporary_action_limit,omitempty"`

	// (Number) The total timeout of all cascaded timeouts that should still be able to create a temporary action
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout *float64 `json:"temporaryActionTotalTimeout,omitempty" tf:"temporary_action_total_timeout,omitempty"`

	// (Boolean) Timed action support enabled/disabled.
	// Timed action support enabled/disabled.
	//
	// Enable to detect actions that trigger sending of XHRs via `setTimout` methods
	TimedActionSupport *bool `json:"timedActionSupport,omitempty" tf:"timed_action_support,omitempty"`
}

type TimeoutSettingsObservation struct {

	// (Number) Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit *float64 `json:"temporaryActionLimit,omitempty" tf:"temporary_action_limit,omitempty"`

	// (Number) The total timeout of all cascaded timeouts that should still be able to create a temporary action
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout *float64 `json:"temporaryActionTotalTimeout,omitempty" tf:"temporary_action_total_timeout,omitempty"`

	// (Boolean) Timed action support enabled/disabled.
	// Timed action support enabled/disabled.
	//
	// Enable to detect actions that trigger sending of XHRs via `setTimout` methods
	TimedActionSupport *bool `json:"timedActionSupport,omitempty" tf:"timed_action_support,omitempty"`
}

type TimeoutSettingsParameters struct {

	// (Number) Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	// +kubebuilder:validation:Optional
	TemporaryActionLimit *float64 `json:"temporaryActionLimit" tf:"temporary_action_limit,omitempty"`

	// (Number) The total timeout of all cascaded timeouts that should still be able to create a temporary action
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	// +kubebuilder:validation:Optional
	TemporaryActionTotalTimeout *float64 `json:"temporaryActionTotalTimeout" tf:"temporary_action_total_timeout,omitempty"`

	// (Boolean) Timed action support enabled/disabled.
	// Timed action support enabled/disabled.
	//
	// Enable to detect actions that trigger sending of XHRs via `setTimout` methods
	// +kubebuilder:validation:Optional
	TimedActionSupport *bool `json:"timedActionSupport,omitempty" tf:"timed_action_support,omitempty"`
}

type UserActionAndSessionPropertiesInitParameters struct {

	// (Block List) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	Property []UserActionAndSessionPropertiesPropertyInitParameters `json:"property,omitempty" tf:"property,omitempty"`
}

type UserActionAndSessionPropertiesObservation struct {

	// (Block List) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	Property []UserActionAndSessionPropertiesPropertyObservation `json:"property,omitempty" tf:"property,omitempty"`
}

type UserActionAndSessionPropertiesParameters struct {

	// (Block List) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	// +kubebuilder:validation:Optional
	Property []UserActionAndSessionPropertiesPropertyParameters `json:"property,omitempty" tf:"property,omitempty"`
}

type UserActionAndSessionPropertiesPropertyInitParameters struct {

	// (String) The aggregation type of the property.
	// The aggregation type of the property.
	//
	// It defines how multiple values of the property are aggregated. Possible values are `AVERAGE`, `FIRST`, `LAST`, `MAXIMUM`, `MINIMUM` and `SUM`.
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The cleanup rule of the property.
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The display name of the property
	// The display name of the property
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The ID of this resource.
	// Unique id among all userTags and properties of this application
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (String) Key of the property
	// Key of the property
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Number) If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200. Maximum is 1000.
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength *float64 `json:"longStringLength,omitempty" tf:"long_string_length,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If the origin is `META_DATA`, metaData id of the property
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The origin of the property. Possible values are JAVASCRIPT_API, META_DATA and SERVER_SIDE_REQUEST_ATTRIBUTE.
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`

	// (Boolean) If true, the property is stored as a session property
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty *bool `json:"storeAsSessionProperty,omitempty" tf:"store_as_session_property,omitempty"`

	// (Boolean) If true, the property is stored as a user action property
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty *bool `json:"storeAsUserActionProperty,omitempty" tf:"store_as_user_action_property,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UserActionAndSessionPropertiesPropertyObservation struct {

	// (String) The aggregation type of the property.
	// The aggregation type of the property.
	//
	// It defines how multiple values of the property are aggregated. Possible values are `AVERAGE`, `FIRST`, `LAST`, `MAXIMUM`, `MINIMUM` and `SUM`.
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The cleanup rule of the property.
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The display name of the property
	// The display name of the property
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The ID of this resource.
	// Unique id among all userTags and properties of this application
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (String) Key of the property
	// Key of the property
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Number) If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200. Maximum is 1000.
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength *float64 `json:"longStringLength,omitempty" tf:"long_string_length,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If the origin is `META_DATA`, metaData id of the property
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The origin of the property. Possible values are JAVASCRIPT_API, META_DATA and SERVER_SIDE_REQUEST_ATTRIBUTE.
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin *string `json:"origin,omitempty" tf:"origin,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`

	// (Boolean) If true, the property is stored as a session property
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty *bool `json:"storeAsSessionProperty,omitempty" tf:"store_as_session_property,omitempty"`

	// (Boolean) If true, the property is stored as a user action property
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty *bool `json:"storeAsUserActionProperty,omitempty" tf:"store_as_user_action_property,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UserActionAndSessionPropertiesPropertyParameters struct {

	// (String) The aggregation type of the property.
	// The aggregation type of the property.
	//
	// It defines how multiple values of the property are aggregated. Possible values are `AVERAGE`, `FIRST`, `LAST`, `MAXIMUM`, `MINIMUM` and `SUM`.
	// +kubebuilder:validation:Optional
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The cleanup rule of the property.
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	// +kubebuilder:validation:Optional
	CleanupRule *string `json:"cleanupRule,omitempty" tf:"cleanup_rule,omitempty"`

	// (String) The display name of the property
	// The display name of the property
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The ID of this resource.
	// Unique id among all userTags and properties of this application
	// +kubebuilder:validation:Optional
	ID *float64 `json:"id" tf:"id,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (String) Key of the property
	// Key of the property
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (Number) If the type is LONG_STRING, the max length for this property. Must be a multiple of 100. Defaults to 200. Maximum is 1000.
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	// +kubebuilder:validation:Optional
	LongStringLength *float64 `json:"longStringLength,omitempty" tf:"long_string_length,omitempty"`

	// (Number) If the origin is META_DATA, metaData id of the property
	// If the origin is `META_DATA`, metaData id of the property
	// +kubebuilder:validation:Optional
	MetadataID *float64 `json:"metadataId,omitempty" tf:"metadata_id,omitempty"`

	// (String) The origin of the property. Possible values are JAVASCRIPT_API, META_DATA and SERVER_SIDE_REQUEST_ATTRIBUTE.
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	// +kubebuilder:validation:Optional
	Origin *string `json:"origin" tf:"origin,omitempty"`

	// (String) The ID of the request attribute.
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	// +kubebuilder:validation:Optional
	ServerSideRequestAttribute *string `json:"serverSideRequestAttribute,omitempty" tf:"server_side_request_attribute,omitempty"`

	// (Boolean) If true, the property is stored as a session property
	// If `true`, the property is stored as a session property
	// +kubebuilder:validation:Optional
	StoreAsSessionProperty *bool `json:"storeAsSessionProperty,omitempty" tf:"store_as_session_property,omitempty"`

	// (Boolean) If true, the property is stored as a user action property
	// If `true`, the property is stored as a user action property
	// +kubebuilder:validation:Optional
	StoreAsUserActionProperty *bool `json:"storeAsUserActionProperty,omitempty" tf:"store_as_user_action_property,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type UserActionInitParameters struct {

	// (String) Type of the action to which the rule applies. Possible values are Custom, Load and Xhr.
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType *string `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The type of the entity to which the rule applies. Possible values are ActionName, CssSelector, JavaScriptVariable, MetaTag, PagePath, PageTitle, PageUrl, UrlAnchor and XhrUrl.
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity *string `json:"matchEntity,omitempty" tf:"match_entity,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The value to be matched to hit the conversion goal
	// The value to be matched to hit the conversion goal
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserActionNamingSettingsInitParameters struct {

	// (Block List, Max: 1) User action naming rules for custom actions (see below for nested schema)
	// User action naming rules for custom actions
	CustomActionNamingRules []CustomActionNamingRulesInitParameters `json:"customActionNamingRules,omitempty" tf:"custom_action_naming_rules,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// Case insensitive naming
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Block List, Max: 1) User action naming rules for loading actions (see below for nested schema)
	// User action naming rules for loading actions
	LoadActionNamingRules []LoadActionNamingRulesInitParameters `json:"loadActionNamingRules,omitempty" tf:"load_action_naming_rules,omitempty"`

	// (Block List, Max: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	Placeholders []PlaceholdersInitParameters `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Set of String) User action naming rules for custom actions. If not specified Dynatrace assumes __sid, cfid, cftoken, phpsessid and sid.
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	// +listType=set
	QueryParameterCleanups []*string `json:"queryParameterCleanups,omitempty" tf:"query_parameter_cleanups,omitempty"`

	// (Boolean) Deactivate this setting if different domains should not result in separate user actions
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain *bool `json:"splitUserActionsByDomain,omitempty" tf:"split_user_actions_by_domain,omitempty"`

	// (Boolean) First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction *bool `json:"useFirstDetectedLoadAction,omitempty" tf:"use_first_detected_load_action,omitempty"`

	// (Block List, Max: 1) User action naming rules for XHR actions (see below for nested schema)
	// User action naming rules for XHR actions
	XhrActionNamingRules []XhrActionNamingRulesInitParameters `json:"xhrActionNamingRules,omitempty" tf:"xhr_action_naming_rules,omitempty"`
}

type UserActionNamingSettingsObservation struct {

	// (Block List, Max: 1) User action naming rules for custom actions (see below for nested schema)
	// User action naming rules for custom actions
	CustomActionNamingRules []CustomActionNamingRulesObservation `json:"customActionNamingRules,omitempty" tf:"custom_action_naming_rules,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// Case insensitive naming
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Block List, Max: 1) User action naming rules for loading actions (see below for nested schema)
	// User action naming rules for loading actions
	LoadActionNamingRules []LoadActionNamingRulesObservation `json:"loadActionNamingRules,omitempty" tf:"load_action_naming_rules,omitempty"`

	// (Block List, Max: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	Placeholders []PlaceholdersObservation `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Set of String) User action naming rules for custom actions. If not specified Dynatrace assumes __sid, cfid, cftoken, phpsessid and sid.
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	// +listType=set
	QueryParameterCleanups []*string `json:"queryParameterCleanups,omitempty" tf:"query_parameter_cleanups,omitempty"`

	// (Boolean) Deactivate this setting if different domains should not result in separate user actions
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain *bool `json:"splitUserActionsByDomain,omitempty" tf:"split_user_actions_by_domain,omitempty"`

	// (Boolean) First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction *bool `json:"useFirstDetectedLoadAction,omitempty" tf:"use_first_detected_load_action,omitempty"`

	// (Block List, Max: 1) User action naming rules for XHR actions (see below for nested schema)
	// User action naming rules for XHR actions
	XhrActionNamingRules []XhrActionNamingRulesObservation `json:"xhrActionNamingRules,omitempty" tf:"xhr_action_naming_rules,omitempty"`
}

type UserActionNamingSettingsParameters struct {

	// (Block List, Max: 1) User action naming rules for custom actions (see below for nested schema)
	// User action naming rules for custom actions
	// +kubebuilder:validation:Optional
	CustomActionNamingRules []CustomActionNamingRulesParameters `json:"customActionNamingRules,omitempty" tf:"custom_action_naming_rules,omitempty"`

	// (Boolean) If true, the value of this property will always be stored in lower case. Defaults to false.
	// Case insensitive naming
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Block List, Max: 1) User action naming rules for loading actions (see below for nested schema)
	// User action naming rules for loading actions
	// +kubebuilder:validation:Optional
	LoadActionNamingRules []LoadActionNamingRulesParameters `json:"loadActionNamingRules,omitempty" tf:"load_action_naming_rules,omitempty"`

	// (Block List, Max: 1) User action placeholders (see below for nested schema)
	// User action placeholders
	// +kubebuilder:validation:Optional
	Placeholders []PlaceholdersParameters `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Set of String) User action naming rules for custom actions. If not specified Dynatrace assumes __sid, cfid, cftoken, phpsessid and sid.
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	// +kubebuilder:validation:Optional
	// +listType=set
	QueryParameterCleanups []*string `json:"queryParameterCleanups,omitempty" tf:"query_parameter_cleanups,omitempty"`

	// (Boolean) Deactivate this setting if different domains should not result in separate user actions
	// Deactivate this setting if different domains should not result in separate user actions
	// +kubebuilder:validation:Optional
	SplitUserActionsByDomain *bool `json:"splitUserActionsByDomain,omitempty" tf:"split_user_actions_by_domain,omitempty"`

	// (Boolean) First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	// +kubebuilder:validation:Optional
	UseFirstDetectedLoadAction *bool `json:"useFirstDetectedLoadAction,omitempty" tf:"use_first_detected_load_action,omitempty"`

	// (Block List, Max: 1) User action naming rules for XHR actions (see below for nested schema)
	// User action naming rules for XHR actions
	// +kubebuilder:validation:Optional
	XhrActionNamingRules []XhrActionNamingRulesParameters `json:"xhrActionNamingRules,omitempty" tf:"xhr_action_naming_rules,omitempty"`
}

type UserActionObservation struct {

	// (String) Type of the action to which the rule applies. Possible values are Custom, Load and Xhr.
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType *string `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The type of the entity to which the rule applies. Possible values are ActionName, CssSelector, JavaScriptVariable, MetaTag, PagePath, PageTitle, PageUrl, UrlAnchor and XhrUrl.
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity *string `json:"matchEntity,omitempty" tf:"match_entity,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The value to be matched to hit the conversion goal
	// The value to be matched to hit the conversion goal
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserActionParameters struct {

	// (String) Type of the action to which the rule applies. Possible values are Custom, Load and Xhr.
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	// +kubebuilder:validation:Optional
	ActionType *string `json:"actionType,omitempty" tf:"action_type,omitempty"`

	// sensitive (true) or (false)
	// The match is case-sensitive (`true`) or (`false`)
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) The type of the entity to which the rule applies. Possible values are ActionName, CssSelector, JavaScriptVariable, MetaTag, PagePath, PageTitle, PageUrl, UrlAnchor and XhrUrl.
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	// +kubebuilder:validation:Optional
	MatchEntity *string `json:"matchEntity,omitempty" tf:"match_entity,omitempty"`

	// (String) The operator of the match. Possible values are Begins, Contains and Ends.
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	// +kubebuilder:validation:Optional
	MatchType *string `json:"matchType,omitempty" tf:"match_type,omitempty"`

	// (String) The value to be matched to hit the conversion goal
	// The value to be matched to hit the conversion goal
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserTagsInitParameters struct {

	// (Block List, Min: 1) User tag settings (see below for nested schema)
	// User tag settings
	Tag []TagInitParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type UserTagsObservation struct {

	// (Block List, Min: 1) User tag settings (see below for nested schema)
	// User tag settings
	Tag []TagObservation `json:"tag,omitempty" tf:"tag,omitempty"`
}

type UserTagsParameters struct {

	// (Block List, Min: 1) User tag settings (see below for nested schema)
	// User tag settings
	// +kubebuilder:validation:Optional
	Tag []TagParameters `json:"tag" tf:"tag,omitempty"`
}

type VisitDurationInitParameters struct {

	// (Number) The duration of session to hit the conversion goal, in milliseconds
	// The duration of session to hit the conversion goal, in milliseconds
	Duration *float64 `json:"duration,omitempty" tf:"duration,omitempty"`
}

type VisitDurationObservation struct {

	// (Number) The duration of session to hit the conversion goal, in milliseconds
	// The duration of session to hit the conversion goal, in milliseconds
	Duration *float64 `json:"duration,omitempty" tf:"duration,omitempty"`
}

type VisitDurationParameters struct {

	// (Number) The duration of session to hit the conversion goal, in milliseconds
	// The duration of session to hit the conversion goal, in milliseconds
	// +kubebuilder:validation:Optional
	Duration *float64 `json:"duration" tf:"duration,omitempty"`
}

type VisitNumActionInitParameters struct {

	// (Number) The number of user actions to hit the conversion goal
	// The number of user actions to hit the conversion goal
	NumUserActions *float64 `json:"numUserActions,omitempty" tf:"num_user_actions,omitempty"`
}

type VisitNumActionObservation struct {

	// (Number) The number of user actions to hit the conversion goal
	// The number of user actions to hit the conversion goal
	NumUserActions *float64 `json:"numUserActions,omitempty" tf:"num_user_actions,omitempty"`
}

type VisitNumActionParameters struct {

	// (Number) The number of user actions to hit the conversion goal
	// The number of user actions to hit the conversion goal
	// +kubebuilder:validation:Optional
	NumUserActions *float64 `json:"numUserActions,omitempty" tf:"num_user_actions,omitempty"`
}

type VisuallyCompleteSettingsInitParameters struct {

	// (String) A RegularExpression used to exclude images and iframes from being detected by the VC module
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeURLRegex *string `json:"excludeUrlRegex,omitempty" tf:"exclude_url_regex,omitempty"`

	// (String) Query selector for mutation nodes to ignore in VC and SI calculation
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList *string `json:"ignoredMutationsList,omitempty" tf:"ignored_mutations_list,omitempty"`

	// (Number) The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout *float64 `json:"inactivityTimeout,omitempty" tf:"inactivity_timeout,omitempty"`

	// (Number) Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout *float64 `json:"mutationTimeout,omitempty" tf:"mutation_timeout,omitempty"`

	// (Number, Deprecated) no documentation available
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type VisuallyCompleteSettingsObservation struct {

	// (String) A RegularExpression used to exclude images and iframes from being detected by the VC module
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeURLRegex *string `json:"excludeUrlRegex,omitempty" tf:"exclude_url_regex,omitempty"`

	// (String) Query selector for mutation nodes to ignore in VC and SI calculation
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList *string `json:"ignoredMutationsList,omitempty" tf:"ignored_mutations_list,omitempty"`

	// (Number) The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout *float64 `json:"inactivityTimeout,omitempty" tf:"inactivity_timeout,omitempty"`

	// (Number) Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout *float64 `json:"mutationTimeout,omitempty" tf:"mutation_timeout,omitempty"`

	// (Number, Deprecated) no documentation available
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type VisuallyCompleteSettingsParameters struct {

	// (String) A RegularExpression used to exclude images and iframes from being detected by the VC module
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	// +kubebuilder:validation:Optional
	ExcludeURLRegex *string `json:"excludeUrlRegex,omitempty" tf:"exclude_url_regex,omitempty"`

	// (String) Query selector for mutation nodes to ignore in VC and SI calculation
	// Query selector for mutation nodes to ignore in VC and SI calculation
	// +kubebuilder:validation:Optional
	IgnoredMutationsList *string `json:"ignoredMutationsList,omitempty" tf:"ignored_mutations_list,omitempty"`

	// (Number) The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	// +kubebuilder:validation:Optional
	InactivityTimeout *float64 `json:"inactivityTimeout,omitempty" tf:"inactivity_timeout,omitempty"`

	// (Number) Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	// +kubebuilder:validation:Optional
	MutationTimeout *float64 `json:"mutationTimeout,omitempty" tf:"mutation_timeout,omitempty"`

	// (Number, Deprecated) no documentation available
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type WaterfallSettingsInitParameters struct {

	// (Number) Warn about resources with a lower browser cache rate above X%. Values between 1 and 100 are allowed.
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold *float64 `json:"resourceBrowserCachingThreshold,omitempty" tf:"resource_browser_caching_threshold,omitempty"`

	// (Number) Warn about resources larger than X bytes. Values between 0 and 99999000 are allowed.
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold *float64 `json:"resourcesThreshold,omitempty" tf:"resources_threshold,omitempty"`

	// (Number) Warn about slow CDN resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold *float64 `json:"slowCndResourcesThreshold,omitempty" tf:"slow_cnd_resources_threshold,omitempty"`

	// (Number) Warn about slow 1st party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold *float64 `json:"slowFirstPartyResourcesThreshold,omitempty" tf:"slow_first_party_resources_threshold,omitempty"`

	// (Number) Warn about slow 3rd party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold *float64 `json:"slowThirdPartyResourcesThreshold,omitempty" tf:"slow_third_party_resources_threshold,omitempty"`

	// (Number) Warn if Speed index exceeds X % of Visually complete. Values between 1 and 99 are allowed.
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold *float64 `json:"speedIndexVisuallyCompleteRatioThreshold,omitempty" tf:"speed_index_visually_complete_ratio_threshold,omitempty"`

	// (Number) Warn about uncompressed resources larger than X bytes. Values between 0 and 99999 are allowed.
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold *float64 `json:"uncompressedResourcesThreshold,omitempty" tf:"uncompressed_resources_threshold,omitempty"`
}

type WaterfallSettingsObservation struct {

	// (Number) Warn about resources with a lower browser cache rate above X%. Values between 1 and 100 are allowed.
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold *float64 `json:"resourceBrowserCachingThreshold,omitempty" tf:"resource_browser_caching_threshold,omitempty"`

	// (Number) Warn about resources larger than X bytes. Values between 0 and 99999000 are allowed.
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold *float64 `json:"resourcesThreshold,omitempty" tf:"resources_threshold,omitempty"`

	// (Number) Warn about slow CDN resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold *float64 `json:"slowCndResourcesThreshold,omitempty" tf:"slow_cnd_resources_threshold,omitempty"`

	// (Number) Warn about slow 1st party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold *float64 `json:"slowFirstPartyResourcesThreshold,omitempty" tf:"slow_first_party_resources_threshold,omitempty"`

	// (Number) Warn about slow 3rd party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold *float64 `json:"slowThirdPartyResourcesThreshold,omitempty" tf:"slow_third_party_resources_threshold,omitempty"`

	// (Number) Warn if Speed index exceeds X % of Visually complete. Values between 1 and 99 are allowed.
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold *float64 `json:"speedIndexVisuallyCompleteRatioThreshold,omitempty" tf:"speed_index_visually_complete_ratio_threshold,omitempty"`

	// (Number) Warn about uncompressed resources larger than X bytes. Values between 0 and 99999 are allowed.
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold *float64 `json:"uncompressedResourcesThreshold,omitempty" tf:"uncompressed_resources_threshold,omitempty"`
}

type WaterfallSettingsParameters struct {

	// (Number) Warn about resources with a lower browser cache rate above X%. Values between 1 and 100 are allowed.
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	// +kubebuilder:validation:Optional
	ResourceBrowserCachingThreshold *float64 `json:"resourceBrowserCachingThreshold" tf:"resource_browser_caching_threshold,omitempty"`

	// (Number) Warn about resources larger than X bytes. Values between 0 and 99999000 are allowed.
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	// +kubebuilder:validation:Optional
	ResourcesThreshold *float64 `json:"resourcesThreshold" tf:"resources_threshold,omitempty"`

	// (Number) Warn about slow CDN resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	// +kubebuilder:validation:Optional
	SlowCndResourcesThreshold *float64 `json:"slowCndResourcesThreshold" tf:"slow_cnd_resources_threshold,omitempty"`

	// (Number) Warn about slow 1st party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	// +kubebuilder:validation:Optional
	SlowFirstPartyResourcesThreshold *float64 `json:"slowFirstPartyResourcesThreshold" tf:"slow_first_party_resources_threshold,omitempty"`

	// (Number) Warn about slow 3rd party resources with a response time above X ms. Values between 0 and 99999000 are allowed.
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	// +kubebuilder:validation:Optional
	SlowThirdPartyResourcesThreshold *float64 `json:"slowThirdPartyResourcesThreshold" tf:"slow_third_party_resources_threshold,omitempty"`

	// (Number) Warn if Speed index exceeds X % of Visually complete. Values between 1 and 99 are allowed.
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	// +kubebuilder:validation:Optional
	SpeedIndexVisuallyCompleteRatioThreshold *float64 `json:"speedIndexVisuallyCompleteRatioThreshold" tf:"speed_index_visually_complete_ratio_threshold,omitempty"`

	// (Number) Warn about uncompressed resources larger than X bytes. Values between 0 and 99999 are allowed.
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	// +kubebuilder:validation:Optional
	UncompressedResourcesThreshold *float64 `json:"uncompressedResourcesThreshold" tf:"uncompressed_resources_threshold,omitempty"`
}

type WebApplicationInitParameters struct {

	// (Block List, Max: 1) A list of conversion goals of the application (see below for nested schema)
	// A list of conversion goals of the application
	ConversionGoals []ConversionGoalsInitParameters `json:"conversionGoals,omitempty" tf:"conversion_goals,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Analize X% of user sessions
	// (Field has overlap with `dynatrace_web_app_enablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage *float64 `json:"costControlUserSessionPercentage,omitempty" tf:"cost_control_user_session_percentage,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Custom Action Apdex settings of an application (see below for nested schema)
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings []CustomActionApdexSettingsInitParameters `json:"customActionApdexSettings,omitempty" tf:"custom_action_apdex_settings,omitempty"`

	// (Block List, Deprecated) User Action names to be flagged as Key User Actions (see below for nested schema)
	// User Action names to be flagged as Key User Actions
	KeyUserActions []KeyUserActionsInitParameters `json:"keyUserActions,omitempty" tf:"key_user_actions,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Load Action Apdex settings of an application (see below for nested schema)
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings []LoadActionApdexSettingsInitParameters `json:"loadActionApdexSettings,omitempty" tf:"load_action_apdex_settings,omitempty"`

	// (String) The key performance metric of load actions. Possible values are ACTION_DURATION, CUMULATIVE_LAYOUT_SHIFT, DOM_INTERACTIVE, FIRST_INPUT_DELAY, LARGEST_CONTENTFUL_PAINT, LOAD_EVENT_END, LOAD_EVENT_START, RESPONSE_END, RESPONSE_START, SPEED_INDEX and VISUALLY_COMPLETE
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric *string `json:"loadActionKeyPerformanceMetric,omitempty" tf:"load_action_key_performance_metric,omitempty"`

	// (Block List, Max: 1) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	MetaDataCaptureSettings []MetaDataCaptureSettingsInitParameters `json:"metaDataCaptureSettings,omitempty" tf:"meta_data_capture_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Real user monitoring settings (see below for nested schema)
	// Real user monitoring settings
	MonitoringSettings []MonitoringSettingsInitParameters `json:"monitoringSettings,omitempty" tf:"monitoring_settings,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the web application, displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_web_app_enablement) Real user monitoring enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled *bool `json:"realUserMonitoringEnabled,omitempty" tf:"real_user_monitoring_enabled,omitempty"`

	// (Block List, Max: 1) Settings regarding Session Replay (see below for nested schema)
	// Settings regarding Session Replay
	SessionReplayConfig []SessionReplayConfigInitParameters `json:"sessionReplayConfig,omitempty" tf:"session_replay_config,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL injection pattern for manual web application
	// URL injection pattern for manual web application
	URLInjectionPattern *string `json:"urlInjectionPattern,omitempty" tf:"url_injection_pattern,omitempty"`

	// (Block List, Max: 1) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	UserActionAndSessionProperties []UserActionAndSessionPropertiesInitParameters `json:"userActionAndSessionProperties,omitempty" tf:"user_action_and_session_properties,omitempty"`

	// (Block List, Max: 1) The settings of user action naming (see below for nested schema)
	// The settings of user action naming
	UserActionNamingSettings []UserActionNamingSettingsInitParameters `json:"userActionNamingSettings,omitempty" tf:"user_action_naming_settings,omitempty"`

	// (Block List, Max: 1) User tags settings (see below for nested schema)
	// User tags settings
	UserTags []UserTagsInitParameters `json:"userTags,omitempty" tf:"user_tags,omitempty"`

	// (Block List, Min: 1, Max: 1) These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources (see below for nested schema)
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings []WaterfallSettingsInitParameters `json:"waterfallSettings,omitempty" tf:"waterfall_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the XHR Action Apdex settings of an application (see below for nested schema)
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings []XhrActionApdexSettingsInitParameters `json:"xhrActionApdexSettings,omitempty" tf:"xhr_action_apdex_settings,omitempty"`

	// (String) The key performance metric of XHR actions. Possible values are ACTION_DURATION, RESPONSE_END, RESPONSE_START and VISUALLY_COMPLETE.
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric *string `json:"xhrActionKeyPerformanceMetric,omitempty" tf:"xhr_action_key_performance_metric,omitempty"`
}

type WebApplicationObservation struct {

	// (Block List, Max: 1) A list of conversion goals of the application (see below for nested schema)
	// A list of conversion goals of the application
	ConversionGoals []ConversionGoalsObservation `json:"conversionGoals,omitempty" tf:"conversion_goals,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Analize X% of user sessions
	// (Field has overlap with `dynatrace_web_app_enablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage *float64 `json:"costControlUserSessionPercentage,omitempty" tf:"cost_control_user_session_percentage,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Custom Action Apdex settings of an application (see below for nested schema)
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings []CustomActionApdexSettingsObservation `json:"customActionApdexSettings,omitempty" tf:"custom_action_apdex_settings,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Deprecated) User Action names to be flagged as Key User Actions (see below for nested schema)
	// User Action names to be flagged as Key User Actions
	KeyUserActions []KeyUserActionsObservation `json:"keyUserActions,omitempty" tf:"key_user_actions,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Load Action Apdex settings of an application (see below for nested schema)
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings []LoadActionApdexSettingsObservation `json:"loadActionApdexSettings,omitempty" tf:"load_action_apdex_settings,omitempty"`

	// (String) The key performance metric of load actions. Possible values are ACTION_DURATION, CUMULATIVE_LAYOUT_SHIFT, DOM_INTERACTIVE, FIRST_INPUT_DELAY, LARGEST_CONTENTFUL_PAINT, LOAD_EVENT_END, LOAD_EVENT_START, RESPONSE_END, RESPONSE_START, SPEED_INDEX and VISUALLY_COMPLETE
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric *string `json:"loadActionKeyPerformanceMetric,omitempty" tf:"load_action_key_performance_metric,omitempty"`

	// (Block List, Max: 1) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	MetaDataCaptureSettings []MetaDataCaptureSettingsObservation `json:"metaDataCaptureSettings,omitempty" tf:"meta_data_capture_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Real user monitoring settings (see below for nested schema)
	// Real user monitoring settings
	MonitoringSettings []MonitoringSettingsObservation `json:"monitoringSettings,omitempty" tf:"monitoring_settings,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the web application, displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_web_app_enablement) Real user monitoring enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled *bool `json:"realUserMonitoringEnabled,omitempty" tf:"real_user_monitoring_enabled,omitempty"`

	// (Block List, Max: 1) Settings regarding Session Replay (see below for nested schema)
	// Settings regarding Session Replay
	SessionReplayConfig []SessionReplayConfigObservation `json:"sessionReplayConfig,omitempty" tf:"session_replay_config,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL injection pattern for manual web application
	// URL injection pattern for manual web application
	URLInjectionPattern *string `json:"urlInjectionPattern,omitempty" tf:"url_injection_pattern,omitempty"`

	// (Block List, Max: 1) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	UserActionAndSessionProperties []UserActionAndSessionPropertiesObservation `json:"userActionAndSessionProperties,omitempty" tf:"user_action_and_session_properties,omitempty"`

	// (Block List, Max: 1) The settings of user action naming (see below for nested schema)
	// The settings of user action naming
	UserActionNamingSettings []UserActionNamingSettingsObservation `json:"userActionNamingSettings,omitempty" tf:"user_action_naming_settings,omitempty"`

	// (Block List, Max: 1) User tags settings (see below for nested schema)
	// User tags settings
	UserTags []UserTagsObservation `json:"userTags,omitempty" tf:"user_tags,omitempty"`

	// (Block List, Min: 1, Max: 1) These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources (see below for nested schema)
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings []WaterfallSettingsObservation `json:"waterfallSettings,omitempty" tf:"waterfall_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the XHR Action Apdex settings of an application (see below for nested schema)
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings []XhrActionApdexSettingsObservation `json:"xhrActionApdexSettings,omitempty" tf:"xhr_action_apdex_settings,omitempty"`

	// (String) The key performance metric of XHR actions. Possible values are ACTION_DURATION, RESPONSE_END, RESPONSE_START and VISUALLY_COMPLETE.
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric *string `json:"xhrActionKeyPerformanceMetric,omitempty" tf:"xhr_action_key_performance_metric,omitempty"`
}

type WebApplicationParameters struct {

	// (Block List, Max: 1) A list of conversion goals of the application (see below for nested schema)
	// A list of conversion goals of the application
	// +kubebuilder:validation:Optional
	ConversionGoals []ConversionGoalsParameters `json:"conversionGoals,omitempty" tf:"conversion_goals,omitempty"`

	// (Number) (Field has overlap with dynatrace_web_app_enablement) Analize X% of user sessions
	// (Field has overlap with `dynatrace_web_app_enablement`) Analize *X*% of user sessions
	// +kubebuilder:validation:Optional
	CostControlUserSessionPercentage *float64 `json:"costControlUserSessionPercentage,omitempty" tf:"cost_control_user_session_percentage,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Custom Action Apdex settings of an application (see below for nested schema)
	// Defines the Custom Action Apdex settings of an application
	// +kubebuilder:validation:Optional
	CustomActionApdexSettings []CustomActionApdexSettingsParameters `json:"customActionApdexSettings,omitempty" tf:"custom_action_apdex_settings,omitempty"`

	// (Block List, Deprecated) User Action names to be flagged as Key User Actions (see below for nested schema)
	// User Action names to be flagged as Key User Actions
	// +kubebuilder:validation:Optional
	KeyUserActions []KeyUserActionsParameters `json:"keyUserActions,omitempty" tf:"key_user_actions,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the Load Action Apdex settings of an application (see below for nested schema)
	// Defines the Load Action Apdex settings of an application
	// +kubebuilder:validation:Optional
	LoadActionApdexSettings []LoadActionApdexSettingsParameters `json:"loadActionApdexSettings,omitempty" tf:"load_action_apdex_settings,omitempty"`

	// (String) The key performance metric of load actions. Possible values are ACTION_DURATION, CUMULATIVE_LAYOUT_SHIFT, DOM_INTERACTIVE, FIRST_INPUT_DELAY, LARGEST_CONTENTFUL_PAINT, LOAD_EVENT_END, LOAD_EVENT_START, RESPONSE_END, RESPONSE_START, SPEED_INDEX and VISUALLY_COMPLETE
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	// +kubebuilder:validation:Optional
	LoadActionKeyPerformanceMetric *string `json:"loadActionKeyPerformanceMetric,omitempty" tf:"load_action_key_performance_metric,omitempty"`

	// (Block List, Max: 1) Java script agent meta data capture settings (see below for nested schema)
	// Java script agent meta data capture settings
	// +kubebuilder:validation:Optional
	MetaDataCaptureSettings []MetaDataCaptureSettingsParameters `json:"metaDataCaptureSettings,omitempty" tf:"meta_data_capture_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Real user monitoring settings (see below for nested schema)
	// Real user monitoring settings
	// +kubebuilder:validation:Optional
	MonitoringSettings []MonitoringSettingsParameters `json:"monitoringSettings,omitempty" tf:"monitoring_settings,omitempty"`

	// (String) The name of the web application, displayed in the UI
	// The name of the web application, displayed in the UI
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_web_app_enablement) Real user monitoring enabled/disabled
	// (Field has overlap with `dynatrace_web_app_enablement`) Real user monitoring enabled/disabled
	// +kubebuilder:validation:Optional
	RealUserMonitoringEnabled *bool `json:"realUserMonitoringEnabled,omitempty" tf:"real_user_monitoring_enabled,omitempty"`

	// (Block List, Max: 1) Settings regarding Session Replay (see below for nested schema)
	// Settings regarding Session Replay
	// +kubebuilder:validation:Optional
	SessionReplayConfig []SessionReplayConfigParameters `json:"sessionReplayConfig,omitempty" tf:"session_replay_config,omitempty"`

	// (String) The type of the web application. Possible values are AUTO_INJECTED, BROWSER_EXTENSION_INJECTED and MANUALLY_INJECTED
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) URL injection pattern for manual web application
	// URL injection pattern for manual web application
	// +kubebuilder:validation:Optional
	URLInjectionPattern *string `json:"urlInjectionPattern,omitempty" tf:"url_injection_pattern,omitempty"`

	// (Block List, Max: 1) User action and session properties settings (see below for nested schema)
	// User action and session properties settings
	// +kubebuilder:validation:Optional
	UserActionAndSessionProperties []UserActionAndSessionPropertiesParameters `json:"userActionAndSessionProperties,omitempty" tf:"user_action_and_session_properties,omitempty"`

	// (Block List, Max: 1) The settings of user action naming (see below for nested schema)
	// The settings of user action naming
	// +kubebuilder:validation:Optional
	UserActionNamingSettings []UserActionNamingSettingsParameters `json:"userActionNamingSettings,omitempty" tf:"user_action_naming_settings,omitempty"`

	// (Block List, Max: 1) User tags settings (see below for nested schema)
	// User tags settings
	// +kubebuilder:validation:Optional
	UserTags []UserTagsParameters `json:"userTags,omitempty" tf:"user_tags,omitempty"`

	// (Block List, Min: 1, Max: 1) These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources (see below for nested schema)
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	// +kubebuilder:validation:Optional
	WaterfallSettings []WaterfallSettingsParameters `json:"waterfallSettings,omitempty" tf:"waterfall_settings,omitempty"`

	// (Block List, Min: 1, Max: 1) Defines the XHR Action Apdex settings of an application (see below for nested schema)
	// Defines the XHR Action Apdex settings of an application
	// +kubebuilder:validation:Optional
	XhrActionApdexSettings []XhrActionApdexSettingsParameters `json:"xhrActionApdexSettings,omitempty" tf:"xhr_action_apdex_settings,omitempty"`

	// (String) The key performance metric of XHR actions. Possible values are ACTION_DURATION, RESPONSE_END, RESPONSE_START and VISUALLY_COMPLETE.
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	// +kubebuilder:validation:Optional
	XhrActionKeyPerformanceMetric *string `json:"xhrActionKeyPerformanceMetric,omitempty" tf:"xhr_action_key_performance_metric,omitempty"`
}

type XhrActionApdexSettingsInitParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type XhrActionApdexSettingsObservation struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold,omitempty" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *float64 `json:"frustratingThreshold,omitempty" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold,omitempty" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *float64 `json:"toleratedThreshold,omitempty" tf:"tolerated_threshold,omitempty"`
}

type XhrActionApdexSettingsParameters struct {

	// (Number) Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingFallbackThreshold *float64 `json:"frustratingFallbackThreshold" tf:"frustrating_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	// +kubebuilder:validation:Optional
	FrustratingThreshold *float64 `json:"frustratingThreshold" tf:"frustrating_threshold,omitempty"`

	// (Number, Deprecated) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// (Number) Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedFallbackThreshold *float64 `json:"toleratedFallbackThreshold" tf:"tolerated_fallback_threshold,omitempty"`

	// (Number) Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	// +kubebuilder:validation:Optional
	ToleratedThreshold *float64 `json:"toleratedThreshold" tf:"tolerated_threshold,omitempty"`
}

type XhrActionNamingRulesInitParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []XhrActionNamingRulesRuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type XhrActionNamingRulesObservation struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	Rule []XhrActionNamingRulesRuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type XhrActionNamingRulesParameters struct {

	// (Block List, Min: 1) Java script injection rule (see below for nested schema)
	// The settings of naming rule
	// +kubebuilder:validation:Optional
	Rule []XhrActionNamingRulesRuleParameters `json:"rule" tf:"rule,omitempty"`
}

type XhrActionNamingRulesRuleConditionsInitParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []RuleConditionsConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type XhrActionNamingRulesRuleConditionsObservation struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Condition []RuleConditionsConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type XhrActionNamingRulesRuleConditionsParameters struct {

	// (Block List, Min: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Condition []RuleConditionsConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type XhrActionNamingRulesRuleInitParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []XhrActionNamingRulesRuleConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type XhrActionNamingRulesRuleObservation struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	Conditions []XhrActionNamingRulesRuleConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template *string `json:"template,omitempty" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

type XhrActionNamingRulesRuleParameters struct {

	// (Block List, Max: 1) Defines the conditions when the naming rule should apply (see below for nested schema)
	// Defines the conditions when the naming rule should apply
	// +kubebuilder:validation:Optional
	Conditions []XhrActionNamingRulesRuleConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Naming pattern. Use Curly brackets {} to select placeholders
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	// +kubebuilder:validation:Optional
	Template *string `json:"template" tf:"template,omitempty"`

	// (Boolean) If set to true the conditions will be connected by logical OR instead of logical AND
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	// +kubebuilder:validation:Optional
	UseOrConditions *bool `json:"useOrConditions,omitempty" tf:"use_or_conditions,omitempty"`
}

// WebApplicationSpec defines the desired state of WebApplication
type WebApplicationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebApplicationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebApplicationInitParameters `json:"initProvider,omitempty"`
}

// WebApplicationStatus defines the observed state of WebApplication.
type WebApplicationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebApplicationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebApplication is the Schema for the WebApplications API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebApplication struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.costControlUserSessionPercentage) || (has(self.initProvider) && has(self.initProvider.costControlUserSessionPercentage))",message="spec.forProvider.costControlUserSessionPercentage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.customActionApdexSettings) || (has(self.initProvider) && has(self.initProvider.customActionApdexSettings))",message="spec.forProvider.customActionApdexSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadActionApdexSettings) || (has(self.initProvider) && has(self.initProvider.loadActionApdexSettings))",message="spec.forProvider.loadActionApdexSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadActionKeyPerformanceMetric) || (has(self.initProvider) && has(self.initProvider.loadActionKeyPerformanceMetric))",message="spec.forProvider.loadActionKeyPerformanceMetric is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.monitoringSettings) || (has(self.initProvider) && has(self.initProvider.monitoringSettings))",message="spec.forProvider.monitoringSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.waterfallSettings) || (has(self.initProvider) && has(self.initProvider.waterfallSettings))",message="spec.forProvider.waterfallSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.xhrActionApdexSettings) || (has(self.initProvider) && has(self.initProvider.xhrActionApdexSettings))",message="spec.forProvider.xhrActionApdexSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.xhrActionKeyPerformanceMetric) || (has(self.initProvider) && has(self.initProvider.xhrActionKeyPerformanceMetric))",message="spec.forProvider.xhrActionKeyPerformanceMetric is a required parameter"
	Spec   WebApplicationSpec   `json:"spec"`
	Status WebApplicationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebApplicationList contains a list of WebApplications
type WebApplicationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebApplication `json:"items"`
}

// Repository type metadata.
var (
	WebApplication_Kind             = "WebApplication"
	WebApplication_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebApplication_Kind}.String()
	WebApplication_KindAPIVersion   = WebApplication_Kind + "." + CRDGroupVersion.String()
	WebApplication_GroupVersionKind = CRDGroupVersion.WithKind(WebApplication_Kind)
)

func init() {
	SchemeBuilder.Register(&WebApplication{}, &WebApplicationList{})
}
