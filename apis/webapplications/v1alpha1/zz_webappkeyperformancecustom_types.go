// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ThresholdsInitParameters struct {

	// (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds *float64 `json:"frustratingThresholdSeconds,omitempty" tf:"frustrating_threshold_seconds,omitempty"`

	// (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds *float64 `json:"toleratedThresholdSeconds,omitempty" tf:"tolerated_threshold_seconds,omitempty"`
}

type ThresholdsObservation struct {

	// (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds *float64 `json:"frustratingThresholdSeconds,omitempty" tf:"frustrating_threshold_seconds,omitempty"`

	// (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds *float64 `json:"toleratedThresholdSeconds,omitempty" tf:"tolerated_threshold_seconds,omitempty"`
}

type ThresholdsParameters struct {

	// (Number) If User action duration is above this value, the action is assigned to the Frustrated performance zone.
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	// +kubebuilder:validation:Optional
	FrustratingThresholdSeconds *float64 `json:"frustratingThresholdSeconds" tf:"frustrating_threshold_seconds,omitempty"`

	// (Number) If User action duration is below this value, the action is assigned to the Satisfied performance zone.
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	// +kubebuilder:validation:Optional
	ToleratedThresholdSeconds *float64 `json:"toleratedThresholdSeconds" tf:"tolerated_threshold_seconds,omitempty"`
}

type WebAppKeyPerformanceCustomInitParameters struct {

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) User action duration thresholds (see below for nested schema)
	// User action duration thresholds
	Thresholds []ThresholdsInitParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type WebAppKeyPerformanceCustomObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) User action duration thresholds (see below for nested schema)
	// User action duration thresholds
	Thresholds []ThresholdsObservation `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

type WebAppKeyPerformanceCustomParameters struct {

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION)
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) User action duration thresholds (see below for nested schema)
	// User action duration thresholds
	// +kubebuilder:validation:Optional
	Thresholds []ThresholdsParameters `json:"thresholds,omitempty" tf:"thresholds,omitempty"`
}

// WebAppKeyPerformanceCustomSpec defines the desired state of WebAppKeyPerformanceCustom
type WebAppKeyPerformanceCustomSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppKeyPerformanceCustomParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppKeyPerformanceCustomInitParameters `json:"initProvider,omitempty"`
}

// WebAppKeyPerformanceCustomStatus defines the observed state of WebAppKeyPerformanceCustom.
type WebAppKeyPerformanceCustomStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppKeyPerformanceCustomObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppKeyPerformanceCustom is the Schema for the WebAppKeyPerformanceCustoms API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppKeyPerformanceCustom struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.thresholds) || (has(self.initProvider) && has(self.initProvider.thresholds))",message="spec.forProvider.thresholds is a required parameter"
	Spec   WebAppKeyPerformanceCustomSpec   `json:"spec"`
	Status WebAppKeyPerformanceCustomStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppKeyPerformanceCustomList contains a list of WebAppKeyPerformanceCustoms
type WebAppKeyPerformanceCustomList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppKeyPerformanceCustom `json:"items"`
}

// Repository type metadata.
var (
	WebAppKeyPerformanceCustom_Kind             = "WebAppKeyPerformanceCustom"
	WebAppKeyPerformanceCustom_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppKeyPerformanceCustom_Kind}.String()
	WebAppKeyPerformanceCustom_KindAPIVersion   = WebAppKeyPerformanceCustom_Kind + "." + CRDGroupVersion.String()
	WebAppKeyPerformanceCustom_GroupVersionKind = CRDGroupVersion.WithKind(WebAppKeyPerformanceCustom_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppKeyPerformanceCustom{}, &WebAppKeyPerformanceCustomList{})
}
