// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorRuleCaptureSettingsInitParameters struct {

	// (Boolean) Capture this error
	// Capture this error
	Capture *bool `json:"capture,omitempty" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type ErrorRuleCaptureSettingsObservation struct {

	// (Boolean) Capture this error
	// Capture this error
	Capture *bool `json:"capture,omitempty" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type ErrorRuleCaptureSettingsParameters struct {

	// (Boolean) Capture this error
	// Capture this error
	// +kubebuilder:validation:Optional
	Capture *bool `json:"capture" tf:"capture,omitempty"`

	// (Boolean) View more details
	// [View more details](https://dt-url.net/hd580p2k)
	// +kubebuilder:validation:Optional
	ConsiderForAI *bool `json:"considerForAi,omitempty" tf:"consider_for_ai,omitempty"`

	// (Boolean) Include error in Apdex calculations
	// Include error in Apdex calculations
	// +kubebuilder:validation:Optional
	ImpactApdex *bool `json:"impactApdex,omitempty" tf:"impact_apdex,omitempty"`
}

type ErrorRulesErrorRuleInitParameters struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	CaptureSettings []ErrorRuleCaptureSettingsInitParameters `json:"captureSettings,omitempty" tf:"capture_settings,omitempty"`

	// (Boolean) Match by errors that have CSP violations
	// Match by errors that have CSP violations
	ConsiderCspViolations *bool `json:"considerCspViolations,omitempty" tf:"consider_csp_violations,omitempty"`

	// (Boolean) Match by errors that have failed image requests
	// Match by errors that have failed image requests
	ConsiderFailedImages *bool `json:"considerFailedImages,omitempty" tf:"consider_failed_images,omitempty"`

	// (String) Match by error code
	// Match by error code
	ErrorCodes *string `json:"errorCodes,omitempty" tf:"error_codes,omitempty"`

	// (Block List, Min: 1, Max: 1) Filter settings (see below for nested schema)
	// Filter settings
	FilterSettings []FilterSettingsInitParameters `json:"filterSettings,omitempty" tf:"filter_settings,omitempty"`
}

type ErrorRulesErrorRuleObservation struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	CaptureSettings []ErrorRuleCaptureSettingsObservation `json:"captureSettings,omitempty" tf:"capture_settings,omitempty"`

	// (Boolean) Match by errors that have CSP violations
	// Match by errors that have CSP violations
	ConsiderCspViolations *bool `json:"considerCspViolations,omitempty" tf:"consider_csp_violations,omitempty"`

	// (Boolean) Match by errors that have failed image requests
	// Match by errors that have failed image requests
	ConsiderFailedImages *bool `json:"considerFailedImages,omitempty" tf:"consider_failed_images,omitempty"`

	// (String) Match by error code
	// Match by error code
	ErrorCodes *string `json:"errorCodes,omitempty" tf:"error_codes,omitempty"`

	// (Block List, Min: 1, Max: 1) Filter settings (see below for nested schema)
	// Filter settings
	FilterSettings []FilterSettingsObservation `json:"filterSettings,omitempty" tf:"filter_settings,omitempty"`
}

type ErrorRulesErrorRuleParameters struct {

	// (Block List, Min: 1, Max: 1) Capture settings (see below for nested schema)
	// Capture settings
	// +kubebuilder:validation:Optional
	CaptureSettings []ErrorRuleCaptureSettingsParameters `json:"captureSettings" tf:"capture_settings,omitempty"`

	// (Boolean) Match by errors that have CSP violations
	// Match by errors that have CSP violations
	// +kubebuilder:validation:Optional
	ConsiderCspViolations *bool `json:"considerCspViolations" tf:"consider_csp_violations,omitempty"`

	// (Boolean) Match by errors that have failed image requests
	// Match by errors that have failed image requests
	// +kubebuilder:validation:Optional
	ConsiderFailedImages *bool `json:"considerFailedImages" tf:"consider_failed_images,omitempty"`

	// (String) Match by error code
	// Match by error code
	// +kubebuilder:validation:Optional
	ErrorCodes *string `json:"errorCodes,omitempty" tf:"error_codes,omitempty"`

	// (Block List, Min: 1, Max: 1) Filter settings (see below for nested schema)
	// Filter settings
	// +kubebuilder:validation:Optional
	FilterSettings []FilterSettingsParameters `json:"filterSettings" tf:"filter_settings,omitempty"`
}

type FilterSettingsInitParameters struct {

	// (String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) no documentation available
	// no documentation available
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type FilterSettingsObservation struct {

	// (String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) no documentation available
	// no documentation available
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type FilterSettingsParameters struct {

	// (String) Possible Values: BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS
	// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type WebAppRequestErrorsErrorRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	ErrorRule []ErrorRulesErrorRuleInitParameters `json:"errorRule,omitempty" tf:"error_rule,omitempty"`
}

type WebAppRequestErrorsErrorRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	ErrorRule []ErrorRulesErrorRuleObservation `json:"errorRule,omitempty" tf:"error_rule,omitempty"`
}

type WebAppRequestErrorsErrorRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ErrorRule []ErrorRulesErrorRuleParameters `json:"errorRule" tf:"error_rule,omitempty"`
}

type WebAppRequestErrorsInitParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	ErrorRules []WebAppRequestErrorsErrorRulesInitParameters `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation *bool `json:"ignoreRequestErrorsInApdexCalculation,omitempty" tf:"ignore_request_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type WebAppRequestErrorsObservation struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	ErrorRules []WebAppRequestErrorsErrorRulesObservation `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation *bool `json:"ignoreRequestErrorsInApdexCalculation,omitempty" tf:"ignore_request_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type WebAppRequestErrorsParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_error_rules) (see below for nested schema)
	// (Field has overlap with `dynatrace_application_error_rules`)
	// +kubebuilder:validation:Optional
	ErrorRules []WebAppRequestErrorsErrorRulesParameters `json:"errorRules,omitempty" tf:"error_rules,omitempty"`

	// (Boolean) (Field has overlap with dynatrace_application_error_rules) This setting overrides Apdex settings for individual rules listed below
	// (Field has overlap with `dynatrace_application_error_rules`) This setting overrides Apdex settings for individual rules listed below
	// +kubebuilder:validation:Optional
	IgnoreRequestErrorsInApdexCalculation *bool `json:"ignoreRequestErrorsInApdexCalculation,omitempty" tf:"ignore_request_errors_in_apdex_calculation,omitempty"`

	// (String) The scope of this setting (APPLICATION)
	// The scope of this setting (APPLICATION)
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

// WebAppRequestErrorsSpec defines the desired state of WebAppRequestErrors
type WebAppRequestErrorsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppRequestErrorsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppRequestErrorsInitParameters `json:"initProvider,omitempty"`
}

// WebAppRequestErrorsStatus defines the observed state of WebAppRequestErrors.
type WebAppRequestErrorsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppRequestErrorsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppRequestErrors is the Schema for the WebAppRequestErrorss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppRequestErrors struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ignoreRequestErrorsInApdexCalculation) || (has(self.initProvider) && has(self.initProvider.ignoreRequestErrorsInApdexCalculation))",message="spec.forProvider.ignoreRequestErrorsInApdexCalculation is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	Spec   WebAppRequestErrorsSpec   `json:"spec"`
	Status WebAppRequestErrorsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppRequestErrorsList contains a list of WebAppRequestErrorss
type WebAppRequestErrorsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppRequestErrors `json:"items"`
}

// Repository type metadata.
var (
	WebAppRequestErrors_Kind             = "WebAppRequestErrors"
	WebAppRequestErrors_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppRequestErrors_Kind}.String()
	WebAppRequestErrors_KindAPIVersion   = WebAppRequestErrors_Kind + "." + CRDGroupVersion.String()
	WebAppRequestErrors_GroupVersionKind = CRDGroupVersion.WithKind(WebAppRequestErrors_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppRequestErrors{}, &WebAppRequestErrorsList{})
}
