// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WebAppCustomInjectionInitParameters struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) no documentation available
	// no documentation available
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: AllPages, Contains, Ends, Equals, Starts
	// Possible Values: `AllPages`, `Contains`, `Ends`, `Equals`, `Starts`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: AfterSpecificHtml, Automatic, BeforeSpecificHtml, DoNotInject
	// Possible Values: `AfterSpecificHtml`, `Automatic`, `BeforeSpecificHtml`, `DoNotInject`
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) URL pattern
	// URL pattern
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

type WebAppCustomInjectionObservation struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) no documentation available
	// no documentation available
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: AllPages, Contains, Ends, Equals, Starts
	// Possible Values: `AllPages`, `Contains`, `Ends`, `Equals`, `Starts`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: AfterSpecificHtml, Automatic, BeforeSpecificHtml, DoNotInject
	// Possible Values: `AfterSpecificHtml`, `Automatic`, `BeforeSpecificHtml`, `DoNotInject`
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) URL pattern
	// URL pattern
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

type WebAppCustomInjectionParameters struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	HTMLPattern *string `json:"htmlPattern,omitempty" tf:"html_pattern,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) Possible Values: AllPages, Contains, Ends, Equals, Starts
	// Possible Values: `AllPages`, `Contains`, `Ends`, `Equals`, `Starts`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Possible Values: AfterSpecificHtml, Automatic, BeforeSpecificHtml, DoNotInject
	// Possible Values: `AfterSpecificHtml`, `Automatic`, `BeforeSpecificHtml`, `DoNotInject`
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) URL pattern
	// URL pattern
	// +kubebuilder:validation:Optional
	URLPattern *string `json:"urlPattern,omitempty" tf:"url_pattern,omitempty"`
}

// WebAppCustomInjectionSpec defines the desired state of WebAppCustomInjection
type WebAppCustomInjectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppCustomInjectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppCustomInjectionInitParameters `json:"initProvider,omitempty"`
}

// WebAppCustomInjectionStatus defines the observed state of WebAppCustomInjection.
type WebAppCustomInjectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppCustomInjectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppCustomInjection is the Schema for the WebAppCustomInjections API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppCustomInjection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.applicationId) || (has(self.initProvider) && has(self.initProvider.applicationId))",message="spec.forProvider.applicationId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.operator) || (has(self.initProvider) && has(self.initProvider.operator))",message="spec.forProvider.operator is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))",message="spec.forProvider.rule is a required parameter"
	Spec   WebAppCustomInjectionSpec   `json:"spec"`
	Status WebAppCustomInjectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppCustomInjectionList contains a list of WebAppCustomInjections
type WebAppCustomInjectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppCustomInjection `json:"items"`
}

// Repository type metadata.
var (
	WebAppCustomInjection_Kind             = "WebAppCustomInjection"
	WebAppCustomInjection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppCustomInjection_Kind}.String()
	WebAppCustomInjection_KindAPIVersion   = WebAppCustomInjection_Kind + "." + CRDGroupVersion.String()
	WebAppCustomInjection_GroupVersionKind = CRDGroupVersion.WithKind(WebAppCustomInjection_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppCustomInjection{}, &WebAppCustomInjectionList{})
}
