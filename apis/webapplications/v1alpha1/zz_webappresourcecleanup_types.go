// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WebAppResourceCleanupInitParameters struct {

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) For example: Mask journeyId
	// For example: *Mask journeyId*
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ?\d+(.*)
	// For example: `(.*)(journeyId=)-?\d+(.*)`
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) For example: $1$2\*$3
	// For example: `$1$2\*$3`
	ReplaceWith *string `json:"replaceWith,omitempty" tf:"replace_with,omitempty"`
}

type WebAppResourceCleanupObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) For example: Mask journeyId
	// For example: *Mask journeyId*
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ?\d+(.*)
	// For example: `(.*)(journeyId=)-?\d+(.*)`
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) For example: $1$2\*$3
	// For example: `$1$2\*$3`
	ReplaceWith *string `json:"replaceWith,omitempty" tf:"replace_with,omitempty"`
}

type WebAppResourceCleanupParameters struct {

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) For example: Mask journeyId
	// For example: *Mask journeyId*
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ?\d+(.*)
	// For example: `(.*)(journeyId=)-?\d+(.*)`
	// +kubebuilder:validation:Optional
	RegularExpression *string `json:"regularExpression,omitempty" tf:"regular_expression,omitempty"`

	// (String) For example: $1$2\*$3
	// For example: `$1$2\*$3`
	// +kubebuilder:validation:Optional
	ReplaceWith *string `json:"replaceWith,omitempty" tf:"replace_with,omitempty"`
}

// WebAppResourceCleanupSpec defines the desired state of WebAppResourceCleanup
type WebAppResourceCleanupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppResourceCleanupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppResourceCleanupInitParameters `json:"initProvider,omitempty"`
}

// WebAppResourceCleanupStatus defines the observed state of WebAppResourceCleanup.
type WebAppResourceCleanupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppResourceCleanupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppResourceCleanup is the Schema for the WebAppResourceCleanups API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppResourceCleanup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.regularExpression) || (has(self.initProvider) && has(self.initProvider.regularExpression))",message="spec.forProvider.regularExpression is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.replaceWith) || (has(self.initProvider) && has(self.initProvider.replaceWith))",message="spec.forProvider.replaceWith is a required parameter"
	Spec   WebAppResourceCleanupSpec   `json:"spec"`
	Status WebAppResourceCleanupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppResourceCleanupList contains a list of WebAppResourceCleanups
type WebAppResourceCleanupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppResourceCleanup `json:"items"`
}

// Repository type metadata.
var (
	WebAppResourceCleanup_Kind             = "WebAppResourceCleanup"
	WebAppResourceCleanup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppResourceCleanup_Kind}.String()
	WebAppResourceCleanup_KindAPIVersion   = WebAppResourceCleanup_Kind + "." + CRDGroupVersion.String()
	WebAppResourceCleanup_GroupVersionKind = CRDGroupVersion.WithKind(WebAppResourceCleanup_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppResourceCleanup{}, &WebAppResourceCleanupList{})
}
