// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LogSensitiveDataMaskingInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Masking []MaskingInitParameters `json:"masking,omitempty" tf:"masking,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Matchers []MatchersInitParameters `json:"matchers,omitempty" tf:"matchers,omitempty"`

	// (String) Name
	// Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LogSensitiveDataMaskingObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Masking []MaskingObservation `json:"masking,omitempty" tf:"masking,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	Matchers []MatchersObservation `json:"matchers,omitempty" tf:"matchers,omitempty"`

	// (String) Name
	// Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LogSensitiveDataMaskingParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	Masking []MaskingParameters `json:"masking,omitempty" tf:"masking,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	Matchers []MatchersParameters `json:"matchers,omitempty" tf:"matchers,omitempty"`

	// (String) Name
	// Name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	// The scope of this setting (HOST-########, HOST_GROUP-########). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type MaskingInitParameters struct {

	// (String) Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	// Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`

	// (String) The string to replace the masked expression with. Irrelevant if type is SHA1.
	// The string to replace the masked expression with. Irrelevant if `type` is `SHA1`.
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) Possible Values: SHA1, STRING
	// Possible Values: `SHA1`, `STRING`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaskingObservation struct {

	// (String) Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	// Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	Expression *string `json:"expression,omitempty" tf:"expression,omitempty"`

	// (String) The string to replace the masked expression with. Irrelevant if type is SHA1.
	// The string to replace the masked expression with. Irrelevant if `type` is `SHA1`.
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) Possible Values: SHA1, STRING
	// Possible Values: `SHA1`, `STRING`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MaskingParameters struct {

	// (String) Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	// Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
	// +kubebuilder:validation:Optional
	Expression *string `json:"expression" tf:"expression,omitempty"`

	// (String) The string to replace the masked expression with. Irrelevant if type is SHA1.
	// The string to replace the masked expression with. Irrelevant if `type` is `SHA1`.
	// +kubebuilder:validation:Optional
	Replacement *string `json:"replacement,omitempty" tf:"replacement,omitempty"`

	// (String) Possible Values: SHA1, STRING
	// Possible Values: `SHA1`, `STRING`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatcherInitParameters struct {

	// (String) Possible Values: container.name, dt.entity.container_group, dt.entity.process_group, k8s.container.name, k8s.deployment.name, k8s.namespace.name, log.source, process.technology and host.tag
	// Possible Values: `container.name`, `dt.entity.container_group`, `dt.entity.process_group`, `k8s.container.name`, `k8s.deployment.name`, `k8s.namespace.name`, `log.source`, `process.technology` and `host.tag`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Possible Values: MATCHES
	// Possible Values: `MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (Set of String) no documentation available
	// no documentation available
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MatcherObservation struct {

	// (String) Possible Values: container.name, dt.entity.container_group, dt.entity.process_group, k8s.container.name, k8s.deployment.name, k8s.namespace.name, log.source, process.technology and host.tag
	// Possible Values: `container.name`, `dt.entity.container_group`, `dt.entity.process_group`, `k8s.container.name`, `k8s.deployment.name`, `k8s.namespace.name`, `log.source`, `process.technology` and `host.tag`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Possible Values: MATCHES
	// Possible Values: `MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (Set of String) no documentation available
	// no documentation available
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MatcherParameters struct {

	// (String) Possible Values: container.name, dt.entity.container_group, dt.entity.process_group, k8s.container.name, k8s.deployment.name, k8s.namespace.name, log.source, process.technology and host.tag
	// Possible Values: `container.name`, `dt.entity.container_group`, `dt.entity.process_group`, `k8s.container.name`, `k8s.deployment.name`, `k8s.namespace.name`, `log.source`, `process.technology` and `host.tag`
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// (String) Possible Values: MATCHES
	// Possible Values: `MATCHES`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (Set of String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values" tf:"values,omitempty"`
}

type MatchersInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Matcher []MatcherInitParameters `json:"matcher,omitempty" tf:"matcher,omitempty"`
}

type MatchersObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	Matcher []MatcherObservation `json:"matcher,omitempty" tf:"matcher,omitempty"`
}

type MatchersParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Matcher []MatcherParameters `json:"matcher" tf:"matcher,omitempty"`
}

// LogSensitiveDataMaskingSpec defines the desired state of LogSensitiveDataMasking
type LogSensitiveDataMaskingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogSensitiveDataMaskingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LogSensitiveDataMaskingInitParameters `json:"initProvider,omitempty"`
}

// LogSensitiveDataMaskingStatus defines the observed state of LogSensitiveDataMasking.
type LogSensitiveDataMaskingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogSensitiveDataMaskingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LogSensitiveDataMasking is the Schema for the LogSensitiveDataMaskings API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type LogSensitiveDataMasking struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.masking) || (has(self.initProvider) && has(self.initProvider.masking))",message="spec.forProvider.masking is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   LogSensitiveDataMaskingSpec   `json:"spec"`
	Status LogSensitiveDataMaskingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogSensitiveDataMaskingList contains a list of LogSensitiveDataMaskings
type LogSensitiveDataMaskingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LogSensitiveDataMasking `json:"items"`
}

// Repository type metadata.
var (
	LogSensitiveDataMasking_Kind             = "LogSensitiveDataMasking"
	LogSensitiveDataMasking_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LogSensitiveDataMasking_Kind}.String()
	LogSensitiveDataMasking_KindAPIVersion   = LogSensitiveDataMasking_Kind + "." + CRDGroupVersion.String()
	LogSensitiveDataMasking_GroupVersionKind = CRDGroupVersion.WithKind(LogSensitiveDataMasking_Kind)
)

func init() {
	SchemeBuilder.Register(&LogSensitiveDataMasking{}, &LogSensitiveDataMaskingList{})
}
