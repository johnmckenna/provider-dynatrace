// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LogSecurityContextInitParameters struct {

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	SecurityContextRule []SecurityContextRuleInitParameters `json:"securityContextRule,omitempty" tf:"security_context_rule,omitempty"`
}

type LogSecurityContextObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	SecurityContextRule []SecurityContextRuleObservation `json:"securityContextRule,omitempty" tf:"security_context_rule,omitempty"`
}

type LogSecurityContextParameters struct {

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	SecurityContextRule []SecurityContextRuleParameters `json:"securityContextRule,omitempty" tf:"security_context_rule,omitempty"`
}

type SecurityContextRuleInitParameters struct {

	// (String) Matcher
	// Matcher
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// (String) Literal value to be set
	// Literal value to be set
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (String) Possible Values: FIELD, LITERAL
	// Possible Values: `FIELD`, `LITERAL`
	ValueSource *string `json:"valueSource,omitempty" tf:"value_source,omitempty"`

	// (String) Name of field used to copy value
	// Name of field used to copy value
	ValueSourceField *string `json:"valueSourceField,omitempty" tf:"value_source_field,omitempty"`
}

type SecurityContextRuleObservation struct {

	// (String) Matcher
	// Matcher
	Query *string `json:"query,omitempty" tf:"query,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// (String) Literal value to be set
	// Literal value to be set
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (String) Possible Values: FIELD, LITERAL
	// Possible Values: `FIELD`, `LITERAL`
	ValueSource *string `json:"valueSource,omitempty" tf:"value_source,omitempty"`

	// (String) Name of field used to copy value
	// Name of field used to copy value
	ValueSourceField *string `json:"valueSourceField,omitempty" tf:"value_source_field,omitempty"`
}

type SecurityContextRuleParameters struct {

	// (String) Matcher
	// Matcher
	// +kubebuilder:validation:Optional
	Query *string `json:"query" tf:"query,omitempty"`

	// (String) Rule name
	// Rule name
	// +kubebuilder:validation:Optional
	RuleName *string `json:"ruleName" tf:"rule_name,omitempty"`

	// (String) Literal value to be set
	// Literal value to be set
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (String) Possible Values: FIELD, LITERAL
	// Possible Values: `FIELD`, `LITERAL`
	// +kubebuilder:validation:Optional
	ValueSource *string `json:"valueSource" tf:"value_source,omitempty"`

	// (String) Name of field used to copy value
	// Name of field used to copy value
	// +kubebuilder:validation:Optional
	ValueSourceField *string `json:"valueSourceField,omitempty" tf:"value_source_field,omitempty"`
}

// LogSecurityContextSpec defines the desired state of LogSecurityContext
type LogSecurityContextSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogSecurityContextParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LogSecurityContextInitParameters `json:"initProvider,omitempty"`
}

// LogSecurityContextStatus defines the observed state of LogSecurityContext.
type LogSecurityContextStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogSecurityContextObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// LogSecurityContext is the Schema for the LogSecurityContexts API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type LogSecurityContext struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.securityContextRule) || (has(self.initProvider) && has(self.initProvider.securityContextRule))",message="spec.forProvider.securityContextRule is a required parameter"
	Spec   LogSecurityContextSpec   `json:"spec"`
	Status LogSecurityContextStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogSecurityContextList contains a list of LogSecurityContexts
type LogSecurityContextList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LogSecurityContext `json:"items"`
}

// Repository type metadata.
var (
	LogSecurityContext_Kind             = "LogSecurityContext"
	LogSecurityContext_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LogSecurityContext_Kind}.String()
	LogSecurityContext_KindAPIVersion   = LogSecurityContext_Kind + "." + CRDGroupVersion.String()
	LogSecurityContext_GroupVersionKind = CRDGroupVersion.WithKind(LogSecurityContext_Kind)
)

func init() {
	SchemeBuilder.Register(&LogSecurityContext{}, &LogSecurityContextList{})
}
