// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomDeviceInitParameters struct {

	// (String) The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	// The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	ConfigURL *string `json:"configUrl,omitempty" tf:"config_url,omitempty"`

	// (String) The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	// The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	CustomDeviceID *string `json:"customDeviceId,omitempty" tf:"custom_device_id,omitempty"`

	// (Set of String) The list of DNS names related to the custom device.
	// The list of DNS names related to the custom device.
	// +listType=set
	DNSNames []*string `json:"dnsNames,omitempty" tf:"dns_names,omitempty"`

	// (String) The name of the custom device, displayed in the UI.
	// The name of the custom device, displayed in the UI.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	// The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	FaviconURL *string `json:"faviconUrl,omitempty" tf:"favicon_url,omitempty"`

	// (String) User defined group of entity. Changing the group requires a new custom device to be created.
	// User defined group of entity. Changing the group requires a new custom device to be created.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Set of String) The list of IP addresses that belong to the custom device.
	// The list of IP addresses that belong to the custom device.
	// +listType=set
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// (Set of Number) The list of ports the custom devices listens to.
	// The list of ports the custom devices listens to.
	// +listType=set
	ListenPorts []*float64 `json:"listenPorts,omitempty" tf:"listen_ports,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	Props *string `json:"props,omitempty" tf:"props,omitempty"`

	// (String) The technology type definition of the custom device.
	// The technology type definition of the custom device.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Boolean) If true the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	// If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	UIBased *bool `json:"uiBased,omitempty" tf:"ui_based,omitempty"`
}

type CustomDeviceObservation struct {

	// (String) The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	// The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	ConfigURL *string `json:"configUrl,omitempty" tf:"config_url,omitempty"`

	// (String) The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	// The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	CustomDeviceID *string `json:"customDeviceId,omitempty" tf:"custom_device_id,omitempty"`

	// (Set of String) The list of DNS names related to the custom device.
	// The list of DNS names related to the custom device.
	// +listType=set
	DNSNames []*string `json:"dnsNames,omitempty" tf:"dns_names,omitempty"`

	// (String) The name of the custom device, displayed in the UI.
	// The name of the custom device, displayed in the UI.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The Dynatrace EntityID of this resource. If you need to refer to this custom device within other resources you want to use this ID
	// The Dynatrace EntityID of this resource. If you need to refer to this custom device within other resources you want to use this ID
	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	// (String) The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	// The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	FaviconURL *string `json:"faviconUrl,omitempty" tf:"favicon_url,omitempty"`

	// (String) User defined group of entity. Changing the group requires a new custom device to be created.
	// User defined group of entity. Changing the group requires a new custom device to be created.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Set of String) The list of IP addresses that belong to the custom device.
	// The list of IP addresses that belong to the custom device.
	// +listType=set
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// (Set of Number) The list of ports the custom devices listens to.
	// The list of ports the custom devices listens to.
	// +listType=set
	ListenPorts []*float64 `json:"listenPorts,omitempty" tf:"listen_ports,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	Props *string `json:"props,omitempty" tf:"props,omitempty"`

	// (String) The technology type definition of the custom device.
	// The technology type definition of the custom device.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Boolean) If true the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	// If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	UIBased *bool `json:"uiBased,omitempty" tf:"ui_based,omitempty"`
}

type CustomDeviceParameters struct {

	// (String) The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	// The URL of a configuration web page for the custom device, such as a login page for a firewall or router.
	// +kubebuilder:validation:Optional
	ConfigURL *string `json:"configUrl,omitempty" tf:"config_url,omitempty"`

	// (String) The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	// The unique name of the custom device. If you use the ID of an existing device, the respective parameters will be updated
	// +kubebuilder:validation:Optional
	CustomDeviceID *string `json:"customDeviceId,omitempty" tf:"custom_device_id,omitempty"`

	// (Set of String) The list of DNS names related to the custom device.
	// The list of DNS names related to the custom device.
	// +kubebuilder:validation:Optional
	// +listType=set
	DNSNames []*string `json:"dnsNames,omitempty" tf:"dns_names,omitempty"`

	// (String) The name of the custom device, displayed in the UI.
	// The name of the custom device, displayed in the UI.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (String) The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	// The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
	// +kubebuilder:validation:Optional
	FaviconURL *string `json:"faviconUrl,omitempty" tf:"favicon_url,omitempty"`

	// (String) User defined group of entity. Changing the group requires a new custom device to be created.
	// User defined group of entity. Changing the group requires a new custom device to be created.
	// +kubebuilder:validation:Optional
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Set of String) The list of IP addresses that belong to the custom device.
	// The list of IP addresses that belong to the custom device.
	// +kubebuilder:validation:Optional
	// +listType=set
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// (Set of Number) The list of ports the custom devices listens to.
	// The list of ports the custom devices listens to.
	// +kubebuilder:validation:Optional
	// +listType=set
	ListenPorts []*float64 `json:"listenPorts,omitempty" tf:"listen_ports,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Properties map[string]*string `json:"properties,omitempty" tf:"properties,omitempty"`

	// value pair properties that will be shown beneath the infographics of your custom device.
	// The list of key-value pair properties that will be shown beneath the infographics of your custom device.
	// +kubebuilder:validation:Optional
	Props *string `json:"props,omitempty" tf:"props,omitempty"`

	// (String) The technology type definition of the custom device.
	// The technology type definition of the custom device.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Boolean) If true the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	// If `true` the custom device will be handled as if it was created via UI. It will be refreshed automatically and won't age out. This attribute is taken into consideration when creating the custom device. Changing it afterwards won't have an effect.
	// +kubebuilder:validation:Optional
	UIBased *bool `json:"uiBased,omitempty" tf:"ui_based,omitempty"`
}

// CustomDeviceSpec defines the desired state of CustomDevice
type CustomDeviceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomDeviceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomDeviceInitParameters `json:"initProvider,omitempty"`
}

// CustomDeviceStatus defines the observed state of CustomDevice.
type CustomDeviceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomDeviceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomDevice is the Schema for the CustomDevices API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CustomDevice struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	Spec   CustomDeviceSpec   `json:"spec"`
	Status CustomDeviceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomDeviceList contains a list of CustomDevices
type CustomDeviceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomDevice `json:"items"`
}

// Repository type metadata.
var (
	CustomDevice_Kind             = "CustomDevice"
	CustomDevice_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomDevice_Kind}.String()
	CustomDevice_KindAPIVersion   = CustomDevice_Kind + "." + CRDGroupVersion.String()
	CustomDevice_GroupVersionKind = CRDGroupVersion.WithKind(CustomDevice_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomDevice{}, &CustomDeviceList{})
}
