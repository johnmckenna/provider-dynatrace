//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTracking) DeepCopyInto(out *IssueTracking) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTracking.
func (in *IssueTracking) DeepCopy() *IssueTracking {
	if in == nil {
		return nil
	}
	out := new(IssueTracking)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IssueTracking) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingInitParameters) DeepCopyInto(out *IssueTrackingInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Issuelabel != nil {
		in, out := &in.Issuelabel, &out.Issuelabel
		*out = new(string)
		**out = **in
	}
	if in.Issuequery != nil {
		in, out := &in.Issuequery, &out.Issuequery
		*out = new(string)
		**out = **in
	}
	if in.Issuetheme != nil {
		in, out := &in.Issuetheme, &out.Issuetheme
		*out = new(string)
		**out = **in
	}
	if in.Issuetrackersystem != nil {
		in, out := &in.Issuetrackersystem, &out.Issuetrackersystem
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingInitParameters.
func (in *IssueTrackingInitParameters) DeepCopy() *IssueTrackingInitParameters {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingList) DeepCopyInto(out *IssueTrackingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IssueTracking, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingList.
func (in *IssueTrackingList) DeepCopy() *IssueTrackingList {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IssueTrackingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingObservation) DeepCopyInto(out *IssueTrackingObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Issuelabel != nil {
		in, out := &in.Issuelabel, &out.Issuelabel
		*out = new(string)
		**out = **in
	}
	if in.Issuequery != nil {
		in, out := &in.Issuequery, &out.Issuequery
		*out = new(string)
		**out = **in
	}
	if in.Issuetheme != nil {
		in, out := &in.Issuetheme, &out.Issuetheme
		*out = new(string)
		**out = **in
	}
	if in.Issuetrackersystem != nil {
		in, out := &in.Issuetrackersystem, &out.Issuetrackersystem
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingObservation.
func (in *IssueTrackingObservation) DeepCopy() *IssueTrackingObservation {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingParameters) DeepCopyInto(out *IssueTrackingParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InsertAfter != nil {
		in, out := &in.InsertAfter, &out.InsertAfter
		*out = new(string)
		**out = **in
	}
	if in.Issuelabel != nil {
		in, out := &in.Issuelabel, &out.Issuelabel
		*out = new(string)
		**out = **in
	}
	if in.Issuequery != nil {
		in, out := &in.Issuequery, &out.Issuequery
		*out = new(string)
		**out = **in
	}
	if in.Issuetheme != nil {
		in, out := &in.Issuetheme, &out.Issuetheme
		*out = new(string)
		**out = **in
	}
	if in.Issuetrackersystem != nil {
		in, out := &in.Issuetrackersystem, &out.Issuetrackersystem
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingParameters.
func (in *IssueTrackingParameters) DeepCopy() *IssueTrackingParameters {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingSpec) DeepCopyInto(out *IssueTrackingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingSpec.
func (in *IssueTrackingSpec) DeepCopy() *IssueTrackingSpec {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IssueTrackingStatus) DeepCopyInto(out *IssueTrackingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IssueTrackingStatus.
func (in *IssueTrackingStatus) DeepCopy() *IssueTrackingStatus {
	if in == nil {
		return nil
	}
	out := new(IssueTrackingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironments) DeepCopyInto(out *RemoteEnvironments) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironments.
func (in *RemoteEnvironments) DeepCopy() *RemoteEnvironments {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteEnvironments) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsInitParameters) DeepCopyInto(out *RemoteEnvironmentsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkScope != nil {
		in, out := &in.NetworkScope, &out.NetworkScope
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsInitParameters.
func (in *RemoteEnvironmentsInitParameters) DeepCopy() *RemoteEnvironmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsList) DeepCopyInto(out *RemoteEnvironmentsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RemoteEnvironments, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsList.
func (in *RemoteEnvironmentsList) DeepCopy() *RemoteEnvironmentsList {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteEnvironmentsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsObservation) DeepCopyInto(out *RemoteEnvironmentsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkScope != nil {
		in, out := &in.NetworkScope, &out.NetworkScope
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsObservation.
func (in *RemoteEnvironmentsObservation) DeepCopy() *RemoteEnvironmentsObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsParameters) DeepCopyInto(out *RemoteEnvironmentsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkScope != nil {
		in, out := &in.NetworkScope, &out.NetworkScope
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsParameters.
func (in *RemoteEnvironmentsParameters) DeepCopy() *RemoteEnvironmentsParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsSpec) DeepCopyInto(out *RemoteEnvironmentsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsSpec.
func (in *RemoteEnvironmentsSpec) DeepCopy() *RemoteEnvironmentsSpec {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteEnvironmentsStatus) DeepCopyInto(out *RemoteEnvironmentsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteEnvironmentsStatus.
func (in *RemoteEnvironmentsStatus) DeepCopy() *RemoteEnvironmentsStatus {
	if in == nil {
		return nil
	}
	out := new(RemoteEnvironmentsStatus)
	in.DeepCopyInto(out)
	return out
}
