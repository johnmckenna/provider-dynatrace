// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AllowListRuleInitParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type AllowListRuleObservation struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type AllowListRuleParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// +kubebuilder:validation:Optional
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// +kubebuilder:validation:Optional
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`
}

type BlockListRuleInitParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type BlockListRuleObservation struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type BlockListRuleParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// +kubebuilder:validation:Optional
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// +kubebuilder:validation:Optional
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// +kubebuilder:validation:Optional
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`
}

type MaskingPresetsInitParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingAllowListRules []PlaybackMaskingAllowListRulesInitParameters `json:"playbackMaskingAllowListRules,omitempty" tf:"playback_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingBlockListRules []PlaybackMaskingBlockListRulesInitParameters `json:"playbackMaskingBlockListRules,omitempty" tf:"playback_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_ALL, MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
	PlaybackMaskingPreset *string `json:"playbackMaskingPreset,omitempty" tf:"playback_masking_preset,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingAllowListRules []RecordingMaskingAllowListRulesInitParameters `json:"recordingMaskingAllowListRules,omitempty" tf:"recording_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingBlockListRules []RecordingMaskingBlockListRulesInitParameters `json:"recordingMaskingBlockListRules,omitempty" tf:"recording_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST, MASK_ALL
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
	RecordingMaskingPreset *string `json:"recordingMaskingPreset,omitempty" tf:"recording_masking_preset,omitempty"`
}

type MaskingPresetsObservation struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingAllowListRules []PlaybackMaskingAllowListRulesObservation `json:"playbackMaskingAllowListRules,omitempty" tf:"playback_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingBlockListRules []PlaybackMaskingBlockListRulesObservation `json:"playbackMaskingBlockListRules,omitempty" tf:"playback_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_ALL, MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
	PlaybackMaskingPreset *string `json:"playbackMaskingPreset,omitempty" tf:"playback_masking_preset,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingAllowListRules []RecordingMaskingAllowListRulesObservation `json:"recordingMaskingAllowListRules,omitempty" tf:"recording_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingBlockListRules []RecordingMaskingBlockListRulesObservation `json:"recordingMaskingBlockListRules,omitempty" tf:"recording_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST, MASK_ALL
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
	RecordingMaskingPreset *string `json:"recordingMaskingPreset,omitempty" tf:"recording_masking_preset,omitempty"`
}

type MaskingPresetsParameters struct {

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	// +kubebuilder:validation:Optional
	PlaybackMaskingAllowListRules []PlaybackMaskingAllowListRulesParameters `json:"playbackMaskingAllowListRules,omitempty" tf:"playback_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	// +kubebuilder:validation:Optional
	PlaybackMaskingBlockListRules []PlaybackMaskingBlockListRulesParameters `json:"playbackMaskingBlockListRules,omitempty" tf:"playback_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_ALL, MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
	// +kubebuilder:validation:Optional
	PlaybackMaskingPreset *string `json:"playbackMaskingPreset" tf:"playback_masking_preset,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	// +kubebuilder:validation:Optional
	RecordingMaskingAllowListRules []RecordingMaskingAllowListRulesParameters `json:"recordingMaskingAllowListRules,omitempty" tf:"recording_masking_allow_list_rules,omitempty"`

	// (Block List, Max: 1) (Field has overlap with dynatrace_application_data_privacy) The elements are defined by the CSS selector or attribute name. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) The elements are defined by the CSS selector or attribute name.
	// +kubebuilder:validation:Optional
	RecordingMaskingBlockListRules []RecordingMaskingBlockListRulesParameters `json:"recordingMaskingBlockListRules,omitempty" tf:"recording_masking_block_list_rules,omitempty"`

	// (String) (Field has overlap with dynatrace_application_data_privacy) Possible Values: MASK_USER_INPUT, ALLOW_LIST, BLOCK_LIST, MASK_ALL
	// (Field has overlap with `dynatrace_application_data_privacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
	// +kubebuilder:validation:Optional
	RecordingMaskingPreset *string `json:"recordingMaskingPreset" tf:"recording_masking_preset,omitempty"`
}

type PlaybackMaskingAllowListRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	AllowListRule []AllowListRuleInitParameters `json:"allowListRule,omitempty" tf:"allow_list_rule,omitempty"`
}

type PlaybackMaskingAllowListRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	AllowListRule []AllowListRuleObservation `json:"allowListRule,omitempty" tf:"allow_list_rule,omitempty"`
}

type PlaybackMaskingAllowListRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	AllowListRule []AllowListRuleParameters `json:"allowListRule" tf:"allow_list_rule,omitempty"`
}

type PlaybackMaskingBlockListRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	BlockListRule []BlockListRuleInitParameters `json:"blockListRule,omitempty" tf:"block_list_rule,omitempty"`
}

type PlaybackMaskingBlockListRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	BlockListRule []BlockListRuleObservation `json:"blockListRule,omitempty" tf:"block_list_rule,omitempty"`
}

type PlaybackMaskingBlockListRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	BlockListRule []BlockListRuleParameters `json:"blockListRule" tf:"block_list_rule,omitempty"`
}

type RecordingMaskingAllowListRulesAllowListRuleInitParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type RecordingMaskingAllowListRulesAllowListRuleObservation struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type RecordingMaskingAllowListRulesAllowListRuleParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// +kubebuilder:validation:Optional
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// +kubebuilder:validation:Optional
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`
}

type RecordingMaskingAllowListRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	AllowListRule []RecordingMaskingAllowListRulesAllowListRuleInitParameters `json:"allowListRule,omitempty" tf:"allow_list_rule,omitempty"`
}

type RecordingMaskingAllowListRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	AllowListRule []RecordingMaskingAllowListRulesAllowListRuleObservation `json:"allowListRule,omitempty" tf:"allow_list_rule,omitempty"`
}

type RecordingMaskingAllowListRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	AllowListRule []RecordingMaskingAllowListRulesAllowListRuleParameters `json:"allowListRule" tf:"allow_list_rule,omitempty"`
}

type RecordingMaskingBlockListRulesBlockListRuleInitParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type RecordingMaskingBlockListRulesBlockListRuleObservation struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target *string `json:"target,omitempty" tf:"target,omitempty"`
}

type RecordingMaskingBlockListRulesBlockListRuleParameters struct {

	// NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	// +kubebuilder:validation:Optional
	AttributeExpression *string `json:"attributeExpression,omitempty" tf:"attribute_expression,omitempty"`

	// (String) Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	// +kubebuilder:validation:Optional
	CSSExpression *string `json:"cssExpression,omitempty" tf:"css_expression,omitempty"`

	// (Boolean) Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	// +kubebuilder:validation:Optional
	HideUserInteraction *bool `json:"hideUserInteraction,omitempty" tf:"hide_user_interaction,omitempty"`

	// (String) Possible Values: ATTRIBUTE, ELEMENT
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	// +kubebuilder:validation:Optional
	Target *string `json:"target" tf:"target,omitempty"`
}

type RecordingMaskingBlockListRulesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	BlockListRule []RecordingMaskingBlockListRulesBlockListRuleInitParameters `json:"blockListRule,omitempty" tf:"block_list_rule,omitempty"`
}

type RecordingMaskingBlockListRulesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	BlockListRule []RecordingMaskingBlockListRulesBlockListRuleObservation `json:"blockListRule,omitempty" tf:"block_list_rule,omitempty"`
}

type RecordingMaskingBlockListRulesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	BlockListRule []RecordingMaskingBlockListRulesBlockListRuleParameters `json:"blockListRule" tf:"block_list_rule,omitempty"`
}

type SessionReplayWebPrivacyInitParameters struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// in mode is turned on, Session Replay is deactivated until explicitly activated via an API call.
	// (Field has overlap with `dynatrace_application_data_privacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode *bool `json:"enableOptInMode,omitempty" tf:"enable_opt_in_mode,omitempty"`

	// (Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_application_data_privacy) To protect your end users' privacy, select or customize predefined masking options that suit your content recording and playback requirements. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets []MaskingPresetsInitParameters `json:"maskingPresets,omitempty" tf:"masking_presets,omitempty"`

	// (Set of String) (Field has overlap with dynatrace_application_data_privacy) Exclude webpages or views from Session Replay recording by adding URL exclusion rules
	// (Field has overlap with `dynatrace_application_data_privacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	// +listType=set
	URLExclusionPatternList []*string `json:"urlExclusionPatternList,omitempty" tf:"url_exclusion_pattern_list,omitempty"`
}

type SessionReplayWebPrivacyObservation struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// in mode is turned on, Session Replay is deactivated until explicitly activated via an API call.
	// (Field has overlap with `dynatrace_application_data_privacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode *bool `json:"enableOptInMode,omitempty" tf:"enable_opt_in_mode,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_application_data_privacy) To protect your end users' privacy, select or customize predefined masking options that suit your content recording and playback requirements. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets []MaskingPresetsObservation `json:"maskingPresets,omitempty" tf:"masking_presets,omitempty"`

	// (Set of String) (Field has overlap with dynatrace_application_data_privacy) Exclude webpages or views from Session Replay recording by adding URL exclusion rules
	// (Field has overlap with `dynatrace_application_data_privacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	// +listType=set
	URLExclusionPatternList []*string `json:"urlExclusionPatternList,omitempty" tf:"url_exclusion_pattern_list,omitempty"`
}

type SessionReplayWebPrivacyParameters struct {

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// in mode is turned on, Session Replay is deactivated until explicitly activated via an API call.
	// (Field has overlap with `dynatrace_application_data_privacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	// +kubebuilder:validation:Optional
	EnableOptInMode *bool `json:"enableOptInMode,omitempty" tf:"enable_opt_in_mode,omitempty"`

	// (Block List, Min: 1, Max: 1) (Field has overlap with dynatrace_application_data_privacy) To protect your end users' privacy, select or customize predefined masking options that suit your content recording and playback requirements. (see below for nested schema)
	// (Field has overlap with `dynatrace_application_data_privacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	// +kubebuilder:validation:Optional
	MaskingPresets []MaskingPresetsParameters `json:"maskingPresets,omitempty" tf:"masking_presets,omitempty"`

	// (Set of String) (Field has overlap with dynatrace_application_data_privacy) Exclude webpages or views from Session Replay recording by adding URL exclusion rules
	// (Field has overlap with `dynatrace_application_data_privacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	// +kubebuilder:validation:Optional
	// +listType=set
	URLExclusionPatternList []*string `json:"urlExclusionPatternList,omitempty" tf:"url_exclusion_pattern_list,omitempty"`
}

// SessionReplayWebPrivacySpec defines the desired state of SessionReplayWebPrivacy
type SessionReplayWebPrivacySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SessionReplayWebPrivacyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SessionReplayWebPrivacyInitParameters `json:"initProvider,omitempty"`
}

// SessionReplayWebPrivacyStatus defines the observed state of SessionReplayWebPrivacy.
type SessionReplayWebPrivacyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SessionReplayWebPrivacyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SessionReplayWebPrivacy is the Schema for the SessionReplayWebPrivacys API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type SessionReplayWebPrivacy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enableOptInMode) || (has(self.initProvider) && has(self.initProvider.enableOptInMode))",message="spec.forProvider.enableOptInMode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maskingPresets) || (has(self.initProvider) && has(self.initProvider.maskingPresets))",message="spec.forProvider.maskingPresets is a required parameter"
	Spec   SessionReplayWebPrivacySpec   `json:"spec"`
	Status SessionReplayWebPrivacyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SessionReplayWebPrivacyList contains a list of SessionReplayWebPrivacys
type SessionReplayWebPrivacyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SessionReplayWebPrivacy `json:"items"`
}

// Repository type metadata.
var (
	SessionReplayWebPrivacy_Kind             = "SessionReplayWebPrivacy"
	SessionReplayWebPrivacy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SessionReplayWebPrivacy_Kind}.String()
	SessionReplayWebPrivacy_KindAPIVersion   = SessionReplayWebPrivacy_Kind + "." + CRDGroupVersion.String()
	SessionReplayWebPrivacy_GroupVersionKind = CRDGroupVersion.WithKind(SessionReplayWebPrivacy_Kind)
)

func init() {
	SchemeBuilder.Register(&SessionReplayWebPrivacy{}, &SessionReplayWebPrivacyList{})
}
