//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlerts) DeepCopyInto(out *ConnectivityAlerts) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlerts.
func (in *ConnectivityAlerts) DeepCopy() *ConnectivityAlerts {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlerts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectivityAlerts) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsInitParameters) DeepCopyInto(out *ConnectivityAlertsInitParameters) {
	*out = *in
	if in.ConnectivityAlerts != nil {
		in, out := &in.ConnectivityAlerts, &out.ConnectivityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.ProcessGroupID != nil {
		in, out := &in.ProcessGroupID, &out.ProcessGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsInitParameters.
func (in *ConnectivityAlertsInitParameters) DeepCopy() *ConnectivityAlertsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsList) DeepCopyInto(out *ConnectivityAlertsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConnectivityAlerts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsList.
func (in *ConnectivityAlertsList) DeepCopy() *ConnectivityAlertsList {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectivityAlertsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsObservation) DeepCopyInto(out *ConnectivityAlertsObservation) {
	*out = *in
	if in.ConnectivityAlerts != nil {
		in, out := &in.ConnectivityAlerts, &out.ConnectivityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProcessGroupID != nil {
		in, out := &in.ProcessGroupID, &out.ProcessGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsObservation.
func (in *ConnectivityAlertsObservation) DeepCopy() *ConnectivityAlertsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsParameters) DeepCopyInto(out *ConnectivityAlertsParameters) {
	*out = *in
	if in.ConnectivityAlerts != nil {
		in, out := &in.ConnectivityAlerts, &out.ConnectivityAlerts
		*out = new(bool)
		**out = **in
	}
	if in.ProcessGroupID != nil {
		in, out := &in.ProcessGroupID, &out.ProcessGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsParameters.
func (in *ConnectivityAlertsParameters) DeepCopy() *ConnectivityAlertsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsSpec) DeepCopyInto(out *ConnectivityAlertsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsSpec.
func (in *ConnectivityAlertsSpec) DeepCopy() *ConnectivityAlertsSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectivityAlertsStatus) DeepCopyInto(out *ConnectivityAlertsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectivityAlertsStatus.
func (in *ConnectivityAlertsStatus) DeepCopy() *ConnectivityAlertsStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectivityAlertsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceInitParameters) DeepCopyInto(out *DailyRecurrenceInitParameters) {
	*out = *in
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]RecurrenceRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]TimeWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceInitParameters.
func (in *DailyRecurrenceInitParameters) DeepCopy() *DailyRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceObservation) DeepCopyInto(out *DailyRecurrenceObservation) {
	*out = *in
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]RecurrenceRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]TimeWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceObservation.
func (in *DailyRecurrenceObservation) DeepCopy() *DailyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyRecurrenceParameters) DeepCopyInto(out *DailyRecurrenceParameters) {
	*out = *in
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]RecurrenceRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]TimeWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyRecurrenceParameters.
func (in *DailyRecurrenceParameters) DeepCopy() *DailyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(DailyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntityType != nil {
		in, out := &in.EntityType, &out.EntityType
		*out = new(string)
		**out = **in
	}
	if in.ManagementZones != nil {
		in, out := &in.ManagementZones, &out.ManagementZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntityType != nil {
		in, out := &in.EntityType, &out.EntityType
		*out = new(string)
		**out = **in
	}
	if in.ManagementZones != nil {
		in, out := &in.ManagementZones, &out.ManagementZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.EntityTags != nil {
		in, out := &in.EntityTags, &out.EntityTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntityType != nil {
		in, out := &in.EntityType, &out.EntityType
		*out = new(string)
		**out = **in
	}
	if in.ManagementZones != nil {
		in, out := &in.ManagementZones, &out.ManagementZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneralPropertiesInitParameters) DeepCopyInto(out *GeneralPropertiesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableSynthetic != nil {
		in, out := &in.DisableSynthetic, &out.DisableSynthetic
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Suppression != nil {
		in, out := &in.Suppression, &out.Suppression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneralPropertiesInitParameters.
func (in *GeneralPropertiesInitParameters) DeepCopy() *GeneralPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeneralPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneralPropertiesObservation) DeepCopyInto(out *GeneralPropertiesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableSynthetic != nil {
		in, out := &in.DisableSynthetic, &out.DisableSynthetic
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Suppression != nil {
		in, out := &in.Suppression, &out.Suppression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneralPropertiesObservation.
func (in *GeneralPropertiesObservation) DeepCopy() *GeneralPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(GeneralPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneralPropertiesParameters) DeepCopyInto(out *GeneralPropertiesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableSynthetic != nil {
		in, out := &in.DisableSynthetic, &out.DisableSynthetic
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Suppression != nil {
		in, out := &in.Suppression, &out.Suppression
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneralPropertiesParameters.
func (in *GeneralPropertiesParameters) DeepCopy() *GeneralPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(GeneralPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Maintenance) DeepCopyInto(out *Maintenance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Maintenance.
func (in *Maintenance) DeepCopy() *Maintenance {
	if in == nil {
		return nil
	}
	out := new(Maintenance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Maintenance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceInitParameters) DeepCopyInto(out *MaintenanceInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeneralProperties != nil {
		in, out := &in.GeneralProperties, &out.GeneralProperties
		*out = make([]GeneralPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LegacyID != nil {
		in, out := &in.LegacyID, &out.LegacyID
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceInitParameters.
func (in *MaintenanceInitParameters) DeepCopy() *MaintenanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceList) DeepCopyInto(out *MaintenanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Maintenance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceList.
func (in *MaintenanceList) DeepCopy() *MaintenanceList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceObservation) DeepCopyInto(out *MaintenanceObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeneralProperties != nil {
		in, out := &in.GeneralProperties, &out.GeneralProperties
		*out = make([]GeneralPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LegacyID != nil {
		in, out := &in.LegacyID, &out.LegacyID
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceObservation.
func (in *MaintenanceObservation) DeepCopy() *MaintenanceObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceParameters) DeepCopyInto(out *MaintenanceParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeneralProperties != nil {
		in, out := &in.GeneralProperties, &out.GeneralProperties
		*out = make([]GeneralPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LegacyID != nil {
		in, out := &in.LegacyID, &out.LegacyID
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceParameters.
func (in *MaintenanceParameters) DeepCopy() *MaintenanceParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceSpec) DeepCopyInto(out *MaintenanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceSpec.
func (in *MaintenanceSpec) DeepCopy() *MaintenanceSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceStatus) DeepCopyInto(out *MaintenanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceStatus.
func (in *MaintenanceStatus) DeepCopy() *MaintenanceStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceInitParameters) DeepCopyInto(out *MonthlyRecurrenceInitParameters) {
	*out = *in
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]MonthlyRecurrenceRecurrenceRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]MonthlyRecurrenceTimeWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceInitParameters.
func (in *MonthlyRecurrenceInitParameters) DeepCopy() *MonthlyRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceObservation) DeepCopyInto(out *MonthlyRecurrenceObservation) {
	*out = *in
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]MonthlyRecurrenceRecurrenceRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]MonthlyRecurrenceTimeWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceObservation.
func (in *MonthlyRecurrenceObservation) DeepCopy() *MonthlyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceParameters) DeepCopyInto(out *MonthlyRecurrenceParameters) {
	*out = *in
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]MonthlyRecurrenceRecurrenceRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]MonthlyRecurrenceTimeWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceParameters.
func (in *MonthlyRecurrenceParameters) DeepCopy() *MonthlyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceRecurrenceRangeInitParameters) DeepCopyInto(out *MonthlyRecurrenceRecurrenceRangeInitParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceRecurrenceRangeInitParameters.
func (in *MonthlyRecurrenceRecurrenceRangeInitParameters) DeepCopy() *MonthlyRecurrenceRecurrenceRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceRecurrenceRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceRecurrenceRangeObservation) DeepCopyInto(out *MonthlyRecurrenceRecurrenceRangeObservation) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceRecurrenceRangeObservation.
func (in *MonthlyRecurrenceRecurrenceRangeObservation) DeepCopy() *MonthlyRecurrenceRecurrenceRangeObservation {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceRecurrenceRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceRecurrenceRangeParameters) DeepCopyInto(out *MonthlyRecurrenceRecurrenceRangeParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceRecurrenceRangeParameters.
func (in *MonthlyRecurrenceRecurrenceRangeParameters) DeepCopy() *MonthlyRecurrenceRecurrenceRangeParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceRecurrenceRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceTimeWindowInitParameters) DeepCopyInto(out *MonthlyRecurrenceTimeWindowInitParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceTimeWindowInitParameters.
func (in *MonthlyRecurrenceTimeWindowInitParameters) DeepCopy() *MonthlyRecurrenceTimeWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceTimeWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceTimeWindowObservation) DeepCopyInto(out *MonthlyRecurrenceTimeWindowObservation) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceTimeWindowObservation.
func (in *MonthlyRecurrenceTimeWindowObservation) DeepCopy() *MonthlyRecurrenceTimeWindowObservation {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceTimeWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonthlyRecurrenceTimeWindowParameters) DeepCopyInto(out *MonthlyRecurrenceTimeWindowParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonthlyRecurrenceTimeWindowParameters.
func (in *MonthlyRecurrenceTimeWindowParameters) DeepCopy() *MonthlyRecurrenceTimeWindowParameters {
	if in == nil {
		return nil
	}
	out := new(MonthlyRecurrenceTimeWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnceRecurrenceInitParameters) DeepCopyInto(out *OnceRecurrenceInitParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnceRecurrenceInitParameters.
func (in *OnceRecurrenceInitParameters) DeepCopy() *OnceRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnceRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnceRecurrenceObservation) DeepCopyInto(out *OnceRecurrenceObservation) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnceRecurrenceObservation.
func (in *OnceRecurrenceObservation) DeepCopy() *OnceRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(OnceRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnceRecurrenceParameters) DeepCopyInto(out *OnceRecurrenceParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnceRecurrenceParameters.
func (in *OnceRecurrenceParameters) DeepCopy() *OnceRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(OnceRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceRangeInitParameters) DeepCopyInto(out *RecurrenceRangeInitParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceRangeInitParameters.
func (in *RecurrenceRangeInitParameters) DeepCopy() *RecurrenceRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceRangeObservation) DeepCopyInto(out *RecurrenceRangeObservation) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceRangeObservation.
func (in *RecurrenceRangeObservation) DeepCopy() *RecurrenceRangeObservation {
	if in == nil {
		return nil
	}
	out := new(RecurrenceRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurrenceRangeParameters) DeepCopyInto(out *RecurrenceRangeParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurrenceRangeParameters.
func (in *RecurrenceRangeParameters) DeepCopy() *RecurrenceRangeParameters {
	if in == nil {
		return nil
	}
	out := new(RecurrenceRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = make([]DailyRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonthlyRecurrence != nil {
		in, out := &in.MonthlyRecurrence, &out.MonthlyRecurrence
		*out = make([]MonthlyRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnceRecurrence != nil {
		in, out := &in.OnceRecurrence, &out.OnceRecurrence
		*out = make([]OnceRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = make([]WeeklyRecurrenceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = make([]DailyRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonthlyRecurrence != nil {
		in, out := &in.MonthlyRecurrence, &out.MonthlyRecurrence
		*out = make([]MonthlyRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnceRecurrence != nil {
		in, out := &in.OnceRecurrence, &out.OnceRecurrence
		*out = make([]OnceRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = make([]WeeklyRecurrenceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
	if in.DailyRecurrence != nil {
		in, out := &in.DailyRecurrence, &out.DailyRecurrence
		*out = make([]DailyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonthlyRecurrence != nil {
		in, out := &in.MonthlyRecurrence, &out.MonthlyRecurrence
		*out = make([]MonthlyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnceRecurrence != nil {
		in, out := &in.OnceRecurrence, &out.OnceRecurrence
		*out = make([]OnceRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WeeklyRecurrence != nil {
		in, out := &in.WeeklyRecurrence, &out.WeeklyRecurrence
		*out = make([]WeeklyRecurrenceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWindowInitParameters) DeepCopyInto(out *TimeWindowInitParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWindowInitParameters.
func (in *TimeWindowInitParameters) DeepCopy() *TimeWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWindowObservation) DeepCopyInto(out *TimeWindowObservation) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWindowObservation.
func (in *TimeWindowObservation) DeepCopy() *TimeWindowObservation {
	if in == nil {
		return nil
	}
	out := new(TimeWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWindowParameters) DeepCopyInto(out *TimeWindowParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWindowParameters.
func (in *TimeWindowParameters) DeepCopy() *TimeWindowParameters {
	if in == nil {
		return nil
	}
	out := new(TimeWindowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceInitParameters) DeepCopyInto(out *WeeklyRecurrenceInitParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]WeeklyRecurrenceRecurrenceRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]WeeklyRecurrenceTimeWindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceInitParameters.
func (in *WeeklyRecurrenceInitParameters) DeepCopy() *WeeklyRecurrenceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceObservation) DeepCopyInto(out *WeeklyRecurrenceObservation) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]WeeklyRecurrenceRecurrenceRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]WeeklyRecurrenceTimeWindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceObservation.
func (in *WeeklyRecurrenceObservation) DeepCopy() *WeeklyRecurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceParameters) DeepCopyInto(out *WeeklyRecurrenceParameters) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.RecurrenceRange != nil {
		in, out := &in.RecurrenceRange, &out.RecurrenceRange
		*out = make([]WeeklyRecurrenceRecurrenceRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]WeeklyRecurrenceTimeWindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceParameters.
func (in *WeeklyRecurrenceParameters) DeepCopy() *WeeklyRecurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceRecurrenceRangeInitParameters) DeepCopyInto(out *WeeklyRecurrenceRecurrenceRangeInitParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceRecurrenceRangeInitParameters.
func (in *WeeklyRecurrenceRecurrenceRangeInitParameters) DeepCopy() *WeeklyRecurrenceRecurrenceRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceRecurrenceRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceRecurrenceRangeObservation) DeepCopyInto(out *WeeklyRecurrenceRecurrenceRangeObservation) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceRecurrenceRangeObservation.
func (in *WeeklyRecurrenceRecurrenceRangeObservation) DeepCopy() *WeeklyRecurrenceRecurrenceRangeObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceRecurrenceRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceRecurrenceRangeParameters) DeepCopyInto(out *WeeklyRecurrenceRecurrenceRangeParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceRecurrenceRangeParameters.
func (in *WeeklyRecurrenceRecurrenceRangeParameters) DeepCopy() *WeeklyRecurrenceRecurrenceRangeParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceRecurrenceRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceTimeWindowInitParameters) DeepCopyInto(out *WeeklyRecurrenceTimeWindowInitParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceTimeWindowInitParameters.
func (in *WeeklyRecurrenceTimeWindowInitParameters) DeepCopy() *WeeklyRecurrenceTimeWindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceTimeWindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceTimeWindowObservation) DeepCopyInto(out *WeeklyRecurrenceTimeWindowObservation) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceTimeWindowObservation.
func (in *WeeklyRecurrenceTimeWindowObservation) DeepCopy() *WeeklyRecurrenceTimeWindowObservation {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceTimeWindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeeklyRecurrenceTimeWindowParameters) DeepCopyInto(out *WeeklyRecurrenceTimeWindowParameters) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeeklyRecurrenceTimeWindowParameters.
func (in *WeeklyRecurrenceTimeWindowParameters) DeepCopy() *WeeklyRecurrenceTimeWindowParameters {
	if in == nil {
		return nil
	}
	out := new(WeeklyRecurrenceTimeWindowParameters)
	in.DeepCopyInto(out)
	return out
}
