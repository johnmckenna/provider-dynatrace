// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceExternalWebServiceConditionsConditionInitParameters struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	CompareOperationType *string `json:"compareOperationType,omitempty" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceExternalWebServiceConditionsConditionObservation struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	CompareOperationType *string `json:"compareOperationType,omitempty" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceExternalWebServiceConditionsConditionParameters struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	// +kubebuilder:validation:Optional
	CompareOperationType *string `json:"compareOperationType" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +kubebuilder:validation:Optional
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	// +kubebuilder:validation:Optional
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	// +kubebuilder:validation:Optional
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	// +kubebuilder:validation:Optional
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +kubebuilder:validation:Optional
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +kubebuilder:validation:Optional
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +kubebuilder:validation:Optional
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceExternalWebServiceConditionsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Condition []ServiceExternalWebServiceConditionsConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ServiceExternalWebServiceConditionsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Condition []ServiceExternalWebServiceConditionsConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ServiceExternalWebServiceConditionsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Condition []ServiceExternalWebServiceConditionsConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type ServiceExternalWebServiceIDContributorsInitParameters struct {

	// (Boolean) Detect the matching requests as web request services instead of web services.
	// Detect the matching requests as web request services instead of web services.
	//
	// This prevents detecting of matching requests as opaque web services. An opaque web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Opaque/external web request rule](builtin:service-detection.full-web-request).
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService,omitempty" tf:"detect_as_web_request_service,omitempty"`

	// (Boolean) Let the port contribute to the Service Id
	// Let the port contribute to the Service Id
	PortForServiceID *bool `json:"portForServiceId,omitempty" tf:"port_for_service_id,omitempty"`

	// (Block List, Max: 1) URL path (see below for nested schema)
	// URL path
	URLPath []URLPathInitParameters `json:"urlPath,omitempty" tf:"url_path,omitempty"`
}

type ServiceExternalWebServiceIDContributorsObservation struct {

	// (Boolean) Detect the matching requests as web request services instead of web services.
	// Detect the matching requests as web request services instead of web services.
	//
	// This prevents detecting of matching requests as opaque web services. An opaque web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Opaque/external web request rule](builtin:service-detection.full-web-request).
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService,omitempty" tf:"detect_as_web_request_service,omitempty"`

	// (Boolean) Let the port contribute to the Service Id
	// Let the port contribute to the Service Id
	PortForServiceID *bool `json:"portForServiceId,omitempty" tf:"port_for_service_id,omitempty"`

	// (Block List, Max: 1) URL path (see below for nested schema)
	// URL path
	URLPath []URLPathObservation `json:"urlPath,omitempty" tf:"url_path,omitempty"`
}

type ServiceExternalWebServiceIDContributorsParameters struct {

	// (Boolean) Detect the matching requests as web request services instead of web services.
	// Detect the matching requests as web request services instead of web services.
	//
	// This prevents detecting of matching requests as opaque web services. An opaque web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Opaque/external web request rule](builtin:service-detection.full-web-request).
	// +kubebuilder:validation:Optional
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService" tf:"detect_as_web_request_service,omitempty"`

	// (Boolean) Let the port contribute to the Service Id
	// Let the port contribute to the Service Id
	// +kubebuilder:validation:Optional
	PortForServiceID *bool `json:"portForServiceId,omitempty" tf:"port_for_service_id,omitempty"`

	// (Block List, Max: 1) URL path (see below for nested schema)
	// URL path
	// +kubebuilder:validation:Optional
	URLPath []URLPathParameters `json:"urlPath,omitempty" tf:"url_path,omitempty"`
}

type ServiceExternalWebServiceInitParameters struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions []ServiceExternalWebServiceConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch. (see below for nested schema)
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.
	IDContributors []ServiceExternalWebServiceIDContributorsInitParameters `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See here
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceExternalWebServiceObservation struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions []ServiceExternalWebServiceConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch. (see below for nested schema)
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.
	IDContributors []ServiceExternalWebServiceIDContributorsObservation `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See here
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceExternalWebServiceParameters struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	// +kubebuilder:validation:Optional
	Conditions []ServiceExternalWebServiceConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch. (see below for nested schema)
	// Contributors to the Service Identifier calculation. URL path is always applied as an Id Contributor. You can exclude the port contribution by disabling the switch.
	// +kubebuilder:validation:Optional
	IDContributors []ServiceExternalWebServiceIDContributorsParameters `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See here
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	// +kubebuilder:validation:Optional
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type URLPathInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []URLPathServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type URLPathObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []URLPathServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type URLPathParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []URLPathServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type URLPathServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []URLPathServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []URLPathServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type URLPathServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []URLPathServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []URLPathServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type URLPathServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []URLPathServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []URLPathServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type URLPathServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []URLPathServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type URLPathServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []URLPathServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type URLPathServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []URLPathServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type URLPathServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type URLPathServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type URLPathServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	// +kubebuilder:validation:Optional
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	// +kubebuilder:validation:Optional
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	// +kubebuilder:validation:Optional
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type URLPathServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type URLPathServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type URLPathServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// ServiceExternalWebServiceSpec defines the desired state of ServiceExternalWebService
type ServiceExternalWebServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceExternalWebServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceExternalWebServiceInitParameters `json:"initProvider,omitempty"`
}

// ServiceExternalWebServiceStatus defines the observed state of ServiceExternalWebService.
type ServiceExternalWebServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceExternalWebServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceExternalWebService is the Schema for the ServiceExternalWebServices API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ServiceExternalWebService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.idContributors) || (has(self.initProvider) && has(self.initProvider.idContributors))",message="spec.forProvider.idContributors is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ServiceExternalWebServiceSpec   `json:"spec"`
	Status ServiceExternalWebServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceExternalWebServiceList contains a list of ServiceExternalWebServices
type ServiceExternalWebServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceExternalWebService `json:"items"`
}

// Repository type metadata.
var (
	ServiceExternalWebService_Kind             = "ServiceExternalWebService"
	ServiceExternalWebService_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceExternalWebService_Kind}.String()
	ServiceExternalWebService_KindAPIVersion   = ServiceExternalWebService_Kind + "." + CRDGroupVersion.String()
	ServiceExternalWebService_GroupVersionKind = CRDGroupVersion.WithKind(ServiceExternalWebService_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceExternalWebService{}, &ServiceExternalWebServiceList{})
}
