// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClassInitParameters struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the class / the name to match the class name with
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ClassObservation struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the class / the name to match the class name with
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ClassParameters struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// +kubebuilder:validation:Optional
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the class / the name to match the class name with
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type CustomServiceInitParameters struct {

	// (Boolean) Custom service enabled/disabled
	// Custom service enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The name of the custom service, displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Set of String) The list of process groups the custom service should belong to
	// The list of process groups the custom service should belong to
	// +listType=set
	ProcessGroups []*string `json:"processGroups,omitempty" tf:"process_groups,omitempty"`

	// (Boolean) The queue entry point flag. Set to true for custom messaging services
	// The queue entry point flag. Set to `true` for custom messaging services
	QueueEntryPoint *bool `json:"queueEntryPoint,omitempty" tf:"queue_entry_point,omitempty"`

	// (String) The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	// The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	QueueEntryPointType *string `json:"queueEntryPointType,omitempty" tf:"queue_entry_point_type,omitempty"`

	// (Block List) The list of rules defining the custom service (see below for nested schema)
	// The list of rules defining the custom service
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CustomServiceObservation struct {

	// (Boolean) Custom service enabled/disabled
	// Custom service enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The name of the custom service, displayed in the UI
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Set of String) The list of process groups the custom service should belong to
	// The list of process groups the custom service should belong to
	// +listType=set
	ProcessGroups []*string `json:"processGroups,omitempty" tf:"process_groups,omitempty"`

	// (Boolean) The queue entry point flag. Set to true for custom messaging services
	// The queue entry point flag. Set to `true` for custom messaging services
	QueueEntryPoint *bool `json:"queueEntryPoint,omitempty" tf:"queue_entry_point,omitempty"`

	// (String) The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	// The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	QueueEntryPointType *string `json:"queueEntryPointType,omitempty" tf:"queue_entry_point_type,omitempty"`

	// (Block List) The list of rules defining the custom service (see below for nested schema)
	// The list of rules defining the custom service
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CustomServiceParameters struct {

	// (Boolean) Custom service enabled/disabled
	// Custom service enabled/disabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The name of the custom service, displayed in the UI
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Set of String) The list of process groups the custom service should belong to
	// The list of process groups the custom service should belong to
	// +kubebuilder:validation:Optional
	// +listType=set
	ProcessGroups []*string `json:"processGroups,omitempty" tf:"process_groups,omitempty"`

	// (Boolean) The queue entry point flag. Set to true for custom messaging services
	// The queue entry point flag. Set to `true` for custom messaging services
	// +kubebuilder:validation:Optional
	QueueEntryPoint *bool `json:"queueEntryPoint,omitempty" tf:"queue_entry_point,omitempty"`

	// (String) The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	// The queue entry point type (IBM_MQ, JMS, KAFKA, MSMQ or RABBIT_MQ)
	// +kubebuilder:validation:Optional
	QueueEntryPointType *string `json:"queueEntryPointType,omitempty" tf:"queue_entry_point_type,omitempty"`

	// (Block List) The list of rules defining the custom service (see below for nested schema)
	// The list of rules defining the custom service
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`

	// (String) Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	// +kubebuilder:validation:Optional
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type FileInitParameters struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the file / the name to match the file name with
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type FileObservation struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the file / the name to match the file name with
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type FileParameters struct {

	// (String) Matcher applying to the class name (ENDS_WITH, EQUALS or STARTS_WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
	// Matcher applying to the file name (ENDS_WITH, EQUALS or STARTS_WITH). Default value is ENDS_WITH (if applicable)
	// +kubebuilder:validation:Optional
	Match *string `json:"match,omitempty" tf:"match,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The full name of the file / the name to match the file name with
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type MethodInitParameters struct {

	// (List of String) Fully qualified types of argument the method expects
	// Fully qualified types of argument the method expects
	Arguments []*string `json:"arguments,omitempty" tf:"arguments,omitempty"`

	// (List of String) The modifiers of the method rule. Possible values are ABSTRACT, EXTERN, FINAL, NATIVE and STATIC
	// The modifiers of the method rule. Possible values are `ABSTRACT`, `EXTERN`, `FINAL`, `NATIVE` and `STATIC`
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The method to instrument
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Fully qualified type the method returns
	// Fully qualified type the method returns
	Returns *string `json:"returns,omitempty" tf:"returns,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method rule. Possible values are INTERNAL, PACKAGE_PROTECTED, PRIVATE, PROTECTED and PUBLIC
	// The visibility of the method rule. Possible values are `INTERNAL`, `PACKAGE_PROTECTED`, `PRIVATE`, `PROTECTED` and `PUBLIC`
	Visibility *string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type MethodObservation struct {

	// (List of String) Fully qualified types of argument the method expects
	// Fully qualified types of argument the method expects
	Arguments []*string `json:"arguments,omitempty" tf:"arguments,omitempty"`

	// (String) The ID of this resource.
	// The ID of the method rule
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) The modifiers of the method rule. Possible values are ABSTRACT, EXTERN, FINAL, NATIVE and STATIC
	// The modifiers of the method rule. Possible values are `ABSTRACT`, `EXTERN`, `FINAL`, `NATIVE` and `STATIC`
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The method to instrument
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Fully qualified type the method returns
	// Fully qualified type the method returns
	Returns *string `json:"returns,omitempty" tf:"returns,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method rule. Possible values are INTERNAL, PACKAGE_PROTECTED, PRIVATE, PROTECTED and PUBLIC
	// The visibility of the method rule. Possible values are `INTERNAL`, `PACKAGE_PROTECTED`, `PRIVATE`, `PROTECTED` and `PUBLIC`
	Visibility *string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type MethodParameters struct {

	// (List of String) Fully qualified types of argument the method expects
	// Fully qualified types of argument the method expects
	// +kubebuilder:validation:Optional
	Arguments []*string `json:"arguments,omitempty" tf:"arguments,omitempty"`

	// (List of String) The modifiers of the method rule. Possible values are ABSTRACT, EXTERN, FINAL, NATIVE and STATIC
	// The modifiers of the method rule. Possible values are `ABSTRACT`, `EXTERN`, `FINAL`, `NATIVE` and `STATIC`
	// +kubebuilder:validation:Optional
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The name of the custom service, displayed in the UI
	// The method to instrument
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) Fully qualified type the method returns
	// Fully qualified type the method returns
	// +kubebuilder:validation:Optional
	Returns *string `json:"returns,omitempty" tf:"returns,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method rule. Possible values are INTERNAL, PACKAGE_PROTECTED, PRIVATE, PROTECTED and PUBLIC
	// The visibility of the method rule. Possible values are `INTERNAL`, `PACKAGE_PROTECTED`, `PRIVATE`, `PROTECTED` and `PUBLIC`
	// +kubebuilder:validation:Optional
	Visibility *string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type RuleInitParameters struct {

	// (Set of String) Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// +listType=set
	Annotations []*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Block List, Max: 1) The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP (see below for nested schema)
	// The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP
	Class []ClassInitParameters `json:"class,omitempty" tf:"class,omitempty"`

	// (Boolean) Custom service enabled/disabled
	// Rule enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET (see below for nested schema)
	// The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET
	File []FileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	// (Block List, Min: 1) methods to instrument (see below for nested schema)
	// methods to instrument
	Method []MethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type RuleObservation struct {

	// (Set of String) Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// +listType=set
	Annotations []*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Block List, Max: 1) The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP (see below for nested schema)
	// The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP
	Class []ClassObservation `json:"class,omitempty" tf:"class,omitempty"`

	// (Boolean) Custom service enabled/disabled
	// Rule enabled/disabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET (see below for nested schema)
	// The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET
	File []FileObservation `json:"file,omitempty" tf:"file,omitempty"`

	// (Block List, Min: 1) methods to instrument (see below for nested schema)
	// methods to instrument
	Method []MethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type RuleParameters struct {

	// (Set of String) Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
	// +kubebuilder:validation:Optional
	// +listType=set
	Annotations []*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// (Block List, Max: 1) The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP (see below for nested schema)
	// The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP
	// +kubebuilder:validation:Optional
	Class []ClassParameters `json:"class,omitempty" tf:"class,omitempty"`

	// (Boolean) Custom service enabled/disabled
	// Rule enabled/disabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Max: 1) The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET (see below for nested schema)
	// The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET
	// +kubebuilder:validation:Optional
	File []FileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// (Block List, Min: 1) methods to instrument (see below for nested schema)
	// methods to instrument
	// +kubebuilder:validation:Optional
	Method []MethodParameters `json:"method" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

// CustomServiceSpec defines the desired state of CustomService
type CustomServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomServiceInitParameters `json:"initProvider,omitempty"`
}

// CustomServiceStatus defines the observed state of CustomService.
type CustomServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomService is the Schema for the CustomServices API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CustomService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.technology) || (has(self.initProvider) && has(self.initProvider.technology))",message="spec.forProvider.technology is a required parameter"
	Spec   CustomServiceSpec   `json:"spec"`
	Status CustomServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomServiceList contains a list of CustomServices
type CustomServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomService `json:"items"`
}

// Repository type metadata.
var (
	CustomService_Kind             = "CustomService"
	CustomService_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomService_Kind}.String()
	CustomService_KindAPIVersion   = CustomService_Kind + "." + CRDGroupVersion.String()
	CustomService_GroupVersionKind = CRDGroupVersion.WithKind(CustomService_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomService{}, &CustomServiceList{})
}
