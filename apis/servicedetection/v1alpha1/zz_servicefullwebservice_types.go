// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IDContributorsApplicationIDServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsApplicationIDServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsApplicationIDServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsApplicationIDServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsApplicationIDServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []IDContributorsApplicationIDServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []IDContributorsApplicationIDServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsApplicationIDServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsApplicationIDServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []IDContributorsApplicationIDServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	// +kubebuilder:validation:Optional
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	// +kubebuilder:validation:Optional
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	// +kubebuilder:validation:Optional
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsApplicationIDServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsContextRootServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsContextRootServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []IDContributorsContextRootServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsContextRootServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type IDContributorsContextRootServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsContextRootServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsContextRootServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IDContributorsServerNameInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []IDContributorsServerNameServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type IDContributorsServerNameObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []IDContributorsServerNameServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type IDContributorsServerNameParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []IDContributorsServerNameServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type IDContributorsServerNameServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsServerNameServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsServerNameServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsServerNameServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsServerNameServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsServerNameServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsServerNameServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []IDContributorsServerNameServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []IDContributorsServerNameServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsServerNameServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []IDContributorsServerNameServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []IDContributorsServerNameServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type IDContributorsServerNameServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	// +kubebuilder:validation:Optional
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	// +kubebuilder:validation:Optional
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	// +kubebuilder:validation:Optional
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type IDContributorsServerNameServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsServerNameServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IDContributorsServerNameServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ServiceFullWebServiceConditionsConditionInitParameters struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	CompareOperationType *string `json:"compareOperationType,omitempty" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceFullWebServiceConditionsConditionObservation struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	CompareOperationType *string `json:"compareOperationType,omitempty" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceFullWebServiceConditionsConditionParameters struct {

	// (String) Take the value of this attribute
	// Take the value of this attribute
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// (String) Apply this operation
	// Apply this operation
	// +kubebuilder:validation:Optional
	CompareOperationType *string `json:"compareOperationType" tf:"compare_operation_type,omitempty"`

	// (Set of String) Technology
	// Technology
	// +kubebuilder:validation:Optional
	// +listType=set
	Framework []*string `json:"framework,omitempty" tf:"framework,omitempty"`

	// (String) From
	// From
	// +kubebuilder:validation:Optional
	IPRangeFrom *string `json:"ipRangeFrom,omitempty" tf:"ip_range_from,omitempty"`

	// (String) To
	// To
	// +kubebuilder:validation:Optional
	IPRangeTo *string `json:"ipRangeTo,omitempty" tf:"ip_range_to,omitempty"`

	// (Boolean) Ignore case sensitivity for texts.
	// Ignore case sensitivity for texts.
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// (Number) Value
	// Value
	// +kubebuilder:validation:Optional
	IntValue *float64 `json:"intValue,omitempty" tf:"int_value,omitempty"`

	// (Set of Number) Values
	// Values
	// +kubebuilder:validation:Optional
	// +listType=set
	IntValues []*float64 `json:"intValues,omitempty" tf:"int_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +kubebuilder:validation:Optional
	// +listType=set
	TagValues []*string `json:"tagValues,omitempty" tf:"tag_values,omitempty"`

	// (Set of String) If multiple values are specified, at least one of them must match for the condition to match
	// If multiple values are specified, at least one of them must match for the condition to match
	// +kubebuilder:validation:Optional
	// +listType=set
	TextValues []*string `json:"textValues,omitempty" tf:"text_values,omitempty"`
}

type ServiceFullWebServiceConditionsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Condition []ServiceFullWebServiceConditionsConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ServiceFullWebServiceConditionsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Condition []ServiceFullWebServiceConditionsConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type ServiceFullWebServiceConditionsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Condition []ServiceFullWebServiceConditionsConditionParameters `json:"condition" tf:"condition,omitempty"`
}

type ServiceFullWebServiceIDContributorsApplicationIDInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []IDContributorsApplicationIDServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsApplicationIDObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []IDContributorsApplicationIDServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsApplicationIDParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []IDContributorsApplicationIDServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []ServiceFullWebServiceIDContributorsContextRootServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []ServiceFullWebServiceIDContributorsContextRootServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []ServiceFullWebServiceIDContributorsContextRootServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Number) How many segments should be taken.
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsContextRootServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsContextRootServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Number) How many segments should be taken.
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []IDContributorsContextRootServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []IDContributorsContextRootServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type ServiceFullWebServiceIDContributorsContextRootServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Number) How many segments should be taken.
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []IDContributorsContextRootServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []IDContributorsContextRootServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type ServiceFullWebServiceIDContributorsInitParameters struct {

	// (Block List, Max: 1) Application identifier (see below for nested schema)
	// Application identifier
	ApplicationID []ServiceFullWebServiceIDContributorsApplicationIDInitParameters `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// api/ URL the context root is /support. The context root value can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot []ServiceFullWebServiceIDContributorsContextRootInitParameters `json:"contextRoot,omitempty" tf:"context_root,omitempty"`

	// (Boolean) Detect the matching requests as full web services (false) or web request services (true).
	// Detect the matching requests as full web services (false) or web request services (true).
	//
	// Setting this field to true prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Full web request rule](builtin:service-detection.full-web-request).
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService,omitempty" tf:"detect_as_web_request_service,omitempty"`

	// (Block List, Max: 1) Server name (see below for nested schema)
	// Server name
	ServerName []IDContributorsServerNameInitParameters `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// (Block List, Max: 1) Web service name (see below for nested schema)
	// Web service name
	WebServiceName []WebServiceNameInitParameters `json:"webServiceName,omitempty" tf:"web_service_name,omitempty"`

	// (Block List, Max: 1) Web service namespace (see below for nested schema)
	// Web service namespace
	WebServiceNamespace []WebServiceNamespaceInitParameters `json:"webServiceNamespace,omitempty" tf:"web_service_namespace,omitempty"`
}

type ServiceFullWebServiceIDContributorsObservation struct {

	// (Block List, Max: 1) Application identifier (see below for nested schema)
	// Application identifier
	ApplicationID []ServiceFullWebServiceIDContributorsApplicationIDObservation `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// api/ URL the context root is /support. The context root value can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot []ServiceFullWebServiceIDContributorsContextRootObservation `json:"contextRoot,omitempty" tf:"context_root,omitempty"`

	// (Boolean) Detect the matching requests as full web services (false) or web request services (true).
	// Detect the matching requests as full web services (false) or web request services (true).
	//
	// Setting this field to true prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Full web request rule](builtin:service-detection.full-web-request).
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService,omitempty" tf:"detect_as_web_request_service,omitempty"`

	// (Block List, Max: 1) Server name (see below for nested schema)
	// Server name
	ServerName []IDContributorsServerNameObservation `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// (Block List, Max: 1) Web service name (see below for nested schema)
	// Web service name
	WebServiceName []WebServiceNameObservation `json:"webServiceName,omitempty" tf:"web_service_name,omitempty"`

	// (Block List, Max: 1) Web service namespace (see below for nested schema)
	// Web service namespace
	WebServiceNamespace []WebServiceNamespaceObservation `json:"webServiceNamespace,omitempty" tf:"web_service_namespace,omitempty"`
}

type ServiceFullWebServiceIDContributorsParameters struct {

	// (Block List, Max: 1) Application identifier (see below for nested schema)
	// Application identifier
	// +kubebuilder:validation:Optional
	ApplicationID []ServiceFullWebServiceIDContributorsApplicationIDParameters `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// api/ URL the context root is /support. The context root value can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	ContextRoot []ServiceFullWebServiceIDContributorsContextRootParameters `json:"contextRoot,omitempty" tf:"context_root,omitempty"`

	// (Boolean) Detect the matching requests as full web services (false) or web request services (true).
	// Detect the matching requests as full web services (false) or web request services (true).
	//
	// Setting this field to true prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate [Full web request rule](builtin:service-detection.full-web-request).
	// +kubebuilder:validation:Optional
	DetectAsWebRequestService *bool `json:"detectAsWebRequestService" tf:"detect_as_web_request_service,omitempty"`

	// (Block List, Max: 1) Server name (see below for nested schema)
	// Server name
	// +kubebuilder:validation:Optional
	ServerName []IDContributorsServerNameParameters `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// (Block List, Max: 1) Web service name (see below for nested schema)
	// Web service name
	// +kubebuilder:validation:Optional
	WebServiceName []WebServiceNameParameters `json:"webServiceName,omitempty" tf:"web_service_name,omitempty"`

	// (Block List, Max: 1) Web service namespace (see below for nested schema)
	// Web service namespace
	// +kubebuilder:validation:Optional
	WebServiceNamespace []WebServiceNamespaceParameters `json:"webServiceNamespace,omitempty" tf:"web_service_namespace,omitempty"`
}

type ServiceFullWebServiceInitParameters struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions []ServiceFullWebServiceConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors are always applied. (see below for nested schema)
	// Contributors to the Service Identifier calculation. All of the Contributors are always applied.
	IDContributors []ServiceFullWebServiceIDContributorsInitParameters `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.
	// Define a management zone of the process group for which this service detection rule should be created.
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceFullWebServiceObservation struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions []ServiceFullWebServiceConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors are always applied. (see below for nested schema)
	// Contributors to the Service Identifier calculation. All of the Contributors are always applied.
	IDContributors []ServiceFullWebServiceIDContributorsObservation `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.
	// Define a management zone of the process group for which this service detection rule should be created.
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServiceFullWebServiceParameters struct {

	// (Block List, Max: 1) A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must all match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them. (see below for nested schema)
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	// +kubebuilder:validation:Optional
	Conditions []ServiceFullWebServiceConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) Description
	// Description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Contributors to the Service Identifier calculation. All of the Contributors are always applied. (see below for nested schema)
	// Contributors to the Service Identifier calculation. All of the Contributors are always applied.
	// +kubebuilder:validation:Optional
	IDContributors []ServiceFullWebServiceIDContributorsParameters `json:"idContributors,omitempty" tf:"id_contributors,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (Set of String) Define a management zone of the process group for which this service detection rule should be created.
	// Define a management zone of the process group for which this service detection rule should be created.
	// +kubebuilder:validation:Optional
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (String) Rule name
	// Rule name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type WebServiceNameInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []WebServiceNameServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNameObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []WebServiceNameServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNameParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []WebServiceNameServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNameServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []WebServiceNameServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []WebServiceNameServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNameServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []WebServiceNameServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []WebServiceNameServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNameServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []WebServiceNameServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []WebServiceNameServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []WebServiceNameServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []WebServiceNameServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []WebServiceNameServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type WebServiceNameServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	// +kubebuilder:validation:Optional
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	// +kubebuilder:validation:Optional
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	// +kubebuilder:validation:Optional
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type WebServiceNameServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WebServiceNameServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WebServiceNameServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type WebServiceNamespaceInitParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []WebServiceNamespaceServiceIDContributorInitParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNamespaceObservation struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	EnableIDContributor *bool `json:"enableIdContributor,omitempty" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ServiceIDContributor []WebServiceNamespaceServiceIDContributorObservation `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNamespaceParameters struct {

	// (Boolean) Transform this value before letting it contribute to the Service Id
	// Transform this value before letting it contribute to the Service Id
	// +kubebuilder:validation:Optional
	EnableIDContributor *bool `json:"enableIdContributor" tf:"enable_id_contributor,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ServiceIDContributor []WebServiceNamespaceServiceIDContributorParameters `json:"serviceIdContributor,omitempty" tf:"service_id_contributor,omitempty"`
}

type WebServiceNamespaceServiceIDContributorInitParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []WebServiceNamespaceServiceIDContributorTransformationsInitParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []WebServiceNamespaceServiceIDContributorValueOverrideInitParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNamespaceServiceIDContributorObservation struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType *string `json:"contributionType,omitempty" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations []WebServiceNamespaceServiceIDContributorTransformationsObservation `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	ValueOverride []WebServiceNamespaceServiceIDContributorValueOverrideObservation `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNamespaceServiceIDContributorParameters struct {

	// (String) Possible Values: OriginalValue, OverrideValue, TransformValue
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	// +kubebuilder:validation:Optional
	ContributionType *string `json:"contributionType" tf:"contribution_type,omitempty"`

	// (Block List, Max: 1) Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the Service overview page under Properties and tags. (see below for nested schema)
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	// +kubebuilder:validation:Optional
	Transformations []WebServiceNamespaceServiceIDContributorTransformationsParameters `json:"transformations,omitempty" tf:"transformations,omitempty"`

	// (Block List, Max: 1) The value to be used instead of the detected value. (see below for nested schema)
	// The value to be used instead of the detected value.
	// +kubebuilder:validation:Optional
	ValueOverride []WebServiceNamespaceServiceIDContributorValueOverrideParameters `json:"valueOverride,omitempty" tf:"value_override,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []WebServiceNamespaceServiceIDContributorTransformationsTransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Transformation []WebServiceNamespaceServiceIDContributorTransformationsTransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []WebServiceNamespaceServiceIDContributorTransformationsTransformationParameters `json:"transformation" tf:"transformation,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsTransformationInitParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsTransformationObservation struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType *string `json:"transformationType,omitempty" tf:"transformation_type,omitempty"`
}

type WebServiceNamespaceServiceIDContributorTransformationsTransformationParameters struct {

	// (Boolean) include hexadecimal numbers
	// include hexadecimal numbers
	// +kubebuilder:validation:Optional
	IncludeHexNumbers *bool `json:"includeHexNumbers,omitempty" tf:"include_hex_numbers,omitempty"`

	// (Number) min digit count
	// min digit count
	// +kubebuilder:validation:Optional
	MinDigitCount *float64 `json:"minDigitCount,omitempty" tf:"min_digit_count,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (String) replacement
	// replacement
	// +kubebuilder:validation:Optional
	ReplacementValue *string `json:"replacementValue,omitempty" tf:"replacement_value,omitempty"`

	// (Number) How many segments should be taken.
	// How many segments should be taken.
	// +kubebuilder:validation:Optional
	SegmentCount *float64 `json:"segmentCount,omitempty" tf:"segment_count,omitempty"`

	// (Number) select index
	// select index
	// +kubebuilder:validation:Optional
	SelectIndex *float64 `json:"selectIndex,omitempty" tf:"select_index,omitempty"`

	// (String) split by
	// split by
	// +kubebuilder:validation:Optional
	SplitDelimiter *string `json:"splitDelimiter,omitempty" tf:"split_delimiter,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// (Boolean) take from end
	// take from end
	// +kubebuilder:validation:Optional
	TakeFromEnd *bool `json:"takeFromEnd,omitempty" tf:"take_from_end,omitempty"`

	// (String) Possible Values: AFTER, BEFORE, BETWEEN, REMOVE_CREDIT_CARDS, REMOVE_IBANS, REMOVE_IPS, REMOVE_NUMBERS, REPLACE_BETWEEN, SPLIT_SELECT, TAKE_SEGMENTS
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	// +kubebuilder:validation:Optional
	TransformationType *string `json:"transformationType" tf:"transformation_type,omitempty"`
}

type WebServiceNamespaceServiceIDContributorValueOverrideInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WebServiceNamespaceServiceIDContributorValueOverrideObservation struct {

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type WebServiceNamespaceServiceIDContributorValueOverrideParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// ServiceFullWebServiceSpec defines the desired state of ServiceFullWebService
type ServiceFullWebServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceFullWebServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceFullWebServiceInitParameters `json:"initProvider,omitempty"`
}

// ServiceFullWebServiceStatus defines the observed state of ServiceFullWebService.
type ServiceFullWebServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceFullWebServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceFullWebService is the Schema for the ServiceFullWebServices API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ServiceFullWebService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.idContributors) || (has(self.initProvider) && has(self.initProvider.idContributors))",message="spec.forProvider.idContributors is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ServiceFullWebServiceSpec   `json:"spec"`
	Status ServiceFullWebServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceFullWebServiceList contains a list of ServiceFullWebServices
type ServiceFullWebServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceFullWebService `json:"items"`
}

// Repository type metadata.
var (
	ServiceFullWebService_Kind             = "ServiceFullWebService"
	ServiceFullWebService_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceFullWebService_Kind}.String()
	ServiceFullWebService_KindAPIVersion   = ServiceFullWebService_Kind + "." + CRDGroupVersion.String()
	ServiceFullWebService_GroupVersionKind = CRDGroupVersion.WithKind(ServiceFullWebService_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceFullWebService{}, &ServiceFullWebServiceList{})
}
