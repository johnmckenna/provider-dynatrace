// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OneagentDefaultVersionInitParameters struct {

	// (String) Default version
	// Default version
	DefaultVersion *string `json:"defaultVersion,omitempty" tf:"default_version,omitempty"`

	// (String) Revision
	// Revision
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`
}

type OneagentDefaultVersionObservation struct {

	// (String) Default version
	// Default version
	DefaultVersion *string `json:"defaultVersion,omitempty" tf:"default_version,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Revision
	// Revision
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`
}

type OneagentDefaultVersionParameters struct {

	// (String) Default version
	// Default version
	// +kubebuilder:validation:Optional
	DefaultVersion *string `json:"defaultVersion,omitempty" tf:"default_version,omitempty"`

	// (String) Revision
	// Revision
	// +kubebuilder:validation:Optional
	Revision *string `json:"revision,omitempty" tf:"revision,omitempty"`
}

// OneagentDefaultVersionSpec defines the desired state of OneagentDefaultVersion
type OneagentDefaultVersionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OneagentDefaultVersionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OneagentDefaultVersionInitParameters `json:"initProvider,omitempty"`
}

// OneagentDefaultVersionStatus defines the observed state of OneagentDefaultVersion.
type OneagentDefaultVersionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OneagentDefaultVersionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OneagentDefaultVersion is the Schema for the OneagentDefaultVersions API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type OneagentDefaultVersion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultVersion) || (has(self.initProvider) && has(self.initProvider.defaultVersion))",message="spec.forProvider.defaultVersion is a required parameter"
	Spec   OneagentDefaultVersionSpec   `json:"spec"`
	Status OneagentDefaultVersionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OneagentDefaultVersionList contains a list of OneagentDefaultVersions
type OneagentDefaultVersionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OneagentDefaultVersion `json:"items"`
}

// Repository type metadata.
var (
	OneagentDefaultVersion_Kind             = "OneagentDefaultVersion"
	OneagentDefaultVersion_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OneagentDefaultVersion_Kind}.String()
	OneagentDefaultVersion_KindAPIVersion   = OneagentDefaultVersion_Kind + "." + CRDGroupVersion.String()
	OneagentDefaultVersion_GroupVersionKind = CRDGroupVersion.WithKind(OneagentDefaultVersion_Kind)
)

func init() {
	SchemeBuilder.Register(&OneagentDefaultVersion{}, &OneagentDefaultVersionList{})
}
