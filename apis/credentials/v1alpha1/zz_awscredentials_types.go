// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthenticationDataInitParameters struct {

	// (String) the access key
	// the access key
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) the ID of the Amazon account
	// the ID of the Amazon account
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) the IAM role to be used by Dynatrace to get monitoring data
	// the IAM role to be used by Dynatrace to get monitoring data
	IAMRole *string `json:"iamRole,omitempty" tf:"iam_role,omitempty"`

	// (String, Sensitive) the secret access key
	// the secret access key
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AuthenticationDataObservation struct {

	// (String) the access key
	// the access key
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) the ID of the Amazon account
	// the ID of the Amazon account
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) (Read only) the external ID token for setting an IAM role. You can obtain it with the GET /aws/iamExternalId request
	// (Read only) the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// (String) the IAM role to be used by Dynatrace to get monitoring data
	// the IAM role to be used by Dynatrace to get monitoring data
	IAMRole *string `json:"iamRole,omitempty" tf:"iam_role,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AuthenticationDataParameters struct {

	// (String) the access key
	// the access key
	// +kubebuilder:validation:Optional
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) the ID of the Amazon account
	// the ID of the Amazon account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// (String) the IAM role to be used by Dynatrace to get monitoring data
	// the IAM role to be used by Dynatrace to get monitoring data
	// +kubebuilder:validation:Optional
	IAMRole *string `json:"iamRole,omitempty" tf:"iam_role,omitempty"`

	// (String, Sensitive) the secret access key
	// the secret access key
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AwsCredentialsInitParameters struct {

	// (Block List, Min: 1, Max: 1) credentials for the AWS authentication (see below for nested schema)
	// credentials for the AWS authentication
	AuthenticationData []AuthenticationDataInitParameters `json:"authenticationData,omitempty" tf:"authentication_data,omitempty"`

	// (Boolean) Enable monitoring of specified AWS credentials
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled *bool `json:"credentialsEnabled,omitempty" tf:"credentials_enabled,omitempty"`

	// (String) The name of the credentials
	// The name of the credentials
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) The type of the AWS partition
	// The type of the AWS partition
	PartitionType *string `json:"partitionType,omitempty" tf:"partition_type,omitempty"`

	// (Boolean) Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via dynatrace_aws_service subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace_aws_service` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults *bool `json:"removeDefaults,omitempty" tf:"remove_defaults,omitempty"`

	// (Boolean) Run credentials on Dynatrace infrastructure
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure *bool `json:"runningOnDynatraceInfrastructure,omitempty" tf:"running_on_dynatrace_infrastructure,omitempty"`

	// (Boolean, Deprecated) If enabled (true) the attribute supporting_services will not get synchronized with Dynatrace.
	// If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace.
	SupportingServicesManagedInDynatrace *bool `json:"supportingServicesManagedInDynatrace,omitempty" tf:"supporting_services_managed_in_dynatrace,omitempty"`

	// (Block Set, Deprecated) supporting services to be monitored (see below for nested schema)
	// supporting services to be monitored
	SupportingServicesToMonitor []SupportingServicesToMonitorInitParameters `json:"supportingServicesToMonitor,omitempty" tf:"supporting_services_to_monitor,omitempty"`

	// (Boolean) Monitor only resources which have specified AWS tags (true) or all resources (false)
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly *bool `json:"taggedOnly,omitempty" tf:"tagged_only,omitempty"`

	// (Block Set, Max: 10) AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the tagged_only parameter is set to true (see below for nested schema)
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitor []TagsToMonitorInitParameters `json:"tagsToMonitor,omitempty" tf:"tags_to_monitor,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AwsCredentialsObservation struct {

	// (Block List, Min: 1, Max: 1) credentials for the AWS authentication (see below for nested schema)
	// credentials for the AWS authentication
	AuthenticationData []AuthenticationDataObservation `json:"authenticationData,omitempty" tf:"authentication_data,omitempty"`

	// (Boolean) Enable monitoring of specified AWS credentials
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled *bool `json:"credentialsEnabled,omitempty" tf:"credentials_enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the credentials
	// The name of the credentials
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) The type of the AWS partition
	// The type of the AWS partition
	PartitionType *string `json:"partitionType,omitempty" tf:"partition_type,omitempty"`

	// (Boolean) Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via dynatrace_aws_service subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace_aws_service` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults *bool `json:"removeDefaults,omitempty" tf:"remove_defaults,omitempty"`

	// (Boolean) Run credentials on Dynatrace infrastructure
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure *bool `json:"runningOnDynatraceInfrastructure,omitempty" tf:"running_on_dynatrace_infrastructure,omitempty"`

	// (Boolean, Deprecated) If enabled (true) the attribute supporting_services will not get synchronized with Dynatrace.
	// If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace.
	SupportingServicesManagedInDynatrace *bool `json:"supportingServicesManagedInDynatrace,omitempty" tf:"supporting_services_managed_in_dynatrace,omitempty"`

	// (Block Set, Deprecated) supporting services to be monitored (see below for nested schema)
	// supporting services to be monitored
	SupportingServicesToMonitor []SupportingServicesToMonitorObservation `json:"supportingServicesToMonitor,omitempty" tf:"supporting_services_to_monitor,omitempty"`

	// (Boolean) Monitor only resources which have specified AWS tags (true) or all resources (false)
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly *bool `json:"taggedOnly,omitempty" tf:"tagged_only,omitempty"`

	// (Block Set, Max: 10) AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the tagged_only parameter is set to true (see below for nested schema)
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitor []TagsToMonitorObservation `json:"tagsToMonitor,omitempty" tf:"tags_to_monitor,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type AwsCredentialsParameters struct {

	// (Block List, Min: 1, Max: 1) credentials for the AWS authentication (see below for nested schema)
	// credentials for the AWS authentication
	// +kubebuilder:validation:Optional
	AuthenticationData []AuthenticationDataParameters `json:"authenticationData,omitempty" tf:"authentication_data,omitempty"`

	// (Boolean) Enable monitoring of specified AWS credentials
	// Enable monitoring of specified AWS credentials
	// +kubebuilder:validation:Optional
	CredentialsEnabled *bool `json:"credentialsEnabled,omitempty" tf:"credentials_enabled,omitempty"`

	// (String) The name of the credentials
	// The name of the credentials
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) The type of the AWS partition
	// The type of the AWS partition
	// +kubebuilder:validation:Optional
	PartitionType *string `json:"partitionType,omitempty" tf:"partition_type,omitempty"`

	// (Boolean) Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via dynatrace_aws_service subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `dynatrace_aws_service` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	// +kubebuilder:validation:Optional
	RemoveDefaults *bool `json:"removeDefaults,omitempty" tf:"remove_defaults,omitempty"`

	// (Boolean) Run credentials on Dynatrace infrastructure
	// Run credentials on Dynatrace infrastructure
	// +kubebuilder:validation:Optional
	RunningOnDynatraceInfrastructure *bool `json:"runningOnDynatraceInfrastructure,omitempty" tf:"running_on_dynatrace_infrastructure,omitempty"`

	// (Boolean, Deprecated) If enabled (true) the attribute supporting_services will not get synchronized with Dynatrace.
	// If enabled (`true`) the attribute `supporting_services` will not get synchronized with Dynatrace.
	// +kubebuilder:validation:Optional
	SupportingServicesManagedInDynatrace *bool `json:"supportingServicesManagedInDynatrace,omitempty" tf:"supporting_services_managed_in_dynatrace,omitempty"`

	// (Block Set, Deprecated) supporting services to be monitored (see below for nested schema)
	// supporting services to be monitored
	// +kubebuilder:validation:Optional
	SupportingServicesToMonitor []SupportingServicesToMonitorParameters `json:"supportingServicesToMonitor,omitempty" tf:"supporting_services_to_monitor,omitempty"`

	// (Boolean) Monitor only resources which have specified AWS tags (true) or all resources (false)
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	// +kubebuilder:validation:Optional
	TaggedOnly *bool `json:"taggedOnly,omitempty" tf:"tagged_only,omitempty"`

	// (Block Set, Max: 10) AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the tagged_only parameter is set to true (see below for nested schema)
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	// +kubebuilder:validation:Optional
	TagsToMonitor []TagsToMonitorParameters `json:"tagsToMonitor,omitempty" tf:"tags_to_monitor,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type MonitoredMetricsInitParameters struct {

	// (List of String) a list of metric's dimensions names
	// a list of metric's dimensions names
	Dimensions []*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String) the name of the supporting service
	// the name of the metric of the supporting service
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	// the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	Statistic *string `json:"statistic,omitempty" tf:"statistic,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type MonitoredMetricsObservation struct {

	// (List of String) a list of metric's dimensions names
	// a list of metric's dimensions names
	Dimensions []*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String) the name of the supporting service
	// the name of the metric of the supporting service
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	// the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	Statistic *string `json:"statistic,omitempty" tf:"statistic,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type MonitoredMetricsParameters struct {

	// (List of String) a list of metric's dimensions names
	// a list of metric's dimensions names
	// +kubebuilder:validation:Optional
	Dimensions []*string `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// (String) the name of the supporting service
	// the name of the metric of the supporting service
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	// the statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
	// +kubebuilder:validation:Optional
	Statistic *string `json:"statistic,omitempty" tf:"statistic,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SupportingServicesToMonitorInitParameters struct {

	// (Block Set) a list of metrics to be monitored for this service (see below for nested schema)
	// a list of metrics to be monitored for this service
	MonitoredMetrics []MonitoredMetricsInitParameters `json:"monitoredMetrics,omitempty" tf:"monitored_metrics,omitempty"`

	// (String) the name of the supporting service
	// the name of the supporting service
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SupportingServicesToMonitorObservation struct {

	// (Block Set) a list of metrics to be monitored for this service (see below for nested schema)
	// a list of metrics to be monitored for this service
	MonitoredMetrics []MonitoredMetricsObservation `json:"monitoredMetrics,omitempty" tf:"monitored_metrics,omitempty"`

	// (String) the name of the supporting service
	// the name of the supporting service
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SupportingServicesToMonitorParameters struct {

	// (Block Set) a list of metrics to be monitored for this service (see below for nested schema)
	// a list of metrics to be monitored for this service
	// +kubebuilder:validation:Optional
	MonitoredMetrics []MonitoredMetricsParameters `json:"monitoredMetrics,omitempty" tf:"monitored_metrics,omitempty"`

	// (String) the name of the supporting service
	// the name of the supporting service
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type TagsToMonitorInitParameters struct {

	// (String) the name of the supporting service
	// the key of the AWS tag.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) the value of the AWS tag
	// the value of the AWS tag
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TagsToMonitorObservation struct {

	// (String) the name of the supporting service
	// the key of the AWS tag.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) the value of the AWS tag
	// the value of the AWS tag
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TagsToMonitorParameters struct {

	// (String) the name of the supporting service
	// the key of the AWS tag.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Any attributes that aren't yet supported by this provider
	// Any attributes that aren't yet supported by this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) the value of the AWS tag
	// the value of the AWS tag
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// AwsCredentialsSpec defines the desired state of AwsCredentials
type AwsCredentialsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AwsCredentialsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AwsCredentialsInitParameters `json:"initProvider,omitempty"`
}

// AwsCredentialsStatus defines the observed state of AwsCredentials.
type AwsCredentialsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AwsCredentialsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AwsCredentials is the Schema for the AwsCredentialss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type AwsCredentials struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authenticationData) || (has(self.initProvider) && has(self.initProvider.authenticationData))",message="spec.forProvider.authenticationData is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.partitionType) || (has(self.initProvider) && has(self.initProvider.partitionType))",message="spec.forProvider.partitionType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.taggedOnly) || (has(self.initProvider) && has(self.initProvider.taggedOnly))",message="spec.forProvider.taggedOnly is a required parameter"
	Spec   AwsCredentialsSpec   `json:"spec"`
	Status AwsCredentialsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AwsCredentialsList contains a list of AwsCredentialss
type AwsCredentialsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AwsCredentials `json:"items"`
}

// Repository type metadata.
var (
	AwsCredentials_Kind             = "AwsCredentials"
	AwsCredentials_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AwsCredentials_Kind}.String()
	AwsCredentials_KindAPIVersion   = AwsCredentials_Kind + "." + CRDGroupVersion.String()
	AwsCredentials_GroupVersionKind = CRDGroupVersion.WithKind(AwsCredentials_Kind)
)

func init() {
	SchemeBuilder.Register(&AwsCredentials{}, &AwsCredentialsList{})
}
