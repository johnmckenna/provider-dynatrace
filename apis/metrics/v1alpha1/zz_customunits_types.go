// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomUnitsInitParameters struct {

	// (String) Unit description should provide additional information about the new unit
	// Unit description should provide additional information about the new unit
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Unit name has to be unique and is used as identifier.
	// Unit name has to be unique and is used as identifier.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unit plural name represent the plural form of the unit name.
	// Unit plural name represent the plural form of the unit name.
	PluralName *string `json:"pluralName,omitempty" tf:"plural_name,omitempty"`

	// (String) Unit symbol has to be unique.
	// Unit symbol has to be unique.
	Symbol *string `json:"symbol,omitempty" tf:"symbol,omitempty"`
}

type CustomUnitsObservation struct {

	// (String) Unit description should provide additional information about the new unit
	// Unit description should provide additional information about the new unit
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Unit name has to be unique and is used as identifier.
	// Unit name has to be unique and is used as identifier.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unit plural name represent the plural form of the unit name.
	// Unit plural name represent the plural form of the unit name.
	PluralName *string `json:"pluralName,omitempty" tf:"plural_name,omitempty"`

	// (String) Unit symbol has to be unique.
	// Unit symbol has to be unique.
	Symbol *string `json:"symbol,omitempty" tf:"symbol,omitempty"`
}

type CustomUnitsParameters struct {

	// (String) Unit description should provide additional information about the new unit
	// Unit description should provide additional information about the new unit
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Unit name has to be unique and is used as identifier.
	// Unit name has to be unique and is used as identifier.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unit plural name represent the plural form of the unit name.
	// Unit plural name represent the plural form of the unit name.
	// +kubebuilder:validation:Optional
	PluralName *string `json:"pluralName,omitempty" tf:"plural_name,omitempty"`

	// (String) Unit symbol has to be unique.
	// Unit symbol has to be unique.
	// +kubebuilder:validation:Optional
	Symbol *string `json:"symbol,omitempty" tf:"symbol,omitempty"`
}

// CustomUnitsSpec defines the desired state of CustomUnits
type CustomUnitsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomUnitsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomUnitsInitParameters `json:"initProvider,omitempty"`
}

// CustomUnitsStatus defines the observed state of CustomUnits.
type CustomUnitsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomUnitsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomUnits is the Schema for the CustomUnitss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CustomUnits struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || (has(self.initProvider) && has(self.initProvider.description))",message="spec.forProvider.description is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pluralName) || (has(self.initProvider) && has(self.initProvider.pluralName))",message="spec.forProvider.pluralName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.symbol) || (has(self.initProvider) && has(self.initProvider.symbol))",message="spec.forProvider.symbol is a required parameter"
	Spec   CustomUnitsSpec   `json:"spec"`
	Status CustomUnitsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomUnitsList contains a list of CustomUnitss
type CustomUnitsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomUnits `json:"items"`
}

// Repository type metadata.
var (
	CustomUnits_Kind             = "CustomUnits"
	CustomUnits_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomUnits_Kind}.String()
	CustomUnits_KindAPIVersion   = CustomUnits_Kind + "." + CRDGroupVersion.String()
	CustomUnits_GroupVersionKind = CRDGroupVersion.WithKind(CustomUnits_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomUnits{}, &CustomUnitsList{})
}
