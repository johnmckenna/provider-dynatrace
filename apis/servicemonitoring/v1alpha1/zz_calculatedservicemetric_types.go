// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BooleanInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*bool `json:"values,omitempty" tf:"values,omitempty"`
}

type BooleanObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *bool `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*bool `json:"values,omitempty" tf:"values,omitempty"`
}

type BooleanParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *bool `json:"value" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*bool `json:"values,omitempty" tf:"values,omitempty"`
}

type CalculatedServiceMetricConditionsInitParameters struct {

	// (Block List) A conditions for the metric usage (see below for nested schema)
	// A conditions for the metric usage
	Condition []ConditionsConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type CalculatedServiceMetricConditionsObservation struct {

	// (Block List) A conditions for the metric usage (see below for nested schema)
	// A conditions for the metric usage
	Condition []ConditionsConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`
}

type CalculatedServiceMetricConditionsParameters struct {

	// (Block List) A conditions for the metric usage (see below for nested schema)
	// A conditions for the metric usage
	// +kubebuilder:validation:Optional
	Condition []ConditionsConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`
}

type CalculatedServiceMetricInitParameters struct {

	// (Block List) The set of conditions for the metric usage. All the specified conditions must be fulfilled to use the metric (see below for nested schema)
	// The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric
	Conditions []CalculatedServiceMetricConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) The displayed description of the metric
	// The displayed description of the metric
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Parameters of a definition of a calculated service metric (see below for nested schema)
	// Parameters of a definition of a calculated service metric
	DimensionDefinition []DimensionDefinitionInitParameters `json:"dimensionDefinition,omitempty" tf:"dimension_definition,omitempty"`

	// (Boolean) The metric is enabled (true) or disabled (false)
	// The metric is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Restricts the metric usage to the specified service. This field is mutually exclusive with the management_zones field
	// Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field
	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	// (Boolean) Metric should (true) or not (false) ignore muted requests.
	// Metric should (true) or not (false) ignore muted requests.
	IgnoreMutedRequests *bool `json:"ignoreMutedRequests,omitempty" tf:"ignore_muted_requests,omitempty"`

	// (Set of String) Restricts the metric usage to specified management zones. This field is mutually exclusive with the entity_id field
	// Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (Block List, Max: 1) The definition of a calculated service metric (see below for nested schema)
	// The definition of a calculated service metric
	MetricDefinition []MetricDefinitionInitParameters `json:"metricDefinition,omitempty" tf:"metric_definition,omitempty"`

	// (String) The key of the calculated service metric
	// The key of the calculated service metric
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) The displayed name of the metric
	// The displayed name of the metric
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The unit of the metric. Possible values are BIT, BIT_PER_HOUR, BIT_PER_MINUTE, BIT_PER_SECOND, BYTE, BYTE_PER_HOUR, BYTE_PER_MINUTE, BYTE_PER_SECOND, CORES, COUNT, DAY, DECIBEL_MILLI_WATT, GIBI_BYTE, GIGA, GIGA_BYTE, HOUR, KIBI_BYTE, KIBI_BYTE_PER_HOUR, KIBI_BYTE_PER_MINUTE, KIBI_BYTE_PER_SECOND, KILO, KILO_BYTE, KILO_BYTE_PER_HOUR, KILO_BYTE_PER_MINUTE, KILO_BYTE_PER_SECOND, MEBI_BYTE, MEBI_BYTE_PER_HOUR, MEBI_BYTE_PER_MINUTE, MEBI_BYTE_PER_SECOND, MEGA, MEGA_BYTE, MEGA_BYTE_PER_HOUR, MEGA_BYTE_PER_MINUTE, MEGA_BYTE_PER_SECOND, MICRO_SECOND, MILLI_CORES, MILLI_SECOND, MILLI_SECOND_PER_MINUTE, MINUTE, MONTH, MSU, NANO_SECOND, NANO_SECOND_PER_MINUTE, NOT_APPLICABLE, PERCENT, PER_HOUR, PER_MINUTE, PER_SECOND, PIXEL, PROMILLE, RATIO, SECOND, STATE, UNSPECIFIED, WEEK and YEAR
	// The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`, `BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`, `GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`, `KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`, `MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`, `MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`, `MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The display name of the metric's unit. Only applicable when the unit parameter is set to UNSPECIFIED
	// The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`
	UnitDisplayName *string `json:"unitDisplayName,omitempty" tf:"unit_display_name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CalculatedServiceMetricObservation struct {

	// (Block List) The set of conditions for the metric usage. All the specified conditions must be fulfilled to use the metric (see below for nested schema)
	// The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric
	Conditions []CalculatedServiceMetricConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) The displayed description of the metric
	// The displayed description of the metric
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Parameters of a definition of a calculated service metric (see below for nested schema)
	// Parameters of a definition of a calculated service metric
	DimensionDefinition []DimensionDefinitionObservation `json:"dimensionDefinition,omitempty" tf:"dimension_definition,omitempty"`

	// (Boolean) The metric is enabled (true) or disabled (false)
	// The metric is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Restricts the metric usage to the specified service. This field is mutually exclusive with the management_zones field
	// Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field
	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Metric should (true) or not (false) ignore muted requests.
	// Metric should (true) or not (false) ignore muted requests.
	IgnoreMutedRequests *bool `json:"ignoreMutedRequests,omitempty" tf:"ignore_muted_requests,omitempty"`

	// (Set of String) Restricts the metric usage to specified management zones. This field is mutually exclusive with the entity_id field
	// Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (Block List, Max: 1) The definition of a calculated service metric (see below for nested schema)
	// The definition of a calculated service metric
	MetricDefinition []MetricDefinitionObservation `json:"metricDefinition,omitempty" tf:"metric_definition,omitempty"`

	// (String) The key of the calculated service metric
	// The key of the calculated service metric
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) The displayed name of the metric
	// The displayed name of the metric
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The unit of the metric. Possible values are BIT, BIT_PER_HOUR, BIT_PER_MINUTE, BIT_PER_SECOND, BYTE, BYTE_PER_HOUR, BYTE_PER_MINUTE, BYTE_PER_SECOND, CORES, COUNT, DAY, DECIBEL_MILLI_WATT, GIBI_BYTE, GIGA, GIGA_BYTE, HOUR, KIBI_BYTE, KIBI_BYTE_PER_HOUR, KIBI_BYTE_PER_MINUTE, KIBI_BYTE_PER_SECOND, KILO, KILO_BYTE, KILO_BYTE_PER_HOUR, KILO_BYTE_PER_MINUTE, KILO_BYTE_PER_SECOND, MEBI_BYTE, MEBI_BYTE_PER_HOUR, MEBI_BYTE_PER_MINUTE, MEBI_BYTE_PER_SECOND, MEGA, MEGA_BYTE, MEGA_BYTE_PER_HOUR, MEGA_BYTE_PER_MINUTE, MEGA_BYTE_PER_SECOND, MICRO_SECOND, MILLI_CORES, MILLI_SECOND, MILLI_SECOND_PER_MINUTE, MINUTE, MONTH, MSU, NANO_SECOND, NANO_SECOND_PER_MINUTE, NOT_APPLICABLE, PERCENT, PER_HOUR, PER_MINUTE, PER_SECOND, PIXEL, PROMILLE, RATIO, SECOND, STATE, UNSPECIFIED, WEEK and YEAR
	// The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`, `BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`, `GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`, `KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`, `MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`, `MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`, `MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The display name of the metric's unit. Only applicable when the unit parameter is set to UNSPECIFIED
	// The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`
	UnitDisplayName *string `json:"unitDisplayName,omitempty" tf:"unit_display_name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type CalculatedServiceMetricParameters struct {

	// (Block List) The set of conditions for the metric usage. All the specified conditions must be fulfilled to use the metric (see below for nested schema)
	// The set of conditions for the metric usage. **All** the specified conditions must be fulfilled to use the metric
	// +kubebuilder:validation:Optional
	Conditions []CalculatedServiceMetricConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// (String) The displayed description of the metric
	// The displayed description of the metric
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Parameters of a definition of a calculated service metric (see below for nested schema)
	// Parameters of a definition of a calculated service metric
	// +kubebuilder:validation:Optional
	DimensionDefinition []DimensionDefinitionParameters `json:"dimensionDefinition,omitempty" tf:"dimension_definition,omitempty"`

	// (Boolean) The metric is enabled (true) or disabled (false)
	// The metric is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Restricts the metric usage to the specified service. This field is mutually exclusive with the management_zones field
	// Restricts the metric usage to the specified service. This field is mutually exclusive with the `management_zones` field
	// +kubebuilder:validation:Optional
	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	// (Boolean) Metric should (true) or not (false) ignore muted requests.
	// Metric should (true) or not (false) ignore muted requests.
	// +kubebuilder:validation:Optional
	IgnoreMutedRequests *bool `json:"ignoreMutedRequests,omitempty" tf:"ignore_muted_requests,omitempty"`

	// (Set of String) Restricts the metric usage to specified management zones. This field is mutually exclusive with the entity_id field
	// Restricts the metric usage to specified management zones. This field is mutually exclusive with the `entity_id` field
	// +kubebuilder:validation:Optional
	// +listType=set
	ManagementZones []*string `json:"managementZones,omitempty" tf:"management_zones,omitempty"`

	// (Block List, Max: 1) The definition of a calculated service metric (see below for nested schema)
	// The definition of a calculated service metric
	// +kubebuilder:validation:Optional
	MetricDefinition []MetricDefinitionParameters `json:"metricDefinition,omitempty" tf:"metric_definition,omitempty"`

	// (String) The key of the calculated service metric
	// The key of the calculated service metric
	// +kubebuilder:validation:Optional
	MetricKey *string `json:"metricKey,omitempty" tf:"metric_key,omitempty"`

	// (String) The displayed name of the metric
	// The displayed name of the metric
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The unit of the metric. Possible values are BIT, BIT_PER_HOUR, BIT_PER_MINUTE, BIT_PER_SECOND, BYTE, BYTE_PER_HOUR, BYTE_PER_MINUTE, BYTE_PER_SECOND, CORES, COUNT, DAY, DECIBEL_MILLI_WATT, GIBI_BYTE, GIGA, GIGA_BYTE, HOUR, KIBI_BYTE, KIBI_BYTE_PER_HOUR, KIBI_BYTE_PER_MINUTE, KIBI_BYTE_PER_SECOND, KILO, KILO_BYTE, KILO_BYTE_PER_HOUR, KILO_BYTE_PER_MINUTE, KILO_BYTE_PER_SECOND, MEBI_BYTE, MEBI_BYTE_PER_HOUR, MEBI_BYTE_PER_MINUTE, MEBI_BYTE_PER_SECOND, MEGA, MEGA_BYTE, MEGA_BYTE_PER_HOUR, MEGA_BYTE_PER_MINUTE, MEGA_BYTE_PER_SECOND, MICRO_SECOND, MILLI_CORES, MILLI_SECOND, MILLI_SECOND_PER_MINUTE, MINUTE, MONTH, MSU, NANO_SECOND, NANO_SECOND_PER_MINUTE, NOT_APPLICABLE, PERCENT, PER_HOUR, PER_MINUTE, PER_SECOND, PIXEL, PROMILLE, RATIO, SECOND, STATE, UNSPECIFIED, WEEK and YEAR
	// The unit of the metric. Possible values are `BIT`, `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`, `BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`, `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`, `GIGA`, `GIGA_BYTE`, `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`, `KIBI_BYTE_PER_SECOND`, `KILO`, `KILO_BYTE`, `KILO_BYTE_PER_HOUR`, `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`, `MEBI_BYTE_PER_HOUR`, `MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`, `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`, `MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`, `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`, `MSU`, `NANO_SECOND`, `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `PIXEL`, `PROMILLE`, `RATIO`, `SECOND`, `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`
	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// (String) The display name of the metric's unit. Only applicable when the unit parameter is set to UNSPECIFIED
	// The display name of the metric's unit. Only applicable when the **unit** parameter is set to `UNSPECIFIED`
	// +kubebuilder:validation:Optional
	UnitDisplayName *string `json:"unitDisplayName,omitempty" tf:"unit_display_name,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ComparisonInitParameters struct {

	// (Block List, Max: 1) Boolean Comparison for BOOLEAN attributes (see below for nested schema)
	// Boolean Comparison for `BOOLEAN` attributes
	Boolean []BooleanInitParameters `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE' (see below for nested schema)
	// Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'
	EsbInputNodeType []EsbInputNodeTypeInitParameters `json:"esbInputNodeType,omitempty" tf:"esb_input_node_type,omitempty"`

	// (Block List, Max: 1) Comparison for FAILED_STATE attributes (see below for nested schema)
	// Comparison for `FAILED_STATE` attributes
	FailedState []FailedStateInitParameters `json:"failedState,omitempty" tf:"failed_state,omitempty"`

	// (Block List, Max: 1) Comparison for FAILURE_REASON attributes (see below for nested schema)
	// Comparison for `FAILURE_REASON` attributes
	FailureReason []FailureReasonInitParameters `json:"failureReason,omitempty" tf:"failure_reason,omitempty"`

	// (Block List, Max: 1) Comparison for FAST_STRING attributes. Use it for all service property attributes (see below for nested schema)
	// Comparison for `FAST_STRING` attributes. Use it for all service property attributes
	FastString []FastStringInitParameters `json:"fastString,omitempty" tf:"fast_string,omitempty"`

	// (Block List, Max: 1) Comparison for FLAW_STATE attributes (see below for nested schema)
	// Comparison for `FLAW_STATE` attributes
	FlawState []FlawStateInitParameters `json:"flawState,omitempty" tf:"flaw_state,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	Generic []GenericInitParameters `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_METHOD attributes (see below for nested schema)
	// Comparison for `HTTP_METHOD` attributes
	HTTPMethod []HTTPMethodInitParameters `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_STATUS_CLASS attributes (see below for nested schema)
	// Comparison for `HTTP_STATUS_CLASS` attributes
	HTTPStatusClass []HTTPStatusClassInitParameters `json:"httpStatusClass,omitempty" tf:"http_status_class,omitempty"`

	// (Block List, Max: 1) Comparison for IIB_INPUT_NODE_TYPE attributes (see below for nested schema)
	// Comparison for `IIB_INPUT_NODE_TYPE` attributes
	IibInputNodeType []IibInputNodeTypeInitParameters `json:"iibInputNodeType,omitempty" tf:"iib_input_node_type,omitempty"`

	// (Boolean) Reverse the comparison operator. For example, it turns equals into does not equal
	// Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	Number []NumberInitParameters `json:"number,omitempty" tf:"number,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes
	NumberRequestAttribute []NumberRequestAttributeInitParameters `json:"numberRequestAttribute,omitempty" tf:"number_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for SERVICE_TYPE attributes (see below for nested schema)
	// Comparison for `SERVICE_TYPE` attributes
	ServiceType []ServiceTypeInitParameters `json:"serviceType,omitempty" tf:"service_type,omitempty"`

	// (Block List, Max: 1) Comparison for STRING attributes (see below for nested schema)
	// Comparison for `STRING` attributes
	String []StringInitParameters `json:"string,omitempty" tf:"string,omitempty"`

	// (Block List, Max: 1) Comparison for STRING_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `STRING_REQUEST_ATTRIBUTE` attributes
	StringRequestAttribute []StringRequestAttributeInitParameters `json:"stringRequestAttribute,omitempty" tf:"string_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for TAG attributes (see below for nested schema)
	// Comparison for `TAG` attributes
	Tag []TagInitParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Block List, Max: 1) Comparison for ZOS_CALL_TYPE attributes (see below for nested schema)
	// Comparison for `ZOS_CALL_TYPE` attributes
	ZosCallType []ZosCallTypeInitParameters `json:"zosCallType,omitempty" tf:"zos_call_type,omitempty"`
}

type ComparisonObservation struct {

	// (Block List, Max: 1) Boolean Comparison for BOOLEAN attributes (see below for nested schema)
	// Boolean Comparison for `BOOLEAN` attributes
	Boolean []BooleanObservation `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE' (see below for nested schema)
	// Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'
	EsbInputNodeType []EsbInputNodeTypeObservation `json:"esbInputNodeType,omitempty" tf:"esb_input_node_type,omitempty"`

	// (Block List, Max: 1) Comparison for FAILED_STATE attributes (see below for nested schema)
	// Comparison for `FAILED_STATE` attributes
	FailedState []FailedStateObservation `json:"failedState,omitempty" tf:"failed_state,omitempty"`

	// (Block List, Max: 1) Comparison for FAILURE_REASON attributes (see below for nested schema)
	// Comparison for `FAILURE_REASON` attributes
	FailureReason []FailureReasonObservation `json:"failureReason,omitempty" tf:"failure_reason,omitempty"`

	// (Block List, Max: 1) Comparison for FAST_STRING attributes. Use it for all service property attributes (see below for nested schema)
	// Comparison for `FAST_STRING` attributes. Use it for all service property attributes
	FastString []FastStringObservation `json:"fastString,omitempty" tf:"fast_string,omitempty"`

	// (Block List, Max: 1) Comparison for FLAW_STATE attributes (see below for nested schema)
	// Comparison for `FLAW_STATE` attributes
	FlawState []FlawStateObservation `json:"flawState,omitempty" tf:"flaw_state,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	Generic []GenericObservation `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_METHOD attributes (see below for nested schema)
	// Comparison for `HTTP_METHOD` attributes
	HTTPMethod []HTTPMethodObservation `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_STATUS_CLASS attributes (see below for nested schema)
	// Comparison for `HTTP_STATUS_CLASS` attributes
	HTTPStatusClass []HTTPStatusClassObservation `json:"httpStatusClass,omitempty" tf:"http_status_class,omitempty"`

	// (Block List, Max: 1) Comparison for IIB_INPUT_NODE_TYPE attributes (see below for nested schema)
	// Comparison for `IIB_INPUT_NODE_TYPE` attributes
	IibInputNodeType []IibInputNodeTypeObservation `json:"iibInputNodeType,omitempty" tf:"iib_input_node_type,omitempty"`

	// (Boolean) Reverse the comparison operator. For example, it turns equals into does not equal
	// Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	Number []NumberObservation `json:"number,omitempty" tf:"number,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes
	NumberRequestAttribute []NumberRequestAttributeObservation `json:"numberRequestAttribute,omitempty" tf:"number_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for SERVICE_TYPE attributes (see below for nested schema)
	// Comparison for `SERVICE_TYPE` attributes
	ServiceType []ServiceTypeObservation `json:"serviceType,omitempty" tf:"service_type,omitempty"`

	// (Block List, Max: 1) Comparison for STRING attributes (see below for nested schema)
	// Comparison for `STRING` attributes
	String []StringObservation `json:"string,omitempty" tf:"string,omitempty"`

	// (Block List, Max: 1) Comparison for STRING_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `STRING_REQUEST_ATTRIBUTE` attributes
	StringRequestAttribute []StringRequestAttributeObservation `json:"stringRequestAttribute,omitempty" tf:"string_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for TAG attributes (see below for nested schema)
	// Comparison for `TAG` attributes
	Tag []TagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Block List, Max: 1) Comparison for ZOS_CALL_TYPE attributes (see below for nested schema)
	// Comparison for `ZOS_CALL_TYPE` attributes
	ZosCallType []ZosCallTypeObservation `json:"zosCallType,omitempty" tf:"zos_call_type,omitempty"`
}

type ComparisonParameters struct {

	// (Block List, Max: 1) Boolean Comparison for BOOLEAN attributes (see below for nested schema)
	// Boolean Comparison for `BOOLEAN` attributes
	// +kubebuilder:validation:Optional
	Boolean []BooleanParameters `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE' (see below for nested schema)
	// Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'
	// +kubebuilder:validation:Optional
	EsbInputNodeType []EsbInputNodeTypeParameters `json:"esbInputNodeType,omitempty" tf:"esb_input_node_type,omitempty"`

	// (Block List, Max: 1) Comparison for FAILED_STATE attributes (see below for nested schema)
	// Comparison for `FAILED_STATE` attributes
	// +kubebuilder:validation:Optional
	FailedState []FailedStateParameters `json:"failedState,omitempty" tf:"failed_state,omitempty"`

	// (Block List, Max: 1) Comparison for FAILURE_REASON attributes (see below for nested schema)
	// Comparison for `FAILURE_REASON` attributes
	// +kubebuilder:validation:Optional
	FailureReason []FailureReasonParameters `json:"failureReason,omitempty" tf:"failure_reason,omitempty"`

	// (Block List, Max: 1) Comparison for FAST_STRING attributes. Use it for all service property attributes (see below for nested schema)
	// Comparison for `FAST_STRING` attributes. Use it for all service property attributes
	// +kubebuilder:validation:Optional
	FastString []FastStringParameters `json:"fastString,omitempty" tf:"fast_string,omitempty"`

	// (Block List, Max: 1) Comparison for FLAW_STATE attributes (see below for nested schema)
	// Comparison for `FLAW_STATE` attributes
	// +kubebuilder:validation:Optional
	FlawState []FlawStateParameters `json:"flawState,omitempty" tf:"flaw_state,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	// +kubebuilder:validation:Optional
	Generic []GenericParameters `json:"generic,omitempty" tf:"generic,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_METHOD attributes (see below for nested schema)
	// Comparison for `HTTP_METHOD` attributes
	// +kubebuilder:validation:Optional
	HTTPMethod []HTTPMethodParameters `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// (Block List, Max: 1) Comparison for HTTP_STATUS_CLASS attributes (see below for nested schema)
	// Comparison for `HTTP_STATUS_CLASS` attributes
	// +kubebuilder:validation:Optional
	HTTPStatusClass []HTTPStatusClassParameters `json:"httpStatusClass,omitempty" tf:"http_status_class,omitempty"`

	// (Block List, Max: 1) Comparison for IIB_INPUT_NODE_TYPE attributes (see below for nested schema)
	// Comparison for `IIB_INPUT_NODE_TYPE` attributes
	// +kubebuilder:validation:Optional
	IibInputNodeType []IibInputNodeTypeParameters `json:"iibInputNodeType,omitempty" tf:"iib_input_node_type,omitempty"`

	// (Boolean) Reverse the comparison operator. For example, it turns equals into does not equal
	// Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER attributes (see below for nested schema)
	// Comparison for `NUMBER` attributes
	// +kubebuilder:validation:Optional
	Number []NumberParameters `json:"number,omitempty" tf:"number,omitempty"`

	// (Block List, Max: 1) Comparison for NUMBER_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes
	// +kubebuilder:validation:Optional
	NumberRequestAttribute []NumberRequestAttributeParameters `json:"numberRequestAttribute,omitempty" tf:"number_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for SERVICE_TYPE attributes (see below for nested schema)
	// Comparison for `SERVICE_TYPE` attributes
	// +kubebuilder:validation:Optional
	ServiceType []ServiceTypeParameters `json:"serviceType,omitempty" tf:"service_type,omitempty"`

	// (Block List, Max: 1) Comparison for STRING attributes (see below for nested schema)
	// Comparison for `STRING` attributes
	// +kubebuilder:validation:Optional
	String []StringParameters `json:"string,omitempty" tf:"string,omitempty"`

	// (Block List, Max: 1) Comparison for STRING_REQUEST_ATTRIBUTE attributes (see below for nested schema)
	// Comparison for `STRING_REQUEST_ATTRIBUTE` attributes
	// +kubebuilder:validation:Optional
	StringRequestAttribute []StringRequestAttributeParameters `json:"stringRequestAttribute,omitempty" tf:"string_request_attribute,omitempty"`

	// (Block List, Max: 1) Comparison for TAG attributes (see below for nested schema)
	// Comparison for `TAG` attributes
	// +kubebuilder:validation:Optional
	Tag []TagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// (Block List, Max: 1) Comparison for ZOS_CALL_TYPE attributes (see below for nested schema)
	// Comparison for `ZOS_CALL_TYPE` attributes
	// +kubebuilder:validation:Optional
	ZosCallType []ZosCallTypeParameters `json:"zosCallType,omitempty" tf:"zos_call_type,omitempty"`
}

type ConditionsConditionInitParameters struct {

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to be matched.  Note that for a service property attribute you must use the comparison of the `FAST_STRING` type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// specific comparison for attributes (see below for nested schema)
	// Type-specific comparison for attributes
	Comparison []ComparisonInitParameters `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ConditionsConditionObservation struct {

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to be matched.  Note that for a service property attribute you must use the comparison of the `FAST_STRING` type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// specific comparison for attributes (see below for nested schema)
	// Type-specific comparison for attributes
	Comparison []ComparisonObservation `json:"comparison,omitempty" tf:"comparison,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ConditionsConditionParameters struct {

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to be matched.  Note that for a service property attribute you must use the comparison of the `FAST_STRING` type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// specific comparison for attributes (see below for nested schema)
	// Type-specific comparison for attributes
	// +kubebuilder:validation:Optional
	Comparison []ComparisonParameters `json:"comparison" tf:"comparison,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionDefinitionInitParameters struct {

	// (String) The dimension value pattern. You can define custom placeholders in the placeholders field and use them here
	// The dimension value pattern. You can define custom placeholders in the `placeholders` field and use them here
	Dimension *string `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// (String) The displayed name of the metric
	// The name of the dimension
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Max: 1) The list of custom placeholders to be used in a dimension value pattern (see below for nested schema)
	// The list of custom placeholders to be used in a dimension value pattern
	Placeholders []PlaceholdersInitParameters `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Number) The number of top values to be calculated
	// The number of top values to be calculated
	TopX *float64 `json:"topX,omitempty" tf:"top_x,omitempty"`

	// (String) The aggregation of the dimension. Possible values are AVERAGE, COUNT, MAX, MIN, OF_INTEREST_RATIO, OTHER_RATIO, SINGLE_VALUE and SUM
	// The aggregation of the dimension. Possible values are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`, `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
	TopXAggregation *string `json:"topXAggregation,omitempty" tf:"top_x_aggregation,omitempty"`

	// (String) How to calculate the topX values. Possible values are ASCENDING and DESCENDING
	// How to calculate the **topX** values. Possible values are `ASCENDING` and `DESCENDING`
	TopXDirection *string `json:"topXDirection,omitempty" tf:"top_x_direction,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionDefinitionObservation struct {

	// (String) The dimension value pattern. You can define custom placeholders in the placeholders field and use them here
	// The dimension value pattern. You can define custom placeholders in the `placeholders` field and use them here
	Dimension *string `json:"dimension,omitempty" tf:"dimension,omitempty"`

	// (String) The displayed name of the metric
	// The name of the dimension
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Max: 1) The list of custom placeholders to be used in a dimension value pattern (see below for nested schema)
	// The list of custom placeholders to be used in a dimension value pattern
	Placeholders []PlaceholdersObservation `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Number) The number of top values to be calculated
	// The number of top values to be calculated
	TopX *float64 `json:"topX,omitempty" tf:"top_x,omitempty"`

	// (String) The aggregation of the dimension. Possible values are AVERAGE, COUNT, MAX, MIN, OF_INTEREST_RATIO, OTHER_RATIO, SINGLE_VALUE and SUM
	// The aggregation of the dimension. Possible values are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`, `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
	TopXAggregation *string `json:"topXAggregation,omitempty" tf:"top_x_aggregation,omitempty"`

	// (String) How to calculate the topX values. Possible values are ASCENDING and DESCENDING
	// How to calculate the **topX** values. Possible values are `ASCENDING` and `DESCENDING`
	TopXDirection *string `json:"topXDirection,omitempty" tf:"top_x_direction,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type DimensionDefinitionParameters struct {

	// (String) The dimension value pattern. You can define custom placeholders in the placeholders field and use them here
	// The dimension value pattern. You can define custom placeholders in the `placeholders` field and use them here
	// +kubebuilder:validation:Optional
	Dimension *string `json:"dimension" tf:"dimension,omitempty"`

	// (String) The displayed name of the metric
	// The name of the dimension
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Block List, Max: 1) The list of custom placeholders to be used in a dimension value pattern (see below for nested schema)
	// The list of custom placeholders to be used in a dimension value pattern
	// +kubebuilder:validation:Optional
	Placeholders []PlaceholdersParameters `json:"placeholders,omitempty" tf:"placeholders,omitempty"`

	// (Number) The number of top values to be calculated
	// The number of top values to be calculated
	// +kubebuilder:validation:Optional
	TopX *float64 `json:"topX" tf:"top_x,omitempty"`

	// (String) The aggregation of the dimension. Possible values are AVERAGE, COUNT, MAX, MIN, OF_INTEREST_RATIO, OTHER_RATIO, SINGLE_VALUE and SUM
	// The aggregation of the dimension. Possible values are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`, `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
	// +kubebuilder:validation:Optional
	TopXAggregation *string `json:"topXAggregation" tf:"top_x_aggregation,omitempty"`

	// (String) How to calculate the topX values. Possible values are ASCENDING and DESCENDING
	// How to calculate the **topX** values. Possible values are `ASCENDING` and `DESCENDING`
	// +kubebuilder:validation:Optional
	TopXDirection *string `json:"topXDirection" tf:"top_x_direction,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type EsbInputNodeTypeInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type EsbInputNodeTypeObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type EsbInputNodeTypeParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailedStateInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FAILED` and `FAILED`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FAILED` and `FAILED`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailedStateObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FAILED` and `FAILED`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FAILED` and `FAILED`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailedStateParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FAILED` and `FAILED`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FAILED` and `FAILED`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailureReasonInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailureReasonObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FailureReasonParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FastStringInitParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `CONTAINS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FastStringObservation struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `CONTAINS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FastStringParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `CONTAINS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FlawStateInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FlawStateObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type FlawStateParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GenericInitParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type GenericObservation struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type GenericParameters struct {

	// (String) Defines the actual set of fields depending on the value
	// Defines the actual set of fields depending on the value
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type HTTPMethodInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPMethodObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPMethodParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPStatusClassInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPStatusClassObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HTTPStatusClassParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type IibInputNodeTypeInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type IibInputNodeTypeObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type IibInputNodeTypeParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MetricDefinitionInitParameters struct {

	// (String) The metric to be captured. Possible values are CPU_TIME, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DISK_IO_TIME, EXCEPTION_COUNT, FAILED_REQUEST_COUNT, FAILED_REQUEST_COUNT_CLIENT, FAILURE_RATE, FAILURE_RATE_CLIENT, HTTP_4XX_ERROR_COUNT, HTTP_4XX_ERROR_COUNT_CLIENT, HTTP_5XX_ERROR_COUNT, HTTP_5XX_ERROR_COUNT_CLIENT, IO_TIME, LOCK_TIME, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESSING_TIME, REQUEST_ATTRIBUTE, REQUEST_COUNT, RESPONSE_TIME, RESPONSE_TIME_CLIENT, SUCCESSFUL_REQUEST_COUNT, SUCCESSFUL_REQUEST_COUNT_CLIENT and WAIT_TIME
	// The metric to be captured. Possible values are `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`, `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`, `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`, `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`, `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to be captured. Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`
}

type MetricDefinitionObservation struct {

	// (String) The metric to be captured. Possible values are CPU_TIME, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DISK_IO_TIME, EXCEPTION_COUNT, FAILED_REQUEST_COUNT, FAILED_REQUEST_COUNT_CLIENT, FAILURE_RATE, FAILURE_RATE_CLIENT, HTTP_4XX_ERROR_COUNT, HTTP_4XX_ERROR_COUNT_CLIENT, HTTP_5XX_ERROR_COUNT, HTTP_5XX_ERROR_COUNT_CLIENT, IO_TIME, LOCK_TIME, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESSING_TIME, REQUEST_ATTRIBUTE, REQUEST_COUNT, RESPONSE_TIME, RESPONSE_TIME_CLIENT, SUCCESSFUL_REQUEST_COUNT, SUCCESSFUL_REQUEST_COUNT_CLIENT and WAIT_TIME
	// The metric to be captured. Possible values are `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`, `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`, `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`, `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`, `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to be captured. Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`
}

type MetricDefinitionParameters struct {

	// (String) The metric to be captured. Possible values are CPU_TIME, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DISK_IO_TIME, EXCEPTION_COUNT, FAILED_REQUEST_COUNT, FAILED_REQUEST_COUNT_CLIENT, FAILURE_RATE, FAILURE_RATE_CLIENT, HTTP_4XX_ERROR_COUNT, HTTP_4XX_ERROR_COUNT_CLIENT, HTTP_5XX_ERROR_COUNT, HTTP_5XX_ERROR_COUNT_CLIENT, IO_TIME, LOCK_TIME, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESSING_TIME, REQUEST_ATTRIBUTE, REQUEST_COUNT, RESPONSE_TIME, RESPONSE_TIME_CLIENT, SUCCESSFUL_REQUEST_COUNT, SUCCESSFUL_REQUEST_COUNT_CLIENT and WAIT_TIME
	// The metric to be captured. Possible values are `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`, `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`, `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`, `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`, `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
	// +kubebuilder:validation:Optional
	Metric *string `json:"metric" tf:"metric,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to be captured. Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
	// +kubebuilder:validation:Optional
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`
}

type NumberInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberRequestAttributeInitParameters struct {

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []SourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberRequestAttributeObservation struct {

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []SourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type NumberRequestAttributeParameters struct {

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	// +kubebuilder:validation:Optional
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	// +kubebuilder:validation:Optional
	RequestAttribute *string `json:"requestAttribute" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	// +kubebuilder:validation:Optional
	Source []SourceParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*float64 `json:"values,omitempty" tf:"values,omitempty"`
}

type PlaceholderInitParameters struct {

	// (String) Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute, when useFromChildCalls is true. For the COUNT aggregation, the kind field is not applicable. Possible values are COUNT, FIRST and LAST.
	// Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. For the `COUNT` aggregation, the **kind** field is not applicable. Possible values are `COUNT`, `FIRST` and `LAST`.
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to extract from. You can only use attributes of the **string** type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Depending on the kind value:
	// Depending on the `kind` value:
	//
	// * `REGEX_EXTRACTION`: The regular expression.
	//
	// * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
	//
	// * All other values: The delimiter string to look for
	DelimiterOrRegex *string `json:"delimiterOrRegex,omitempty" tf:"delimiter_or_regex,omitempty"`

	// (String) The closing delimiter string to look for. Required if the kind value is BETWEEN_DELIMITER. Not applicable otherwise
	// The closing delimiter string to look for. Required if the `kind` value is `BETWEEN_DELIMITER`. Not applicable otherwise
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The type of extraction. Defines either usage of regular expression (regex) or the position of request attribute value to be extracted. When the attribute is SERVICE_REQUEST_ATTRIBUTE attribute and aggregation is COUNT, needs to be set to ORIGINAL_TEXT. Possible values are 	AFTER_DELIMITER, BEFORE_DELIMITER, BETWEEN_DELIMITER, ORIGINAL_TEXT and REGEX_EXTRACTION
	// The type of extraction. Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. When the `attribute` is `SERVICE_REQUEST_ATTRIBUTE` attribute and `aggregation` is `COUNT`, needs to be set to `ORIGINAL_TEXT`. Possible values are 	`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`, `ORIGINAL_TEXT` and `REGEX_EXTRACTION`
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// (String) The displayed name of the metric
	// The name of the placeholder. Use it in the naming pattern as `{name}`
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The format of the extracted string. Possible values are ORIGINAL, TO_LOWER_CASE and TO_UPPER_CASE
	// The format of the extracted string. Possible values are `ORIGINAL`, `TO_LOWER_CASE` and `TO_UPPER_CASE`
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to extract from. Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []PlaceholderSourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) If true request attribute will be taken from a child service call. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute. Defaults to false
	// If `true` request attribute will be taken from a child service call. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`
	UseFromChildCalls *bool `json:"useFromChildCalls,omitempty" tf:"use_from_child_calls,omitempty"`
}

type PlaceholderObservation struct {

	// (String) Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute, when useFromChildCalls is true. For the COUNT aggregation, the kind field is not applicable. Possible values are COUNT, FIRST and LAST.
	// Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. For the `COUNT` aggregation, the **kind** field is not applicable. Possible values are `COUNT`, `FIRST` and `LAST`.
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to extract from. You can only use attributes of the **string** type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	// (String) Depending on the kind value:
	// Depending on the `kind` value:
	//
	// * `REGEX_EXTRACTION`: The regular expression.
	//
	// * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
	//
	// * All other values: The delimiter string to look for
	DelimiterOrRegex *string `json:"delimiterOrRegex,omitempty" tf:"delimiter_or_regex,omitempty"`

	// (String) The closing delimiter string to look for. Required if the kind value is BETWEEN_DELIMITER. Not applicable otherwise
	// The closing delimiter string to look for. Required if the `kind` value is `BETWEEN_DELIMITER`. Not applicable otherwise
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The type of extraction. Defines either usage of regular expression (regex) or the position of request attribute value to be extracted. When the attribute is SERVICE_REQUEST_ATTRIBUTE attribute and aggregation is COUNT, needs to be set to ORIGINAL_TEXT. Possible values are 	AFTER_DELIMITER, BEFORE_DELIMITER, BETWEEN_DELIMITER, ORIGINAL_TEXT and REGEX_EXTRACTION
	// The type of extraction. Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. When the `attribute` is `SERVICE_REQUEST_ATTRIBUTE` attribute and `aggregation` is `COUNT`, needs to be set to `ORIGINAL_TEXT`. Possible values are 	`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`, `ORIGINAL_TEXT` and `REGEX_EXTRACTION`
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`

	// (String) The displayed name of the metric
	// The name of the placeholder. Use it in the naming pattern as `{name}`
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The format of the extracted string. Possible values are ORIGINAL, TO_LOWER_CASE and TO_UPPER_CASE
	// The format of the extracted string. Possible values are `ORIGINAL`, `TO_LOWER_CASE` and `TO_UPPER_CASE`
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to extract from. Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []PlaceholderSourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) If true request attribute will be taken from a child service call. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute. Defaults to false
	// If `true` request attribute will be taken from a child service call. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`
	UseFromChildCalls *bool `json:"useFromChildCalls,omitempty" tf:"use_from_child_calls,omitempty"`
}

type PlaceholderParameters struct {

	// (String) Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute, when useFromChildCalls is true. For the COUNT aggregation, the kind field is not applicable. Possible values are COUNT, FIRST and LAST.
	// Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. For the `COUNT` aggregation, the **kind** field is not applicable. Possible values are `COUNT`, `FIRST` and `LAST`.
	// +kubebuilder:validation:Optional
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (String) The attribute to be matched.  Note that for a service property attribute you must use the comparison of the FAST_STRING type. Possible values are ACTOR_SYSTEM, AKKA_ACTOR_CLASS_NAME, AKKA_ACTOR_MESSAGE_TYPE, AKKA_ACTOR_PATH, APPLICATION_BUILD_VERSION, APPLICATION_RELEASE_VERSION, AZURE_FUNCTIONS_FUNCTION_NAME, AZURE_FUNCTIONS_SITE_NAME, CICS_PROGRAM_NAME, CICS_SYSTEM_ID, CICS_TASK_ID, CICS_TRANSACTION_ID, CICS_USER_ID, CPU_TIME, CTG_GATEWAY_URL, CTG_PROGRAM, CTG_SERVER_NAME, CTG_TRANSACTION_ID, CUSTOMSERVICE_CLASS, CUSTOMSERVICE_METHOD, DATABASE_CHILD_CALL_COUNT, DATABASE_CHILD_CALL_TIME, DATABASE_HOST, DATABASE_NAME, DATABASE_TYPE, DATABASE_URL, DISK_IO_TIME, ERROR_COUNT, ESB_APPLICATION_NAME, ESB_INPUT_TYPE, ESB_LIBRARY_NAME, ESB_MESSAGE_FLOW_NAME, EXCEPTION_CLASS, EXCEPTION_MESSAGE, FAILED_STATE, FAILURE_REASON, FLAW_STATE, HTTP_REQUEST_METHOD, HTTP_STATUS, HTTP_STATUS_CLASS, IMS_PROGRAM_NAME, IMS_TRANSACTION_ID, IMS_USER_ID, IO_TIME, IS_KEY_REQUEST, LAMBDA_COLDSTART, LOCK_TIME, MESSAGING_DESTINATION_TYPE, MESSAGING_IS_TEMPORARY_QUEUE, MESSAGING_QUEUE_NAME, MESSAGING_QUEUE_VENDOR, NETWORK_IO_TIME, NON_DATABASE_CHILD_CALL_COUNT, NON_DATABASE_CHILD_CALL_TIME, PROCESS_GROUP_NAME, PROCESS_GROUP_TAG, REMOTE_ENDPOINT, REMOTE_METHOD, REMOTE_SERVICE_NAME, REQUEST_NAME, REQUEST_TYPE, RESPONSE_TIME, RESPONSE_TIME_CLIENT, RMI_CLASS, RMI_METHOD, SERVICE_DISPLAY_NAME, SERVICE_NAME, SERVICE_PORT, SERVICE_PUBLIC_DOMAIN_NAME, SERVICE_REQUEST_ATTRIBUTE, SERVICE_TAG, SERVICE_TYPE, SERVICE_WEB_APPLICATION_ID, SERVICE_WEB_CONTEXT_ROOT, SERVICE_WEB_SERVER_NAME, SERVICE_WEB_SERVICE_NAME, SERVICE_WEB_SERVICE_NAMESPACE, SUSPENSION_TIME, TOTAL_PROCESSING_TIME, WAIT_TIME, WEBREQUEST_QUERY, WEBREQUEST_RELATIVE_URL, WEBREQUEST_URL, WEBREQUEST_URL_HOST, WEBREQUEST_URL_PATH, WEBREQUEST_URL_PORT, WEBSERVICE_ENDPOINT, WEBSERVICE_METHOD and ZOS_CALL_TYPE
	// The attribute to extract from. You can only use attributes of the **string** type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// (String) Depending on the kind value:
	// Depending on the `kind` value:
	//
	// * `REGEX_EXTRACTION`: The regular expression.
	//
	// * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
	//
	// * All other values: The delimiter string to look for
	// +kubebuilder:validation:Optional
	DelimiterOrRegex *string `json:"delimiterOrRegex,omitempty" tf:"delimiter_or_regex,omitempty"`

	// (String) The closing delimiter string to look for. Required if the kind value is BETWEEN_DELIMITER. Not applicable otherwise
	// The closing delimiter string to look for. Required if the `kind` value is `BETWEEN_DELIMITER`. Not applicable otherwise
	// +kubebuilder:validation:Optional
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The type of extraction. Defines either usage of regular expression (regex) or the position of request attribute value to be extracted. When the attribute is SERVICE_REQUEST_ATTRIBUTE attribute and aggregation is COUNT, needs to be set to ORIGINAL_TEXT. Possible values are 	AFTER_DELIMITER, BEFORE_DELIMITER, BETWEEN_DELIMITER, ORIGINAL_TEXT and REGEX_EXTRACTION
	// The type of extraction. Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. When the `attribute` is `SERVICE_REQUEST_ATTRIBUTE` attribute and `aggregation` is `COUNT`, needs to be set to `ORIGINAL_TEXT`. Possible values are 	`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`, `ORIGINAL_TEXT` and `REGEX_EXTRACTION`
	// +kubebuilder:validation:Optional
	Kind *string `json:"kind" tf:"kind,omitempty"`

	// (String) The displayed name of the metric
	// The name of the placeholder. Use it in the naming pattern as `{name}`
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The format of the extracted string. Possible values are ORIGINAL, TO_LOWER_CASE and TO_UPPER_CASE
	// The format of the extracted string. Possible values are `ORIGINAL`, `TO_LOWER_CASE` and `TO_UPPER_CASE`
	// +kubebuilder:validation:Optional
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (String) No documentation available for this attribute
	// The request attribute to extract from. Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise
	// +kubebuilder:validation:Optional
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	// +kubebuilder:validation:Optional
	Source []PlaceholderSourceParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) If true request attribute will be taken from a child service call. Only applicable for the SERVICE_REQUEST_ATTRIBUTE attribute. Defaults to false
	// If `true` request attribute will be taken from a child service call. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`
	// +kubebuilder:validation:Optional
	UseFromChildCalls *bool `json:"useFromChildCalls,omitempty" tf:"use_from_child_calls,omitempty"`
}

type PlaceholderSourceInitParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []PlaceholderSourceServiceTagInitParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type PlaceholderSourceObservation struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []PlaceholderSourceServiceTagObservation `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type PlaceholderSourceParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	// +kubebuilder:validation:Optional
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	// +kubebuilder:validation:Optional
	ServiceTag []PlaceholderSourceServiceTagParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type PlaceholderSourceServiceTagInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []SourceServiceTagTagKeyInitParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PlaceholderSourceServiceTagObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []SourceServiceTagTagKeyObservation `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PlaceholderSourceServiceTagParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	// +kubebuilder:validation:Optional
	TagKey []SourceServiceTagTagKeyParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PlaceholdersInitParameters struct {

	// (Block List) A custom placeholder to be used in a dimension value pattern (see below for nested schema)
	// A custom placeholder to be used in a dimension value pattern
	Placeholder []PlaceholderInitParameters `json:"placeholder,omitempty" tf:"placeholder,omitempty"`
}

type PlaceholdersObservation struct {

	// (Block List) A custom placeholder to be used in a dimension value pattern (see below for nested schema)
	// A custom placeholder to be used in a dimension value pattern
	Placeholder []PlaceholderObservation `json:"placeholder,omitempty" tf:"placeholder,omitempty"`
}

type PlaceholdersParameters struct {

	// (Block List) A custom placeholder to be used in a dimension value pattern (see below for nested schema)
	// A custom placeholder to be used in a dimension value pattern
	// +kubebuilder:validation:Optional
	Placeholder []PlaceholderParameters `json:"placeholder,omitempty" tf:"placeholder,omitempty"`
}

type ServiceTagInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []TagKeyInitParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ServiceTagObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []TagKeyObservation `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ServiceTagParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	// +kubebuilder:validation:Optional
	TagKey []TagKeyParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ServiceTagTagKeyInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ServiceTagTagKeyObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ServiceTagTagKeyParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ServiceTypeInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ServiceTypeObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ServiceTypeParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SourceInitParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []ServiceTagInitParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SourceObservation struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []ServiceTagObservation `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SourceParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	// +kubebuilder:validation:Optional
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	// +kubebuilder:validation:Optional
	ServiceTag []ServiceTagParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type SourceServiceTagInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []ServiceTagTagKeyInitParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SourceServiceTagObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	TagKey []ServiceTagTagKeyObservation `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SourceServiceTagParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (Block List, Max: 1) has no documentation (see below for nested schema)
	// has no documentation
	// +kubebuilder:validation:Optional
	TagKey []ServiceTagTagKeyParameters `json:"tagKey,omitempty" tf:"tag_key,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SourceServiceTagTagKeyInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type SourceServiceTagTagKeyObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type SourceServiceTagTagKeyParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type StringInitParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringObservation struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringRequestAttributeInitParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []StringRequestAttributeSourceInitParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringRequestAttributeObservation struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	RequestAttribute *string `json:"requestAttribute,omitempty" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	Source []StringRequestAttributeSourceObservation `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringRequestAttributeParameters struct {

	// sensitive (true) or not case-sensitive (false)
	// The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive,omitempty"`

	// (Boolean) If true, the request attribute is matched on child service calls. Default is false
	// If `true`, the request attribute is matched on child service calls. Default is `false`
	// +kubebuilder:validation:Optional
	MatchOnChildCalls *bool `json:"matchOnChildCalls,omitempty" tf:"match_on_child_calls,omitempty"`

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) No documentation available for this attribute
	// No documentation available for this attribute
	// +kubebuilder:validation:Optional
	RequestAttribute *string `json:"requestAttribute" tf:"request_attribute,omitempty"`

	// (Block List, Max: 1) Defines valid sources of request attributes for conditions or placeholders (see below for nested schema)
	// Defines valid sources of request attributes for conditions or placeholders
	// +kubebuilder:validation:Optional
	Source []StringRequestAttributeSourceParameters `json:"source,omitempty" tf:"source,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type StringRequestAttributeSourceInitParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []SourceServiceTagInitParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type StringRequestAttributeSourceObservation struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	ServiceTag []SourceServiceTagObservation `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type StringRequestAttributeSourceParameters struct {

	// (String) Use only request attributes from services that belong to this management zone.. Use either this or serviceTag
	// Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
	// +kubebuilder:validation:Optional
	ManagementZone *string `json:"managementZone,omitempty" tf:"management_zone,omitempty"`

	// (Block List, Max: 1) Use only request attributes from services that have this tag. Use either this or managementZone (see below for nested schema)
	// Use only request attributes from services that have this tag. Use either this or `managementZone`
	// +kubebuilder:validation:Optional
	ServiceTag []SourceServiceTagParameters `json:"serviceTag,omitempty" tf:"service_tag,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type TagInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The values to compare to
	Value []ValueInitParameters `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	Values []ValuesInitParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type TagKeyInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type TagKeyObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type TagKeyParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// has no documentation
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// has no documentation
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type TagObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The values to compare to
	Value []ValueObservation `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	Values []ValuesObservation `json:"values,omitempty" tf:"values,omitempty"`
}

type TagParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	Value []ValueParameters `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	Values []ValuesParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type ValueInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValueObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValueParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	// +kubebuilder:validation:Optional
	Context *string `json:"context" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesInitParameters struct {

	// (Boolean) The value to compare to
	// The values to compare to
	Value []ValuesValueInitParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesObservation struct {

	// (Boolean) The value to compare to
	// The values to compare to
	Value []ValuesValueObservation `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesParameters struct {

	// (Boolean) The value to compare to
	// The values to compare to
	// +kubebuilder:validation:Optional
	Value []ValuesValueParameters `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesValueInitParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesValueObservation struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesValueParameters struct {

	// (String) The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the CONTEXTLESS value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, CONTEXTLESS set. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and KUBERNETES
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
	// +kubebuilder:validation:Optional
	Context *string `json:"context" tf:"context,omitempty"`

	// value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
	// The key of the tag. Custom tags have the tag value here
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value of the tag. Not applicable to custom tags
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ZosCallTypeInitParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ZosCallTypeObservation struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ZosCallTypeParameters struct {

	// (String) Operator of the comparison. You can reverse it by setting negate to true. Possible values are EQUALS, EQUALS_ANY_OF and EXISTS
	// Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Boolean) The value to compare to
	// The value to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (Set of Boolean) The values to compare to
	// The values to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

// CalculatedServiceMetricSpec defines the desired state of CalculatedServiceMetric
type CalculatedServiceMetricSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CalculatedServiceMetricParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CalculatedServiceMetricInitParameters `json:"initProvider,omitempty"`
}

// CalculatedServiceMetricStatus defines the observed state of CalculatedServiceMetric.
type CalculatedServiceMetricStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CalculatedServiceMetricObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CalculatedServiceMetric is the Schema for the CalculatedServiceMetrics API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CalculatedServiceMetric struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.metricKey) || (has(self.initProvider) && has(self.initProvider.metricKey))",message="spec.forProvider.metricKey is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.unit) || (has(self.initProvider) && has(self.initProvider.unit))",message="spec.forProvider.unit is a required parameter"
	Spec   CalculatedServiceMetricSpec   `json:"spec"`
	Status CalculatedServiceMetricStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CalculatedServiceMetricList contains a list of CalculatedServiceMetrics
type CalculatedServiceMetricList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CalculatedServiceMetric `json:"items"`
}

// Repository type metadata.
var (
	CalculatedServiceMetric_Kind             = "CalculatedServiceMetric"
	CalculatedServiceMetric_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CalculatedServiceMetric_Kind}.String()
	CalculatedServiceMetric_KindAPIVersion   = CalculatedServiceMetric_Kind + "." + CRDGroupVersion.String()
	CalculatedServiceMetric_GroupVersionKind = CRDGroupVersion.WithKind(CalculatedServiceMetric_Kind)
)

func init() {
	SchemeBuilder.Register(&CalculatedServiceMetric{}, &CalculatedServiceMetricList{})
}
