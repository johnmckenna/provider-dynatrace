// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MutedRequestsInitParameters struct {

	// (Set of String) Muted request names
	// Muted request names
	// +listType=set
	MutedRequestNames []*string `json:"mutedRequestNames,omitempty" tf:"muted_request_names,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`
}

type MutedRequestsObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Set of String) Muted request names
	// Muted request names
	// +listType=set
	MutedRequestNames []*string `json:"mutedRequestNames,omitempty" tf:"muted_request_names,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`
}

type MutedRequestsParameters struct {

	// (Set of String) Muted request names
	// Muted request names
	// +kubebuilder:validation:Optional
	// +listType=set
	MutedRequestNames []*string `json:"mutedRequestNames,omitempty" tf:"muted_request_names,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// +kubebuilder:validation:Optional
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`
}

// MutedRequestsSpec defines the desired state of MutedRequests
type MutedRequestsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MutedRequestsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MutedRequestsInitParameters `json:"initProvider,omitempty"`
}

// MutedRequestsStatus defines the observed state of MutedRequests.
type MutedRequestsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MutedRequestsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MutedRequests is the Schema for the MutedRequestss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type MutedRequests struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceId) || (has(self.initProvider) && has(self.initProvider.serviceId))",message="spec.forProvider.serviceId is a required parameter"
	Spec   MutedRequestsSpec   `json:"spec"`
	Status MutedRequestsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MutedRequestsList contains a list of MutedRequestss
type MutedRequestsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MutedRequests `json:"items"`
}

// Repository type metadata.
var (
	MutedRequests_Kind             = "MutedRequests"
	MutedRequests_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MutedRequests_Kind}.String()
	MutedRequests_KindAPIVersion   = MutedRequests_Kind + "." + CRDGroupVersion.String()
	MutedRequests_GroupVersionKind = CRDGroupVersion.WithKind(MutedRequests_Kind)
)

func init() {
	SchemeBuilder.Register(&MutedRequests{}, &MutedRequestsList{})
}
