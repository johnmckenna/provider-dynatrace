// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CicsSdkMethodNodeConditionInitParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CicsSdkMethodNodeConditionObservation struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CicsSdkMethodNodeConditionParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type DataSourcesInitParameters struct {

	// (String) Specifies the location where the values are captured and stored.  Required if the source is one of the following: GET_PARAMETER, URI, REQUEST_HEADER, RESPONSE_HEADER.   Not applicable in other cases.   If the source value is REQUEST_HEADER or RESPONSE_HEADER, the CAPTURE_AND_STORE_ON_BOTH location is not allowed
	// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
	CapturingAndStorageLocation *string `json:"capturingAndStorageLocation,omitempty" tf:"capturing_and_storage_location,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	CicsSdkMethodNodeCondition []CicsSdkMethodNodeConditionInitParameters `json:"cicsSdkMethodNodeCondition,omitempty" tf:"cics_sdk_method_node_condition,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The data source is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	IibLabelMethodNodeCondition []IibLabelMethodNodeConditionInitParameters `json:"iibLabelMethodNodeCondition,omitempty" tf:"iib_label_method_node_condition,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	IibMethodNodeCondition []IibMethodNodeConditionInitParameters `json:"iibMethodNodeCondition,omitempty" tf:"iib_method_node_condition,omitempty"`

	// (String) The IBM integration bus node type for which the value is captured.  This or iibMethodNodeCondition is required if the source is: IIB_NODE.  Not applicable in other cases
	// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
	IibNodeType *string `json:"iibNodeType,omitempty" tf:"iib_node_type,omitempty"`

	// (Block List) The method specification if the source value is METHOD_PARAM.   Not applicable in other cases (see below for nested schema)
	// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
	Methods []MethodsInitParameters `json:"methods,omitempty" tf:"methods,omitempty"`

	// (String) The name of the web request parameter to capture.  Required if the source is one of the following: POST_PARAMETER, GET_PARAMETER, REQUEST_HEADER, RESPONSE_HEADER, CUSTOM_ATTRIBUTE.  Not applicable in other cases
	// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name,omitempty"`

	// (Block List, Max: 1) Conditions for data capturing (see below for nested schema)
	// Conditions for data capturing
	Scope []ScopeInitParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) The technology of the session attribute to capture if the source value is SESSION_ATTRIBUTE.
	// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
	//
	// Not applicable in other cases
	SessionAttributeTechnology *string `json:"sessionAttributeTechnology,omitempty" tf:"session_attribute_technology,omitempty"`

	// (String) The source of the attribute to capture. Works in conjunction with parameterName or methods and technology
	// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// (String) The technology of the method to capture if the source value is METHOD_PARAM.
	// The technology of the method to capture if the **source** value is `METHOD_PARAM`.
	//
	// Not applicable in other cases
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) Process values as specified (see below for nested schema)
	// Process values as specified
	ValueProcessing []ValueProcessingInitParameters `json:"valueProcessing,omitempty" tf:"value_processing,omitempty"`
}

type DataSourcesObservation struct {

	// (String) Specifies the location where the values are captured and stored.  Required if the source is one of the following: GET_PARAMETER, URI, REQUEST_HEADER, RESPONSE_HEADER.   Not applicable in other cases.   If the source value is REQUEST_HEADER or RESPONSE_HEADER, the CAPTURE_AND_STORE_ON_BOTH location is not allowed
	// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
	CapturingAndStorageLocation *string `json:"capturingAndStorageLocation,omitempty" tf:"capturing_and_storage_location,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	CicsSdkMethodNodeCondition []CicsSdkMethodNodeConditionObservation `json:"cicsSdkMethodNodeCondition,omitempty" tf:"cics_sdk_method_node_condition,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The data source is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	IibLabelMethodNodeCondition []IibLabelMethodNodeConditionObservation `json:"iibLabelMethodNodeCondition,omitempty" tf:"iib_label_method_node_condition,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	IibMethodNodeCondition []IibMethodNodeConditionObservation `json:"iibMethodNodeCondition,omitempty" tf:"iib_method_node_condition,omitempty"`

	// (String) The IBM integration bus node type for which the value is captured.  This or iibMethodNodeCondition is required if the source is: IIB_NODE.  Not applicable in other cases
	// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
	IibNodeType *string `json:"iibNodeType,omitempty" tf:"iib_node_type,omitempty"`

	// (Block List) The method specification if the source value is METHOD_PARAM.   Not applicable in other cases (see below for nested schema)
	// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
	Methods []MethodsObservation `json:"methods,omitempty" tf:"methods,omitempty"`

	// (String) The name of the web request parameter to capture.  Required if the source is one of the following: POST_PARAMETER, GET_PARAMETER, REQUEST_HEADER, RESPONSE_HEADER, CUSTOM_ATTRIBUTE.  Not applicable in other cases
	// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name,omitempty"`

	// (Block List, Max: 1) Conditions for data capturing (see below for nested schema)
	// Conditions for data capturing
	Scope []ScopeObservation `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) The technology of the session attribute to capture if the source value is SESSION_ATTRIBUTE.
	// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
	//
	// Not applicable in other cases
	SessionAttributeTechnology *string `json:"sessionAttributeTechnology,omitempty" tf:"session_attribute_technology,omitempty"`

	// (String) The source of the attribute to capture. Works in conjunction with parameterName or methods and technology
	// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// (String) The technology of the method to capture if the source value is METHOD_PARAM.
	// The technology of the method to capture if the **source** value is `METHOD_PARAM`.
	//
	// Not applicable in other cases
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) Process values as specified (see below for nested schema)
	// Process values as specified
	ValueProcessing []ValueProcessingObservation `json:"valueProcessing,omitempty" tf:"value_processing,omitempty"`
}

type DataSourcesParameters struct {

	// (String) Specifies the location where the values are captured and stored.  Required if the source is one of the following: GET_PARAMETER, URI, REQUEST_HEADER, RESPONSE_HEADER.   Not applicable in other cases.   If the source value is REQUEST_HEADER or RESPONSE_HEADER, the CAPTURE_AND_STORE_ON_BOTH location is not allowed
	// Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
	// +kubebuilder:validation:Optional
	CapturingAndStorageLocation *string `json:"capturingAndStorageLocation,omitempty" tf:"capturing_and_storage_location,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	// +kubebuilder:validation:Optional
	CicsSdkMethodNodeCondition []CicsSdkMethodNodeConditionParameters `json:"cicsSdkMethodNodeCondition,omitempty" tf:"cics_sdk_method_node_condition,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The data source is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	// +kubebuilder:validation:Optional
	IibLabelMethodNodeCondition []IibLabelMethodNodeConditionParameters `json:"iibLabelMethodNodeCondition,omitempty" tf:"iib_label_method_node_condition,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	// +kubebuilder:validation:Optional
	IibMethodNodeCondition []IibMethodNodeConditionParameters `json:"iibMethodNodeCondition,omitempty" tf:"iib_method_node_condition,omitempty"`

	// (String) The IBM integration bus node type for which the value is captured.  This or iibMethodNodeCondition is required if the source is: IIB_NODE.  Not applicable in other cases
	// The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
	// +kubebuilder:validation:Optional
	IibNodeType *string `json:"iibNodeType,omitempty" tf:"iib_node_type,omitempty"`

	// (Block List) The method specification if the source value is METHOD_PARAM.   Not applicable in other cases (see below for nested schema)
	// The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
	// +kubebuilder:validation:Optional
	Methods []MethodsParameters `json:"methods,omitempty" tf:"methods,omitempty"`

	// (String) The name of the web request parameter to capture.  Required if the source is one of the following: POST_PARAMETER, GET_PARAMETER, REQUEST_HEADER, RESPONSE_HEADER, CUSTOM_ATTRIBUTE.  Not applicable in other cases
	// The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
	// +kubebuilder:validation:Optional
	ParameterName *string `json:"parameterName,omitempty" tf:"parameter_name,omitempty"`

	// (Block List, Max: 1) Conditions for data capturing (see below for nested schema)
	// Conditions for data capturing
	// +kubebuilder:validation:Optional
	Scope []ScopeParameters `json:"scope,omitempty" tf:"scope,omitempty"`

	// (String) The technology of the session attribute to capture if the source value is SESSION_ATTRIBUTE.
	// The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
	//
	// Not applicable in other cases
	// +kubebuilder:validation:Optional
	SessionAttributeTechnology *string `json:"sessionAttributeTechnology,omitempty" tf:"session_attribute_technology,omitempty"`

	// (String) The source of the attribute to capture. Works in conjunction with parameterName or methods and technology
	// The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`

	// (String) The technology of the method to capture if the source value is METHOD_PARAM.
	// The technology of the method to capture if the **source** value is `METHOD_PARAM`.
	//
	// Not applicable in other cases
	// +kubebuilder:validation:Optional
	Technology *string `json:"technology,omitempty" tf:"technology,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) Process values as specified (see below for nested schema)
	// Process values as specified
	// +kubebuilder:validation:Optional
	ValueProcessing []ValueProcessingParameters `json:"valueProcessing,omitempty" tf:"value_processing,omitempty"`
}

type ExtractSubstringInitParameters struct {

	// (String) The delimiter string
	// The delimiter string
	Delimiter *string `json:"delimiter,omitempty" tf:"delimiter,omitempty"`

	// delimiter string.   Required if the position value is BETWEEN. Otherwise not allowed
	// The end-delimiter string.   Required if the **position** value is `BETWEEN`. Otherwise not allowed
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The position of the extracted string relative to delimiters
	// The position of the extracted string relative to delimiters
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ExtractSubstringObservation struct {

	// (String) The delimiter string
	// The delimiter string
	Delimiter *string `json:"delimiter,omitempty" tf:"delimiter,omitempty"`

	// delimiter string.   Required if the position value is BETWEEN. Otherwise not allowed
	// The end-delimiter string.   Required if the **position** value is `BETWEEN`. Otherwise not allowed
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The position of the extracted string relative to delimiters
	// The position of the extracted string relative to delimiters
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ExtractSubstringParameters struct {

	// (String) The delimiter string
	// The delimiter string
	// +kubebuilder:validation:Optional
	Delimiter *string `json:"delimiter" tf:"delimiter,omitempty"`

	// delimiter string.   Required if the position value is BETWEEN. Otherwise not allowed
	// The end-delimiter string.   Required if the **position** value is `BETWEEN`. Otherwise not allowed
	// +kubebuilder:validation:Optional
	EndDelimiter *string `json:"endDelimiter,omitempty" tf:"end_delimiter,omitempty"`

	// (String) The position of the extracted string relative to delimiters
	// The position of the extracted string relative to delimiters
	// +kubebuilder:validation:Optional
	Position *string `json:"position" tf:"position,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type IibLabelMethodNodeConditionInitParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IibLabelMethodNodeConditionObservation struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IibLabelMethodNodeConditionParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type IibMethodNodeConditionInitParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IibMethodNodeConditionObservation struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type IibMethodNodeConditionParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type MethodInitParameters struct {

	// (List of String) Configuration of a method to be captured
	// Configuration of a method to be captured
	ArgumentTypes []*string `json:"argumentTypes,omitempty" tf:"argument_types,omitempty"`

	// (String) The class name where the method to capture resides.   Either this or the fileName must be set
	// The class name where the method to capture resides.   Either this or the **fileName** must be set
	ClassName *string `json:"className,omitempty" tf:"class_name,omitempty"`

	// (String) The file name where the method to capture resides.   Either this or className must be set
	// The file name where the method to capture resides.   Either this or **className** must be set
	FileName *string `json:"fileName,omitempty" tf:"file_name,omitempty"`

	// (String) The operator of the comparison. If not set, EQUALS is used
	// The operator of the comparison. If not set, `EQUALS` is used
	FileNameMatcher *string `json:"fileNameMatcher,omitempty" tf:"file_name_matcher,omitempty"`

	// (String) The name of the method to capture
	// The name of the method to capture
	MethodName *string `json:"methodName,omitempty" tf:"method_name,omitempty"`

	// (Set of String) The modifiers of the method to capture
	// The modifiers of the method to capture
	// +listType=set
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The return type
	// The return type
	ReturnType *string `json:"returnType,omitempty" tf:"return_type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method to capture
	// The visibility of the method to capture
	Visibility *string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type MethodObservation struct {

	// (List of String) Configuration of a method to be captured
	// Configuration of a method to be captured
	ArgumentTypes []*string `json:"argumentTypes,omitempty" tf:"argument_types,omitempty"`

	// (String) The class name where the method to capture resides.   Either this or the fileName must be set
	// The class name where the method to capture resides.   Either this or the **fileName** must be set
	ClassName *string `json:"className,omitempty" tf:"class_name,omitempty"`

	// (String) The file name where the method to capture resides.   Either this or className must be set
	// The file name where the method to capture resides.   Either this or **className** must be set
	FileName *string `json:"fileName,omitempty" tf:"file_name,omitempty"`

	// (String) The operator of the comparison. If not set, EQUALS is used
	// The operator of the comparison. If not set, `EQUALS` is used
	FileNameMatcher *string `json:"fileNameMatcher,omitempty" tf:"file_name_matcher,omitempty"`

	// (String) The name of the method to capture
	// The name of the method to capture
	MethodName *string `json:"methodName,omitempty" tf:"method_name,omitempty"`

	// (Set of String) The modifiers of the method to capture
	// The modifiers of the method to capture
	// +listType=set
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The return type
	// The return type
	ReturnType *string `json:"returnType,omitempty" tf:"return_type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method to capture
	// The visibility of the method to capture
	Visibility *string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type MethodParameters struct {

	// (List of String) Configuration of a method to be captured
	// Configuration of a method to be captured
	// +kubebuilder:validation:Optional
	ArgumentTypes []*string `json:"argumentTypes,omitempty" tf:"argument_types,omitempty"`

	// (String) The class name where the method to capture resides.   Either this or the fileName must be set
	// The class name where the method to capture resides.   Either this or the **fileName** must be set
	// +kubebuilder:validation:Optional
	ClassName *string `json:"className,omitempty" tf:"class_name,omitempty"`

	// (String) The file name where the method to capture resides.   Either this or className must be set
	// The file name where the method to capture resides.   Either this or **className** must be set
	// +kubebuilder:validation:Optional
	FileName *string `json:"fileName,omitempty" tf:"file_name,omitempty"`

	// (String) The operator of the comparison. If not set, EQUALS is used
	// The operator of the comparison. If not set, `EQUALS` is used
	// +kubebuilder:validation:Optional
	FileNameMatcher *string `json:"fileNameMatcher,omitempty" tf:"file_name_matcher,omitempty"`

	// (String) The name of the method to capture
	// The name of the method to capture
	// +kubebuilder:validation:Optional
	MethodName *string `json:"methodName" tf:"method_name,omitempty"`

	// (Set of String) The modifiers of the method to capture
	// The modifiers of the method to capture
	// +kubebuilder:validation:Optional
	// +listType=set
	Modifiers []*string `json:"modifiers,omitempty" tf:"modifiers,omitempty"`

	// (String) The return type
	// The return type
	// +kubebuilder:validation:Optional
	ReturnType *string `json:"returnType" tf:"return_type,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The visibility of the method to capture
	// The visibility of the method to capture
	// +kubebuilder:validation:Optional
	Visibility *string `json:"visibility" tf:"visibility,omitempty"`
}

type MethodsInitParameters struct {

	// (Number) The index of the argument to capture. Set 0 to capture the return value, 1 or higher to capture a mehtod argument.   Required if the capture is set to ARGUMENT.  Not applicable in other cases
	// The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument.   Required if the **capture** is set to `ARGUMENT`.  Not applicable in other cases
	ArgumentIndex *float64 `json:"argumentIndex,omitempty" tf:"argument_index,omitempty"`

	// (String) What to capture from the method
	// What to capture from the method
	Capture *string `json:"capture,omitempty" tf:"capture,omitempty"`

	// (String) The getter chain to apply to the captured object. It is required in one of the following cases:  The capture is set to THIS.    The capture is set to ARGUMENT, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	// The getter chain to apply to the captured object. It is required in one of the following cases:  The **capture** is set to `THIS`.    The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	DeepObjectAccess *string `json:"deepObjectAccess,omitempty" tf:"deep_object_access,omitempty"`

	// (Block List, Max: 1) Configuration of a method to be captured (see below for nested schema)
	// Configuration of a method to be captured
	Method []MethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type MethodsObservation struct {

	// (Number) The index of the argument to capture. Set 0 to capture the return value, 1 or higher to capture a mehtod argument.   Required if the capture is set to ARGUMENT.  Not applicable in other cases
	// The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument.   Required if the **capture** is set to `ARGUMENT`.  Not applicable in other cases
	ArgumentIndex *float64 `json:"argumentIndex,omitempty" tf:"argument_index,omitempty"`

	// (String) What to capture from the method
	// What to capture from the method
	Capture *string `json:"capture,omitempty" tf:"capture,omitempty"`

	// (String) The getter chain to apply to the captured object. It is required in one of the following cases:  The capture is set to THIS.    The capture is set to ARGUMENT, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	// The getter chain to apply to the captured object. It is required in one of the following cases:  The **capture** is set to `THIS`.    The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	DeepObjectAccess *string `json:"deepObjectAccess,omitempty" tf:"deep_object_access,omitempty"`

	// (Block List, Max: 1) Configuration of a method to be captured (see below for nested schema)
	// Configuration of a method to be captured
	Method []MethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type MethodsParameters struct {

	// (Number) The index of the argument to capture. Set 0 to capture the return value, 1 or higher to capture a mehtod argument.   Required if the capture is set to ARGUMENT.  Not applicable in other cases
	// The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument.   Required if the **capture** is set to `ARGUMENT`.  Not applicable in other cases
	// +kubebuilder:validation:Optional
	ArgumentIndex *float64 `json:"argumentIndex,omitempty" tf:"argument_index,omitempty"`

	// (String) What to capture from the method
	// What to capture from the method
	// +kubebuilder:validation:Optional
	Capture *string `json:"capture" tf:"capture,omitempty"`

	// (String) The getter chain to apply to the captured object. It is required in one of the following cases:  The capture is set to THIS.    The capture is set to ARGUMENT, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	// The getter chain to apply to the captured object. It is required in one of the following cases:  The **capture** is set to `THIS`.    The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
	// +kubebuilder:validation:Optional
	DeepObjectAccess *string `json:"deepObjectAccess,omitempty" tf:"deep_object_access,omitempty"`

	// (Block List, Max: 1) Configuration of a method to be captured (see below for nested schema)
	// Configuration of a method to be captured
	// +kubebuilder:validation:Optional
	Method []MethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type RequestAttributeInitParameters struct {

	// (String) Aggregation type for the request values
	// Aggregation type for the request values
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Boolean) Confidential data flag. Set true to treat the captured data as confidential
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	// (Block List) The list of data sources (see below for nested schema)
	// The list of data sources
	DataSources []DataSourcesInitParameters `json:"dataSources,omitempty" tf:"data_sources,omitempty"`

	// (String) The data type of the request attribute
	// The data type of the request attribute
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the request attribute
	// The name of the request attribute
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) String values transformation.   If the dataType is not string, set the Original here
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (Boolean) Personal data masking flag. Set true to skip masking.   Warning: This will potentially access personalized data
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking *bool `json:"skipPersonalDataMasking,omitempty" tf:"skip_personal_data_masking,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type RequestAttributeObservation struct {

	// (String) Aggregation type for the request values
	// Aggregation type for the request values
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Boolean) Confidential data flag. Set true to treat the captured data as confidential
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	// (Block List) The list of data sources (see below for nested schema)
	// The list of data sources
	DataSources []DataSourcesObservation `json:"dataSources,omitempty" tf:"data_sources,omitempty"`

	// (String) The data type of the request attribute
	// The data type of the request attribute
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the request attribute
	// The name of the request attribute
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) String values transformation.   If the dataType is not string, set the Original here
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (Boolean) Personal data masking flag. Set true to skip masking.   Warning: This will potentially access personalized data
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking *bool `json:"skipPersonalDataMasking,omitempty" tf:"skip_personal_data_masking,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type RequestAttributeParameters struct {

	// (String) Aggregation type for the request values
	// Aggregation type for the request values
	// +kubebuilder:validation:Optional
	Aggregation *string `json:"aggregation,omitempty" tf:"aggregation,omitempty"`

	// (Boolean) Confidential data flag. Set true to treat the captured data as confidential
	// Confidential data flag. Set `true` to treat the captured data as confidential
	// +kubebuilder:validation:Optional
	Confidential *bool `json:"confidential,omitempty" tf:"confidential,omitempty"`

	// (Block List) The list of data sources (see below for nested schema)
	// The list of data sources
	// +kubebuilder:validation:Optional
	DataSources []DataSourcesParameters `json:"dataSources,omitempty" tf:"data_sources,omitempty"`

	// (String) The data type of the request attribute
	// The data type of the request attribute
	// +kubebuilder:validation:Optional
	DataType *string `json:"dataType,omitempty" tf:"data_type,omitempty"`

	// (Boolean) The request attribute is enabled (true) or disabled (false)
	// The request attribute is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The name of the request attribute
	// The name of the request attribute
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) String values transformation.   If the dataType is not string, set the Original here
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	// +kubebuilder:validation:Optional
	Normalization *string `json:"normalization,omitempty" tf:"normalization,omitempty"`

	// (Boolean) Personal data masking flag. Set true to skip masking.   Warning: This will potentially access personalized data
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	// +kubebuilder:validation:Optional
	SkipPersonalDataMasking *bool `json:"skipPersonalDataMasking,omitempty" tf:"skip_personal_data_masking,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeInitParameters struct {

	// (String) Only applies to this host group
	// Only applies to this host group
	HostGroup *string `json:"hostGroup,omitempty" tf:"host_group,omitempty"`

	// (String) Only applies to this process group. Note that this can't be transferred between different clusters or environments
	// Only applies to this process group. Note that this can't be transferred between different clusters or environments
	ProcessGroup *string `json:"processGroup,omitempty" tf:"process_group,omitempty"`

	// (String) Only applies to this service technology
	// Only applies to this service technology
	ServiceTechnology *string `json:"serviceTechnology,omitempty" tf:"service_technology,omitempty"`

	// (String) Only apply to process groups matching this tag
	// Only apply to process groups matching this tag
	TagOfProcessGroup *string `json:"tagOfProcessGroup,omitempty" tf:"tag_of_process_group,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeObservation struct {

	// (String) Only applies to this host group
	// Only applies to this host group
	HostGroup *string `json:"hostGroup,omitempty" tf:"host_group,omitempty"`

	// (String) Only applies to this process group. Note that this can't be transferred between different clusters or environments
	// Only applies to this process group. Note that this can't be transferred between different clusters or environments
	ProcessGroup *string `json:"processGroup,omitempty" tf:"process_group,omitempty"`

	// (String) Only applies to this service technology
	// Only applies to this service technology
	ServiceTechnology *string `json:"serviceTechnology,omitempty" tf:"service_technology,omitempty"`

	// (String) Only apply to process groups matching this tag
	// Only apply to process groups matching this tag
	TagOfProcessGroup *string `json:"tagOfProcessGroup,omitempty" tf:"tag_of_process_group,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ScopeParameters struct {

	// (String) Only applies to this host group
	// Only applies to this host group
	// +kubebuilder:validation:Optional
	HostGroup *string `json:"hostGroup,omitempty" tf:"host_group,omitempty"`

	// (String) Only applies to this process group. Note that this can't be transferred between different clusters or environments
	// Only applies to this process group. Note that this can't be transferred between different clusters or environments
	// +kubebuilder:validation:Optional
	ProcessGroup *string `json:"processGroup,omitempty" tf:"process_group,omitempty"`

	// (String) Only applies to this service technology
	// Only applies to this service technology
	// +kubebuilder:validation:Optional
	ServiceTechnology *string `json:"serviceTechnology,omitempty" tf:"service_technology,omitempty"`

	// (String) Only apply to process groups matching this tag
	// Only apply to process groups matching this tag
	// +kubebuilder:validation:Optional
	TagOfProcessGroup *string `json:"tagOfProcessGroup,omitempty" tf:"tag_of_process_group,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`
}

type ValueConditionInitParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValueConditionObservation struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValueConditionParameters struct {

	// (Boolean) Negate the comparison
	// Negate the comparison
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (String) Operator comparing the extracted value to the comparison value
	// Operator comparing the extracted value to the comparison value
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (String) The value to compare to
	// The value to compare to
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type ValueProcessingInitParameters struct {

	// (Block List, Max: 1) Preprocess by extracting a substring from the original value (see below for nested schema)
	// Preprocess by extracting a substring from the original value
	ExtractSubstring []ExtractSubstringInitParameters `json:"extractSubstring,omitempty" tf:"extract_substring,omitempty"`

	// (String) Split (preprocessed) string values at this separator
	// Split (preprocessed) string values at this separator
	SplitAt *string `json:"splitAt,omitempty" tf:"split_at,omitempty"`

	// (Boolean) Prune Whitespaces. Defaults to false
	// Prune Whitespaces. Defaults to false
	Trim *bool `json:"trim,omitempty" tf:"trim,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	ValueCondition []ValueConditionInitParameters `json:"valueCondition,omitempty" tf:"value_condition,omitempty"`

	// (String) Extract value from captured data per regex
	// Extract value from captured data per regex
	ValueExtractorRegex *string `json:"valueExtractorRegex,omitempty" tf:"value_extractor_regex,omitempty"`
}

type ValueProcessingObservation struct {

	// (Block List, Max: 1) Preprocess by extracting a substring from the original value (see below for nested schema)
	// Preprocess by extracting a substring from the original value
	ExtractSubstring []ExtractSubstringObservation `json:"extractSubstring,omitempty" tf:"extract_substring,omitempty"`

	// (String) Split (preprocessed) string values at this separator
	// Split (preprocessed) string values at this separator
	SplitAt *string `json:"splitAt,omitempty" tf:"split_at,omitempty"`

	// (Boolean) Prune Whitespaces. Defaults to false
	// Prune Whitespaces. Defaults to false
	Trim *bool `json:"trim,omitempty" tf:"trim,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	ValueCondition []ValueConditionObservation `json:"valueCondition,omitempty" tf:"value_condition,omitempty"`

	// (String) Extract value from captured data per regex
	// Extract value from captured data per regex
	ValueExtractorRegex *string `json:"valueExtractorRegex,omitempty" tf:"value_extractor_regex,omitempty"`
}

type ValueProcessingParameters struct {

	// (Block List, Max: 1) Preprocess by extracting a substring from the original value (see below for nested schema)
	// Preprocess by extracting a substring from the original value
	// +kubebuilder:validation:Optional
	ExtractSubstring []ExtractSubstringParameters `json:"extractSubstring,omitempty" tf:"extract_substring,omitempty"`

	// (String) Split (preprocessed) string values at this separator
	// Split (preprocessed) string values at this separator
	// +kubebuilder:validation:Optional
	SplitAt *string `json:"splitAt,omitempty" tf:"split_at,omitempty"`

	// (Boolean) Prune Whitespaces. Defaults to false
	// Prune Whitespaces. Defaults to false
	// +kubebuilder:validation:Optional
	Trim *bool `json:"trim,omitempty" tf:"trim,omitempty"`

	// (String) allows for configuring properties that are not explicitly supported by the current version of this provider
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	// +kubebuilder:validation:Optional
	Unknowns *string `json:"unknowns,omitempty" tf:"unknowns,omitempty"`

	// (Block List, Max: 1) IBM integration bus label node name condition for which the value is captured (see below for nested schema)
	// IBM integration bus label node name condition for which the value is captured
	// +kubebuilder:validation:Optional
	ValueCondition []ValueConditionParameters `json:"valueCondition,omitempty" tf:"value_condition,omitempty"`

	// (String) Extract value from captured data per regex
	// Extract value from captured data per regex
	// +kubebuilder:validation:Optional
	ValueExtractorRegex *string `json:"valueExtractorRegex,omitempty" tf:"value_extractor_regex,omitempty"`
}

// RequestAttributeSpec defines the desired state of RequestAttribute
type RequestAttributeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RequestAttributeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RequestAttributeInitParameters `json:"initProvider,omitempty"`
}

// RequestAttributeStatus defines the observed state of RequestAttribute.
type RequestAttributeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RequestAttributeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RequestAttribute is the Schema for the RequestAttributes API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type RequestAttribute struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.aggregation) || (has(self.initProvider) && has(self.initProvider.aggregation))",message="spec.forProvider.aggregation is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dataType) || (has(self.initProvider) && has(self.initProvider.dataType))",message="spec.forProvider.dataType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.normalization) || (has(self.initProvider) && has(self.initProvider.normalization))",message="spec.forProvider.normalization is a required parameter"
	Spec   RequestAttributeSpec   `json:"spec"`
	Status RequestAttributeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RequestAttributeList contains a list of RequestAttributes
type RequestAttributeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RequestAttribute `json:"items"`
}

// Repository type metadata.
var (
	RequestAttribute_Kind             = "RequestAttribute"
	RequestAttribute_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RequestAttribute_Kind}.String()
	RequestAttribute_KindAPIVersion   = RequestAttribute_Kind + "." + CRDGroupVersion.String()
	RequestAttribute_GroupVersionKind = CRDGroupVersion.WithKind(RequestAttribute_Kind)
)

func init() {
	SchemeBuilder.Register(&RequestAttribute{}, &RequestAttributeList{})
}
