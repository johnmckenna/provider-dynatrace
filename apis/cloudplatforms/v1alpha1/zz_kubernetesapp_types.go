// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type KubernetesAppInitParameters struct {

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	KubernetesAppOptions []KubernetesAppOptionsInitParameters `json:"kubernetesAppOptions,omitempty" tf:"kubernetes_app_options,omitempty"`

	// (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type KubernetesAppObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	KubernetesAppOptions []KubernetesAppOptionsObservation `json:"kubernetesAppOptions,omitempty" tf:"kubernetes_app_options,omitempty"`

	// (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type KubernetesAppOptionsInitParameters struct {

	// (Boolean) New Kubernetes experience
	// New Kubernetes experience
	EnableKubernetesApp *bool `json:"enableKubernetesApp,omitempty" tf:"enable_kubernetes_app,omitempty"`
}

type KubernetesAppOptionsObservation struct {

	// (Boolean) New Kubernetes experience
	// New Kubernetes experience
	EnableKubernetesApp *bool `json:"enableKubernetesApp,omitempty" tf:"enable_kubernetes_app,omitempty"`
}

type KubernetesAppOptionsParameters struct {

	// (Boolean) New Kubernetes experience
	// New Kubernetes experience
	// +kubebuilder:validation:Optional
	EnableKubernetesApp *bool `json:"enableKubernetesApp" tf:"enable_kubernetes_app,omitempty"`
}

type KubernetesAppParameters struct {

	// (Block List, Min: 1, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	KubernetesAppOptions []KubernetesAppOptionsParameters `json:"kubernetesAppOptions,omitempty" tf:"kubernetes_app_options,omitempty"`

	// (String) The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

// KubernetesAppSpec defines the desired state of KubernetesApp
type KubernetesAppSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KubernetesAppParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider KubernetesAppInitParameters `json:"initProvider,omitempty"`
}

// KubernetesAppStatus defines the observed state of KubernetesApp.
type KubernetesAppStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KubernetesAppObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// KubernetesApp is the Schema for the KubernetesApps API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type KubernetesApp struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kubernetesAppOptions) || (has(self.initProvider) && has(self.initProvider.kubernetesAppOptions))",message="spec.forProvider.kubernetesAppOptions is a required parameter"
	Spec   KubernetesAppSpec   `json:"spec"`
	Status KubernetesAppStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KubernetesAppList contains a list of KubernetesApps
type KubernetesAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KubernetesApp `json:"items"`
}

// Repository type metadata.
var (
	KubernetesApp_Kind             = "KubernetesApp"
	KubernetesApp_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: KubernetesApp_Kind}.String()
	KubernetesApp_KindAPIVersion   = KubernetesApp_Kind + "." + CRDGroupVersion.String()
	KubernetesApp_GroupVersionKind = CRDGroupVersion.WithKind(KubernetesApp_Kind)
)

func init() {
	SchemeBuilder.Register(&KubernetesApp{}, &KubernetesAppList{})
}
