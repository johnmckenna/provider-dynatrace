// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CloudFoundryInitParameters struct {

	// (String) Cloud Foundry API Target
	// Cloud Foundry API Target
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (String) ActiveGate group
	// ActiveGate group
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Name this connection
	// Name this connection
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) Cloud Foundry Authentication Endpoint
	// Cloud Foundry Authentication Endpoint
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String, Sensitive) Cloud Foundry Password
	// Cloud Foundry Password
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// (String) Cloud Foundry Username
	// Cloud Foundry Username
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type CloudFoundryObservation struct {

	// (String) Cloud Foundry API Target
	// Cloud Foundry API Target
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (String) ActiveGate group
	// ActiveGate group
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name this connection
	// Name this connection
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) Cloud Foundry Authentication Endpoint
	// Cloud Foundry Authentication Endpoint
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String) Cloud Foundry Username
	// Cloud Foundry Username
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type CloudFoundryParameters struct {

	// (String) Cloud Foundry API Target
	// Cloud Foundry API Target
	// +kubebuilder:validation:Optional
	APIURL *string `json:"apiUrl,omitempty" tf:"api_url,omitempty"`

	// (String) ActiveGate group
	// ActiveGate group
	// +kubebuilder:validation:Optional
	ActiveGateGroup *string `json:"activeGateGroup,omitempty" tf:"active_gate_group,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Name this connection
	// Name this connection
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// (String) Cloud Foundry Authentication Endpoint
	// Cloud Foundry Authentication Endpoint
	// +kubebuilder:validation:Optional
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String, Sensitive) Cloud Foundry Password
	// Cloud Foundry Password
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// (String) Cloud Foundry Username
	// Cloud Foundry Username
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

// CloudFoundrySpec defines the desired state of CloudFoundry
type CloudFoundrySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CloudFoundryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CloudFoundryInitParameters `json:"initProvider,omitempty"`
}

// CloudFoundryStatus defines the observed state of CloudFoundry.
type CloudFoundryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CloudFoundryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CloudFoundry is the Schema for the CloudFoundrys API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type CloudFoundry struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.apiUrl) || (has(self.initProvider) && has(self.initProvider.apiUrl))",message="spec.forProvider.apiUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.label) || (has(self.initProvider) && has(self.initProvider.label))",message="spec.forProvider.label is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loginUrl) || (has(self.initProvider) && has(self.initProvider.loginUrl))",message="spec.forProvider.loginUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)",message="spec.forProvider.passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) && has(self.initProvider.username))",message="spec.forProvider.username is a required parameter"
	Spec   CloudFoundrySpec   `json:"spec"`
	Status CloudFoundryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CloudFoundryList contains a list of CloudFoundrys
type CloudFoundryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CloudFoundry `json:"items"`
}

// Repository type metadata.
var (
	CloudFoundry_Kind             = "CloudFoundry"
	CloudFoundry_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CloudFoundry_Kind}.String()
	CloudFoundry_KindAPIVersion   = CloudFoundry_Kind + "." + CRDGroupVersion.String()
	CloudFoundry_GroupVersionKind = CRDGroupVersion.WithKind(CloudFoundry_Kind)
)

func init() {
	SchemeBuilder.Register(&CloudFoundry{}, &CloudFoundryList{})
}
