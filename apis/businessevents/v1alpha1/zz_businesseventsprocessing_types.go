// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BusinessEventsProcessingInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// (Block List, Min: 1, Max: 1) ## Rule testing
	// ## Rule testing
	// ### 1. Paste an event sample
	RuleTesting []RuleTestingInitParameters `json:"ruleTesting,omitempty" tf:"rule_testing,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/pz030w5)
	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// (Block List, Max: 1) Transformation fields (see below for nested schema)
	// Transformation fields
	TransformationFields []TransformationFieldsInitParameters `json:"transformationFields,omitempty" tf:"transformation_fields,omitempty"`
}

type BusinessEventsProcessingObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// (Block List, Min: 1, Max: 1) ## Rule testing
	// ## Rule testing
	// ### 1. Paste an event sample
	RuleTesting []RuleTestingObservation `json:"ruleTesting,omitempty" tf:"rule_testing,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/pz030w5)
	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// (Block List, Max: 1) Transformation fields (see below for nested schema)
	// Transformation fields
	TransformationFields []TransformationFieldsObservation `json:"transformationFields,omitempty" tf:"transformation_fields,omitempty"`
}

type BusinessEventsProcessingParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	// +kubebuilder:validation:Optional
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	// +kubebuilder:validation:Optional
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// (Block List, Min: 1, Max: 1) ## Rule testing
	// ## Rule testing
	// ### 1. Paste an event sample
	// +kubebuilder:validation:Optional
	RuleTesting []RuleTestingParameters `json:"ruleTesting,omitempty" tf:"rule_testing,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/pz030w5)
	// +kubebuilder:validation:Optional
	Script *string `json:"script,omitempty" tf:"script,omitempty"`

	// (Block List, Max: 1) Transformation fields (see below for nested schema)
	// Transformation fields
	// +kubebuilder:validation:Optional
	TransformationFields []TransformationFieldsParameters `json:"transformationFields,omitempty" tf:"transformation_fields,omitempty"`
}

type RuleTestingInitParameters struct {

	// (String) Sample event to use for the test run. Only JSON format is supported.
	// Sample event to use for the test run. Only JSON format is supported.
	SampleEvent *string `json:"sampleEvent,omitempty" tf:"sample_event,omitempty"`
}

type RuleTestingObservation struct {

	// (String) Sample event to use for the test run. Only JSON format is supported.
	// Sample event to use for the test run. Only JSON format is supported.
	SampleEvent *string `json:"sampleEvent,omitempty" tf:"sample_event,omitempty"`
}

type RuleTestingParameters struct {

	// (String) Sample event to use for the test run. Only JSON format is supported.
	// Sample event to use for the test run. Only JSON format is supported.
	// +kubebuilder:validation:Optional
	SampleEvent *string `json:"sampleEvent" tf:"sample_event,omitempty"`
}

type TransformationFieldInitParameters struct {

	// (Boolean) Is Array
	// Is Array
	Array *bool `json:"array,omitempty" tf:"array,omitempty"`

	// (String) no documentation available
	// no documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) no documentation available
	// no documentation available
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`

	// only
	// Read-only
	Readonly *bool `json:"readonly,omitempty" tf:"readonly,omitempty"`

	// (String) Possible Values: BOOLEAN, DOUBLE, DURATION, INT, IPADDR, LONG, STRING, TIMESTAMP
	// Possible Values: `BOOLEAN`, `DOUBLE`, `DURATION`, `INT`, `IPADDR`, `LONG`, `STRING`, `TIMESTAMP`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TransformationFieldObservation struct {

	// (Boolean) Is Array
	// Is Array
	Array *bool `json:"array,omitempty" tf:"array,omitempty"`

	// (String) no documentation available
	// no documentation available
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) no documentation available
	// no documentation available
	Optional *bool `json:"optional,omitempty" tf:"optional,omitempty"`

	// only
	// Read-only
	Readonly *bool `json:"readonly,omitempty" tf:"readonly,omitempty"`

	// (String) Possible Values: BOOLEAN, DOUBLE, DURATION, INT, IPADDR, LONG, STRING, TIMESTAMP
	// Possible Values: `BOOLEAN`, `DOUBLE`, `DURATION`, `INT`, `IPADDR`, `LONG`, `STRING`, `TIMESTAMP`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TransformationFieldParameters struct {

	// (Boolean) Is Array
	// Is Array
	// +kubebuilder:validation:Optional
	Array *bool `json:"array" tf:"array,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (Boolean) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Optional *bool `json:"optional" tf:"optional,omitempty"`

	// only
	// Read-only
	// +kubebuilder:validation:Optional
	Readonly *bool `json:"readonly" tf:"readonly,omitempty"`

	// (String) Possible Values: BOOLEAN, DOUBLE, DURATION, INT, IPADDR, LONG, STRING, TIMESTAMP
	// Possible Values: `BOOLEAN`, `DOUBLE`, `DURATION`, `INT`, `IPADDR`, `LONG`, `STRING`, `TIMESTAMP`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type TransformationFieldsInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	TransformationField []TransformationFieldInitParameters `json:"transformationField,omitempty" tf:"transformation_field,omitempty"`
}

type TransformationFieldsObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	TransformationField []TransformationFieldObservation `json:"transformationField,omitempty" tf:"transformation_field,omitempty"`
}

type TransformationFieldsParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	TransformationField []TransformationFieldParameters `json:"transformationField" tf:"transformation_field,omitempty"`
}

// BusinessEventsProcessingSpec defines the desired state of BusinessEventsProcessing
type BusinessEventsProcessingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BusinessEventsProcessingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BusinessEventsProcessingInitParameters `json:"initProvider,omitempty"`
}

// BusinessEventsProcessingStatus defines the observed state of BusinessEventsProcessing.
type BusinessEventsProcessingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BusinessEventsProcessingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BusinessEventsProcessing is the Schema for the BusinessEventsProcessings API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type BusinessEventsProcessing struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.matcher) || (has(self.initProvider) && has(self.initProvider.matcher))",message="spec.forProvider.matcher is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleName) || (has(self.initProvider) && has(self.initProvider.ruleName))",message="spec.forProvider.ruleName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleTesting) || (has(self.initProvider) && has(self.initProvider.ruleTesting))",message="spec.forProvider.ruleTesting is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.script) || (has(self.initProvider) && has(self.initProvider.script))",message="spec.forProvider.script is a required parameter"
	Spec   BusinessEventsProcessingSpec   `json:"spec"`
	Status BusinessEventsProcessingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BusinessEventsProcessingList contains a list of BusinessEventsProcessings
type BusinessEventsProcessingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BusinessEventsProcessing `json:"items"`
}

// Repository type metadata.
var (
	BusinessEventsProcessing_Kind             = "BusinessEventsProcessing"
	BusinessEventsProcessing_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BusinessEventsProcessing_Kind}.String()
	BusinessEventsProcessing_KindAPIVersion   = BusinessEventsProcessing_Kind + "." + CRDGroupVersion.String()
	BusinessEventsProcessing_GroupVersionKind = CRDGroupVersion.WithKind(BusinessEventsProcessing_Kind)
)

func init() {
	SchemeBuilder.Register(&BusinessEventsProcessing{}, &BusinessEventsProcessingList{})
}
