// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BusinessEventsBucketsInitParameters struct {

	// (String) Events will be stored in the selected bucket. Analyze bucket contents in the log & event viewer.
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`
}

type BusinessEventsBucketsObservation struct {

	// (String) Events will be stored in the selected bucket. Analyze bucket contents in the log & event viewer.
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`
}

type BusinessEventsBucketsParameters struct {

	// (String) Events will be stored in the selected bucket. Analyze bucket contents in the log & event viewer.
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	// +kubebuilder:validation:Optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	// +kubebuilder:validation:Optional
	InsertAfter *string `json:"insertAfter,omitempty" tf:"insert_after,omitempty"`

	// (String) See our documentation
	// [See our documentation](https://dt-url.net/bp234rv)
	// +kubebuilder:validation:Optional
	Matcher *string `json:"matcher,omitempty" tf:"matcher,omitempty"`

	// (String) Rule name
	// Rule name
	// +kubebuilder:validation:Optional
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`
}

// BusinessEventsBucketsSpec defines the desired state of BusinessEventsBuckets
type BusinessEventsBucketsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BusinessEventsBucketsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BusinessEventsBucketsInitParameters `json:"initProvider,omitempty"`
}

// BusinessEventsBucketsStatus defines the observed state of BusinessEventsBuckets.
type BusinessEventsBucketsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BusinessEventsBucketsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BusinessEventsBuckets is the Schema for the BusinessEventsBucketss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type BusinessEventsBuckets struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bucketName) || (has(self.initProvider) && has(self.initProvider.bucketName))",message="spec.forProvider.bucketName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.matcher) || (has(self.initProvider) && has(self.initProvider.matcher))",message="spec.forProvider.matcher is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleName) || (has(self.initProvider) && has(self.initProvider.ruleName))",message="spec.forProvider.ruleName is a required parameter"
	Spec   BusinessEventsBucketsSpec   `json:"spec"`
	Status BusinessEventsBucketsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BusinessEventsBucketsList contains a list of BusinessEventsBucketss
type BusinessEventsBucketsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BusinessEventsBuckets `json:"items"`
}

// Repository type metadata.
var (
	BusinessEventsBuckets_Kind             = "BusinessEventsBuckets"
	BusinessEventsBuckets_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BusinessEventsBuckets_Kind}.String()
	BusinessEventsBuckets_KindAPIVersion   = BusinessEventsBuckets_Kind + "." + CRDGroupVersion.String()
	BusinessEventsBuckets_GroupVersionKind = CRDGroupVersion.WithKind(BusinessEventsBuckets_Kind)
)

func init() {
	SchemeBuilder.Register(&BusinessEventsBuckets{}, &BusinessEventsBucketsList{})
}
