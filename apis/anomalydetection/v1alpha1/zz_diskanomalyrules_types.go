// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DiskAnomalyRulesInitParameters struct {

	// (Block List, Min: 1, Max: 1) Only apply to disks whose name matches (see below for nested schema)
	// Only apply to disks whose name matches
	DiskNameFilter []DiskNameFilterInitParameters `json:"diskNameFilter,omitempty" tf:"disk_name_filter,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	HostGroupID *string `json:"hostGroupId,omitempty" tf:"host_group_id,omitempty"`

	// (String) Possible Values: LOW_DISK_SPACE, LOW_INODES, READ_TIME_EXCEEDING, WRITE_TIME_EXCEEDING
	// Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// (String) Name
	// Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Min: 1, Max: 1) Only alert if the threshold was violated in at least n of the last m samples (see below for nested schema)
	// Only alert if the threshold was violated in at least *n* of the last *m* samples
	SampleLimit []SampleLimitInitParameters `json:"sampleLimit,omitempty" tf:"sample_limit,omitempty"`

	// (Set of String) Only apply to hosts that have the following tags
	// Only apply to hosts that have the following tags
	// +listType=set
	TagFilters []*string `json:"tagFilters,omitempty" tf:"tag_filters,omitempty"`

	// (Number) Alert if higher than
	// Alert if higher than
	ThresholdMilliseconds *float64 `json:"thresholdMilliseconds,omitempty" tf:"threshold_milliseconds,omitempty"`

	// (Number) Alert if lower than
	// Alert if lower than
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

type DiskAnomalyRulesObservation struct {

	// (Block List, Min: 1, Max: 1) Only apply to disks whose name matches (see below for nested schema)
	// Only apply to disks whose name matches
	DiskNameFilter []DiskNameFilterObservation `json:"diskNameFilter,omitempty" tf:"disk_name_filter,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	HostGroupID *string `json:"hostGroupId,omitempty" tf:"host_group_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Possible Values: LOW_DISK_SPACE, LOW_INODES, READ_TIME_EXCEEDING, WRITE_TIME_EXCEEDING
	// Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// (String) Name
	// Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Min: 1, Max: 1) Only alert if the threshold was violated in at least n of the last m samples (see below for nested schema)
	// Only alert if the threshold was violated in at least *n* of the last *m* samples
	SampleLimit []SampleLimitObservation `json:"sampleLimit,omitempty" tf:"sample_limit,omitempty"`

	// (Set of String) Only apply to hosts that have the following tags
	// Only apply to hosts that have the following tags
	// +listType=set
	TagFilters []*string `json:"tagFilters,omitempty" tf:"tag_filters,omitempty"`

	// (Number) Alert if higher than
	// Alert if higher than
	ThresholdMilliseconds *float64 `json:"thresholdMilliseconds,omitempty" tf:"threshold_milliseconds,omitempty"`

	// (Number) Alert if lower than
	// Alert if lower than
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

type DiskAnomalyRulesParameters struct {

	// (Block List, Min: 1, Max: 1) Only apply to disks whose name matches (see below for nested schema)
	// Only apply to disks whose name matches
	// +kubebuilder:validation:Optional
	DiskNameFilter []DiskNameFilterParameters `json:"diskNameFilter,omitempty" tf:"disk_name_filter,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	// +kubebuilder:validation:Optional
	HostGroupID *string `json:"hostGroupId,omitempty" tf:"host_group_id,omitempty"`

	// (String) Possible Values: LOW_DISK_SPACE, LOW_INODES, READ_TIME_EXCEEDING, WRITE_TIME_EXCEEDING
	// Possible Values: `LOW_DISK_SPACE`, `LOW_INODES`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
	// +kubebuilder:validation:Optional
	Metric *string `json:"metric,omitempty" tf:"metric,omitempty"`

	// (String) Name
	// Name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Min: 1, Max: 1) Only alert if the threshold was violated in at least n of the last m samples (see below for nested schema)
	// Only alert if the threshold was violated in at least *n* of the last *m* samples
	// +kubebuilder:validation:Optional
	SampleLimit []SampleLimitParameters `json:"sampleLimit,omitempty" tf:"sample_limit,omitempty"`

	// (Set of String) Only apply to hosts that have the following tags
	// Only apply to hosts that have the following tags
	// +kubebuilder:validation:Optional
	// +listType=set
	TagFilters []*string `json:"tagFilters,omitempty" tf:"tag_filters,omitempty"`

	// (Number) Alert if higher than
	// Alert if higher than
	// +kubebuilder:validation:Optional
	ThresholdMilliseconds *float64 `json:"thresholdMilliseconds,omitempty" tf:"threshold_milliseconds,omitempty"`

	// (Number) Alert if lower than
	// Alert if lower than
	// +kubebuilder:validation:Optional
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`
}

type DiskNameFilterInitParameters struct {

	// (String) Possible Values: CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Matching text
	// Matching text
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DiskNameFilterObservation struct {

	// (String) Possible Values: CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	Operator *string `json:"operator,omitempty" tf:"operator,omitempty"`

	// (String) Matching text
	// Matching text
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DiskNameFilterParameters struct {

	// (String) Possible Values: CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_START_WITH, EQUALS, STARTS_WITH
	// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
	// +kubebuilder:validation:Optional
	Operator *string `json:"operator" tf:"operator,omitempty"`

	// (String) Matching text
	// Matching text
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SampleLimitInitParameters struct {

	// (Number) .. within the last
	// .. within the last
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Minimum number of violating samples
	// Minimum number of violating samples
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type SampleLimitObservation struct {

	// (Number) .. within the last
	// .. within the last
	Samples *float64 `json:"samples,omitempty" tf:"samples,omitempty"`

	// (Number) Minimum number of violating samples
	// Minimum number of violating samples
	ViolatingSamples *float64 `json:"violatingSamples,omitempty" tf:"violating_samples,omitempty"`
}

type SampleLimitParameters struct {

	// (Number) .. within the last
	// .. within the last
	// +kubebuilder:validation:Optional
	Samples *float64 `json:"samples" tf:"samples,omitempty"`

	// (Number) Minimum number of violating samples
	// Minimum number of violating samples
	// +kubebuilder:validation:Optional
	ViolatingSamples *float64 `json:"violatingSamples" tf:"violating_samples,omitempty"`
}

// DiskAnomalyRulesSpec defines the desired state of DiskAnomalyRules
type DiskAnomalyRulesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DiskAnomalyRulesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DiskAnomalyRulesInitParameters `json:"initProvider,omitempty"`
}

// DiskAnomalyRulesStatus defines the observed state of DiskAnomalyRules.
type DiskAnomalyRulesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DiskAnomalyRulesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DiskAnomalyRules is the Schema for the DiskAnomalyRuless API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type DiskAnomalyRules struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.diskNameFilter) || (has(self.initProvider) && has(self.initProvider.diskNameFilter))",message="spec.forProvider.diskNameFilter is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.metric) || (has(self.initProvider) && has(self.initProvider.metric))",message="spec.forProvider.metric is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sampleLimit) || (has(self.initProvider) && has(self.initProvider.sampleLimit))",message="spec.forProvider.sampleLimit is a required parameter"
	Spec   DiskAnomalyRulesSpec   `json:"spec"`
	Status DiskAnomalyRulesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DiskAnomalyRulesList contains a list of DiskAnomalyRuless
type DiskAnomalyRulesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DiskAnomalyRules `json:"items"`
}

// Repository type metadata.
var (
	DiskAnomalyRules_Kind             = "DiskAnomalyRules"
	DiskAnomalyRules_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DiskAnomalyRules_Kind}.String()
	DiskAnomalyRules_KindAPIVersion   = DiskAnomalyRules_Kind + "." + CRDGroupVersion.String()
	DiskAnomalyRules_GroupVersionKind = CRDGroupVersion.WithKind(DiskAnomalyRules_Kind)
)

func init() {
	SchemeBuilder.Register(&DiskAnomalyRules{}, &DiskAnomalyRulesList{})
}
