// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoDetectionInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []OverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type AutoDetectionObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []OverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type AutoDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type AutoDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type AutoDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type AutoDetectionParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	AbsoluteIncrease *float64 `json:"absoluteIncrease" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []OverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	RelativeIncrease *float64 `json:"relativeIncrease" tf:"relative_increase,omitempty"`
}

type DatabaseAnomaliesV2InitParameters struct {

	// (Block List, Min: 1, Max: 1) Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold: (see below for nested schema)
	// Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:
	DatabaseConnections []DatabaseConnectionsInitParameters `json:"databaseConnections,omitempty" tf:"database_connections,omitempty"`

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	FailureRate []FailureRateInitParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.
	LoadDrops []LoadDropsInitParameters `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.
	LoadSpikes []LoadSpikesInitParameters `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []ResponseTimeInitParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope for the database anomaly detection
	// The scope for the database anomaly detection
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type DatabaseAnomaliesV2Observation struct {

	// (Block List, Min: 1, Max: 1) Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold: (see below for nested schema)
	// Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:
	DatabaseConnections []DatabaseConnectionsObservation `json:"databaseConnections,omitempty" tf:"database_connections,omitempty"`

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	FailureRate []FailureRateObservation `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.
	LoadDrops []LoadDropsObservation `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.
	LoadSpikes []LoadSpikesObservation `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []ResponseTimeObservation `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope for the database anomaly detection
	// The scope for the database anomaly detection
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type DatabaseAnomaliesV2Parameters struct {

	// (Block List, Min: 1, Max: 1) Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold: (see below for nested schema)
	// Alert if the number of failed database connects within the specified time exceeds the specified absolute threshold:
	// +kubebuilder:validation:Optional
	DatabaseConnections []DatabaseConnectionsParameters `json:"databaseConnections,omitempty" tf:"database_connections,omitempty"`

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	// +kubebuilder:validation:Optional
	FailureRate []FailureRateParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time.
	// +kubebuilder:validation:Optional
	LoadDrops []LoadDropsParameters `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time. (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time.
	// +kubebuilder:validation:Optional
	LoadSpikes []LoadSpikesParameters `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	// +kubebuilder:validation:Optional
	ResponseTime []ResponseTimeParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope for the database anomaly detection
	// The scope for the database anomaly detection
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type DatabaseConnectionsInitParameters struct {

	// (Boolean) Detect failed database connects
	// Detect failed database connects
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	MaxFailedConnects *float64 `json:"maxFailedConnects,omitempty" tf:"max_failed_connects,omitempty"`

	// (Number) Time span
	// Time span
	TimePeriod *float64 `json:"timePeriod,omitempty" tf:"time_period,omitempty"`
}

type DatabaseConnectionsObservation struct {

	// (Boolean) Detect failed database connects
	// Detect failed database connects
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	MaxFailedConnects *float64 `json:"maxFailedConnects,omitempty" tf:"max_failed_connects,omitempty"`

	// (Number) Time span
	// Time span
	TimePeriod *float64 `json:"timePeriod,omitempty" tf:"time_period,omitempty"`
}

type DatabaseConnectionsParameters struct {

	// (Boolean) Detect failed database connects
	// Detect failed database connects
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	// +kubebuilder:validation:Optional
	MaxFailedConnects *float64 `json:"maxFailedConnects,omitempty" tf:"max_failed_connects,omitempty"`

	// (Number) Time span
	// Time span
	// +kubebuilder:validation:Optional
	TimePeriod *float64 `json:"timePeriod,omitempty" tf:"time_period,omitempty"`
}

type FailureRateInitParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	AutoDetection []AutoDetectionInitParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for increases in failure rate
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect increases in failure rate
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	FixedDetection []FixedDetectionInitParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type FailureRateObservation struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	AutoDetection []AutoDetectionObservation `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for increases in failure rate
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect increases in failure rate
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	FixedDetection []FixedDetectionObservation `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type FailureRateParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	AutoDetection []AutoDetectionParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for increases in failure rate
	// +kubebuilder:validation:Optional
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect increases in failure rate
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	// +kubebuilder:validation:Optional
	FixedDetection []FixedDetectionParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type FixedDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FixedDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (String) no documentation available
	// no documentation available
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type FixedDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FixedDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (String) no documentation available
	// no documentation available
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type FixedDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FixedDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FixedDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type FixedDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []FixedDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`
}

type FixedDetectionResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type FixedDetectionResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type FixedDetectionResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Threshold
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`
}

type FixedDetectionResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type FixedDetectionResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type FixedDetectionResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`
}

type LoadDropsInitParameters struct {

	// (Boolean) Detect failed database connects
	// Detect service load drops
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type LoadDropsObservation struct {

	// (Boolean) Detect failed database connects
	// Detect service load drops
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type LoadDropsParameters struct {

	// (Boolean) Detect failed database connects
	// Detect service load drops
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	// +kubebuilder:validation:Optional
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type LoadSpikesInitParameters struct {

	// (Boolean) Detect failed database connects
	// Detect service load spikes
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type LoadSpikesObservation struct {

	// (Boolean) Detect failed database connects
	// Detect service load spikes
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type LoadSpikesParameters struct {

	// (Boolean) Detect failed database connects
	// Detect service load spikes
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	// +kubebuilder:validation:Optional
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type OverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type OverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type OverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	DegradationPercent *float64 `json:"degradationPercent" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAutoDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []AutoDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []ResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []ResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeAutoDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []AutoDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []ResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []ResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeAutoDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []AutoDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []ResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []ResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeFixedDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeFixedDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold within an observation period of 5 minutes:
	ResponseTimeAll []FixedDetectionResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold within an observation period of 5 minutes:
	ResponseTimeSlowest []FixedDetectionResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) no documentation available
	// no documentation available
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ResponseTimeFixedDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeFixedDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold within an observation period of 5 minutes:
	ResponseTimeAll []FixedDetectionResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold within an observation period of 5 minutes:
	ResponseTimeSlowest []FixedDetectionResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) no documentation available
	// no documentation available
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ResponseTimeFixedDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeFixedDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeFixedDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeFixedDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ResponseTimeFixedDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold within an observation period of 5 minutes:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []FixedDetectionResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold within an observation period of 5 minutes:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []FixedDetectionResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`
}

type ResponseTimeInitParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	AutoDetection []ResponseTimeAutoDetectionInitParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for response time degradations
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect response time degradations
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	FixedDetection []ResponseTimeFixedDetectionInitParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ResponseTimeObservation struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	AutoDetection []ResponseTimeAutoDetectionObservation `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for response time degradations
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect response time degradations
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	FixedDetection []ResponseTimeFixedDetectionObservation `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ResponseTimeParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	AutoDetection []ResponseTimeAutoDetectionParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Detection mode for increases in failure rate
	// Detection mode for response time degradations
	// +kubebuilder:validation:Optional
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) Detect failed database connects
	// Detect response time degradations
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	FixedDetection []ResponseTimeFixedDetectionParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type ResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type ResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent" tf:"slowest_degradation_percent,omitempty"`
}

// DatabaseAnomaliesV2Spec defines the desired state of DatabaseAnomaliesV2
type DatabaseAnomaliesV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DatabaseAnomaliesV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DatabaseAnomaliesV2InitParameters `json:"initProvider,omitempty"`
}

// DatabaseAnomaliesV2Status defines the observed state of DatabaseAnomaliesV2.
type DatabaseAnomaliesV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DatabaseAnomaliesV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DatabaseAnomaliesV2 is the Schema for the DatabaseAnomaliesV2s API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type DatabaseAnomaliesV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.databaseConnections) || (has(self.initProvider) && has(self.initProvider.databaseConnections))",message="spec.forProvider.databaseConnections is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.failureRate) || (has(self.initProvider) && has(self.initProvider.failureRate))",message="spec.forProvider.failureRate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadDrops) || (has(self.initProvider) && has(self.initProvider.loadDrops))",message="spec.forProvider.loadDrops is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadSpikes) || (has(self.initProvider) && has(self.initProvider.loadSpikes))",message="spec.forProvider.loadSpikes is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.responseTime) || (has(self.initProvider) && has(self.initProvider.responseTime))",message="spec.forProvider.responseTime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	Spec   DatabaseAnomaliesV2Spec   `json:"spec"`
	Status DatabaseAnomaliesV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DatabaseAnomaliesV2List contains a list of DatabaseAnomaliesV2s
type DatabaseAnomaliesV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DatabaseAnomaliesV2 `json:"items"`
}

// Repository type metadata.
var (
	DatabaseAnomaliesV2_Kind             = "DatabaseAnomaliesV2"
	DatabaseAnomaliesV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DatabaseAnomaliesV2_Kind}.String()
	DatabaseAnomaliesV2_KindAPIVersion   = DatabaseAnomaliesV2_Kind + "." + CRDGroupVersion.String()
	DatabaseAnomaliesV2_GroupVersionKind = CRDGroupVersion.WithKind(DatabaseAnomaliesV2_Kind)
)

func init() {
	SchemeBuilder.Register(&DatabaseAnomaliesV2{}, &DatabaseAnomaliesV2List{})
}
