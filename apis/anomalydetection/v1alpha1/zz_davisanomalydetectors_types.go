// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnalyzerInitParameters struct {

	// (Block List, Max: 1) Input fields for the specified analyzer (see below for nested schema)
	// Input fields for the specified analyzer
	Input []InputInitParameters `json:"input,omitempty" tf:"input,omitempty"`

	// (String) Fully qualified name of the analyzer
	// Fully qualified name of the analyzer
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AnalyzerInputFieldInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AnalyzerInputFieldObservation struct {

	// (String) no documentation available
	// no documentation available
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AnalyzerInputFieldParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type AnalyzerObservation struct {

	// (Block List, Max: 1) Input fields for the specified analyzer (see below for nested schema)
	// Input fields for the specified analyzer
	Input []InputObservation `json:"input,omitempty" tf:"input,omitempty"`

	// (String) Fully qualified name of the analyzer
	// Fully qualified name of the analyzer
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AnalyzerParameters struct {

	// (Block List, Max: 1) Input fields for the specified analyzer (see below for nested schema)
	// Input fields for the specified analyzer
	// +kubebuilder:validation:Optional
	Input []InputParameters `json:"input,omitempty" tf:"input,omitempty"`

	// (String) Fully qualified name of the analyzer
	// Fully qualified name of the analyzer
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type DavisAnomalyDetectorsInitParameters struct {

	// (Block List, Min: 1, Max: 1) Analyzer input (see below for nested schema)
	// Analyzer input
	Analyzer []AnalyzerInitParameters `json:"analyzer,omitempty" tf:"analyzer,omitempty"`

	// (String) The description of the anomaly detector
	// The description of the anomaly detector
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	EventTemplate []EventTemplateInitParameters `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (Block List, Min: 1, Max: 1) Execution settings (see below for nested schema)
	// Execution settings
	ExecutionSettings []ExecutionSettingsInitParameters `json:"executionSettings,omitempty" tf:"execution_settings,omitempty"`

	// (String) Source
	// Source
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// (String) The title of the anomaly detector
	// The title of the anomaly detector
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type DavisAnomalyDetectorsObservation struct {

	// (Block List, Min: 1, Max: 1) Analyzer input (see below for nested schema)
	// Analyzer input
	Analyzer []AnalyzerObservation `json:"analyzer,omitempty" tf:"analyzer,omitempty"`

	// (String) The description of the anomaly detector
	// The description of the anomaly detector
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	EventTemplate []EventTemplateObservation `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (Block List, Min: 1, Max: 1) Execution settings (see below for nested schema)
	// Execution settings
	ExecutionSettings []ExecutionSettingsObservation `json:"executionSettings,omitempty" tf:"execution_settings,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Source
	// Source
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// (String) The title of the anomaly detector
	// The title of the anomaly detector
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type DavisAnomalyDetectorsParameters struct {

	// (Block List, Min: 1, Max: 1) Analyzer input (see below for nested schema)
	// Analyzer input
	// +kubebuilder:validation:Optional
	Analyzer []AnalyzerParameters `json:"analyzer,omitempty" tf:"analyzer,omitempty"`

	// (String) The description of the anomaly detector
	// The description of the anomaly detector
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Event template (see below for nested schema)
	// Event template
	// +kubebuilder:validation:Optional
	EventTemplate []EventTemplateParameters `json:"eventTemplate,omitempty" tf:"event_template,omitempty"`

	// (Block List, Min: 1, Max: 1) Execution settings (see below for nested schema)
	// Execution settings
	// +kubebuilder:validation:Optional
	ExecutionSettings []ExecutionSettingsParameters `json:"executionSettings,omitempty" tf:"execution_settings,omitempty"`

	// (String) Source
	// Source
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// (String) The title of the anomaly detector
	// The title of the anomaly detector
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type EventTemplateInitParameters struct {

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	Properties []PropertiesInitParameters `json:"properties,omitempty" tf:"properties,omitempty"`
}

type EventTemplateObservation struct {

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	Properties []PropertiesObservation `json:"properties,omitempty" tf:"properties,omitempty"`
}

type EventTemplateParameters struct {

	// value properties to be attached to the triggered event. (see below for nested schema)
	// Set of additional key-value properties to be attached to the triggered event.
	// +kubebuilder:validation:Optional
	Properties []PropertiesParameters `json:"properties,omitempty" tf:"properties,omitempty"`
}

type ExecutionSettingsInitParameters struct {

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`
}

type ExecutionSettingsObservation struct {

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`
}

type ExecutionSettingsParameters struct {

	// (Number) Minute offset of sliding evaluation window for metrics with latency
	// Minute offset of sliding evaluation window for metrics with latency
	// +kubebuilder:validation:Optional
	QueryOffset *float64 `json:"queryOffset,omitempty" tf:"query_offset,omitempty"`
}

type InputInitParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	AnalyzerInputField []AnalyzerInputFieldInitParameters `json:"analyzerInputField,omitempty" tf:"analyzer_input_field,omitempty"`
}

type InputObservation struct {

	// (Block Set, Min: 1) (see below for nested schema)
	AnalyzerInputField []AnalyzerInputFieldObservation `json:"analyzerInputField,omitempty" tf:"analyzer_input_field,omitempty"`
}

type InputParameters struct {

	// (Block Set, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	AnalyzerInputField []AnalyzerInputFieldParameters `json:"analyzerInputField" tf:"analyzer_input_field,omitempty"`
}

type PropertiesInitParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	Property []PropertyInitParameters `json:"property,omitempty" tf:"property,omitempty"`
}

type PropertiesObservation struct {

	// (Block List, Min: 1) (see below for nested schema)
	Property []PropertyObservation `json:"property,omitempty" tf:"property,omitempty"`
}

type PropertiesParameters struct {

	// (Block List, Min: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Property []PropertyParameters `json:"property" tf:"property,omitempty"`
}

type PropertyInitParameters struct {

	// (String) no documentation available
	// no documentation available
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PropertyObservation struct {

	// (String) no documentation available
	// no documentation available
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PropertyParameters struct {

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// (String) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// DavisAnomalyDetectorsSpec defines the desired state of DavisAnomalyDetectors
type DavisAnomalyDetectorsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DavisAnomalyDetectorsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DavisAnomalyDetectorsInitParameters `json:"initProvider,omitempty"`
}

// DavisAnomalyDetectorsStatus defines the observed state of DavisAnomalyDetectors.
type DavisAnomalyDetectorsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DavisAnomalyDetectorsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DavisAnomalyDetectors is the Schema for the DavisAnomalyDetectorss API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type DavisAnomalyDetectors struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.analyzer) || (has(self.initProvider) && has(self.initProvider.analyzer))",message="spec.forProvider.analyzer is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || (has(self.initProvider) && has(self.initProvider.description))",message="spec.forProvider.description is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) && has(self.initProvider.enabled))",message="spec.forProvider.enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.eventTemplate) || (has(self.initProvider) && has(self.initProvider.eventTemplate))",message="spec.forProvider.eventTemplate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.executionSettings) || (has(self.initProvider) && has(self.initProvider.executionSettings))",message="spec.forProvider.executionSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || (has(self.initProvider) && has(self.initProvider.source))",message="spec.forProvider.source is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) && has(self.initProvider.title))",message="spec.forProvider.title is a required parameter"
	Spec   DavisAnomalyDetectorsSpec   `json:"spec"`
	Status DavisAnomalyDetectorsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DavisAnomalyDetectorsList contains a list of DavisAnomalyDetectorss
type DavisAnomalyDetectorsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DavisAnomalyDetectors `json:"items"`
}

// Repository type metadata.
var (
	DavisAnomalyDetectors_Kind             = "DavisAnomalyDetectors"
	DavisAnomalyDetectors_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DavisAnomalyDetectors_Kind}.String()
	DavisAnomalyDetectors_KindAPIVersion   = DavisAnomalyDetectors_Kind + "." + CRDGroupVersion.String()
	DavisAnomalyDetectors_GroupVersionKind = CRDGroupVersion.WithKind(DavisAnomalyDetectors_Kind)
)

func init() {
	SchemeBuilder.Register(&DavisAnomalyDetectors{}, &DavisAnomalyDetectorsList{})
}
