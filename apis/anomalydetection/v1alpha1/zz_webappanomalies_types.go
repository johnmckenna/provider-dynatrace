// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ErrorRateAutoInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ErrorRateAutoOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type ErrorRateAutoObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ErrorRateAutoOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type ErrorRateAutoOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateAutoOverAlertingProtectionObservation struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateAutoOverAlertingProtectionParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	ActionsPerMinute *float64 `json:"actionsPerMinute" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateAutoParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	AbsoluteIncrease *float64 `json:"absoluteIncrease" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ErrorRateAutoOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	RelativeIncrease *float64 `json:"relativeIncrease" tf:"relative_increase,omitempty"`
}

type ErrorRateFixedInitParameters struct {

	// alerting for low traffic applications
	// To avoid over-alerting for low traffic applications
	ErrorRateReqPerMin *float64 `json:"errorRateReqPerMin,omitempty" tf:"error_rate_req_per_min,omitempty"`

	// (String) Possible Values: Low, Medium, High
	// Possible Values: `Low`, `Medium`, `High`
	ErrorRateSensitivity *string `json:"errorRateSensitivity,omitempty" tf:"error_rate_sensitivity,omitempty"`

	// minute-period
	// Alert if this custom error rate threshold is exceeded during any 5-minute-period
	MaxFailureRateIncrease *float64 `json:"maxFailureRateIncrease,omitempty" tf:"max_failure_rate_increase,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Amount of minutes the observed traffic has to stay in abnormal state before alert
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateFixedObservation struct {

	// alerting for low traffic applications
	// To avoid over-alerting for low traffic applications
	ErrorRateReqPerMin *float64 `json:"errorRateReqPerMin,omitempty" tf:"error_rate_req_per_min,omitempty"`

	// (String) Possible Values: Low, Medium, High
	// Possible Values: `Low`, `Medium`, `High`
	ErrorRateSensitivity *string `json:"errorRateSensitivity,omitempty" tf:"error_rate_sensitivity,omitempty"`

	// minute-period
	// Alert if this custom error rate threshold is exceeded during any 5-minute-period
	MaxFailureRateIncrease *float64 `json:"maxFailureRateIncrease,omitempty" tf:"max_failure_rate_increase,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Amount of minutes the observed traffic has to stay in abnormal state before alert
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateFixedParameters struct {

	// alerting for low traffic applications
	// To avoid over-alerting for low traffic applications
	// +kubebuilder:validation:Optional
	ErrorRateReqPerMin *float64 `json:"errorRateReqPerMin" tf:"error_rate_req_per_min,omitempty"`

	// (String) Possible Values: Low, Medium, High
	// Possible Values: `Low`, `Medium`, `High`
	// +kubebuilder:validation:Optional
	ErrorRateSensitivity *string `json:"errorRateSensitivity" tf:"error_rate_sensitivity,omitempty"`

	// minute-period
	// Alert if this custom error rate threshold is exceeded during any 5-minute-period
	// +kubebuilder:validation:Optional
	MaxFailureRateIncrease *float64 `json:"maxFailureRateIncrease" tf:"max_failure_rate_increase,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Amount of minutes the observed traffic has to stay in abnormal state before alert
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`
}

type ErrorRateInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Alert if the percentage of failing user actions increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
	ErrorRateAuto []ErrorRateAutoInitParameters `json:"errorRateAuto,omitempty" tf:"error_rate_auto,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	ErrorRateDetectionMode *string `json:"errorRateDetectionMode,omitempty" tf:"error_rate_detection_mode,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ErrorRateFixed []ErrorRateFixedInitParameters `json:"errorRateFixed,omitempty" tf:"error_rate_fixed,omitempty"`
}

type ErrorRateObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Alert if the percentage of failing user actions increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
	ErrorRateAuto []ErrorRateAutoObservation `json:"errorRateAuto,omitempty" tf:"error_rate_auto,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	ErrorRateDetectionMode *string `json:"errorRateDetectionMode,omitempty" tf:"error_rate_detection_mode,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ErrorRateFixed []ErrorRateFixedObservation `json:"errorRateFixed,omitempty" tf:"error_rate_fixed,omitempty"`
}

type ErrorRateParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Max: 1) Alert if the percentage of failing user actions increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ErrorRateAuto []ErrorRateAutoParameters `json:"errorRateAuto,omitempty" tf:"error_rate_auto,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	// +kubebuilder:validation:Optional
	ErrorRateDetectionMode *string `json:"errorRateDetectionMode,omitempty" tf:"error_rate_detection_mode,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ErrorRateFixed []ErrorRateFixedParameters `json:"errorRateFixed,omitempty" tf:"error_rate_fixed,omitempty"`
}

type ResponseTimeAutoInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeAutoOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []ResponseTimeAutoResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []ResponseTimeAutoResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeAutoObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeAutoOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []ResponseTimeAutoResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []ResponseTimeAutoResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeAutoOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeAutoOverAlertingProtectionObservation struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeAutoOverAlertingProtectionParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	ActionsPerMinute *float64 `json:"actionsPerMinute" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeAutoParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ResponseTimeAutoOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []ResponseTimeAutoResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []ResponseTimeAutoResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`
}

type ResponseTimeAutoResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAutoResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAutoResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	DegradationPercent *float64 `json:"degradationPercent" tf:"degradation_percent,omitempty"`
}

type ResponseTimeAutoResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type ResponseTimeAutoResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type ResponseTimeAutoResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent" tf:"slowest_degradation_percent,omitempty"`
}

type ResponseTimeFixedInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeFixedOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of all requests degrades beyond this threshold:
	ResponseTimeAll []ResponseTimeFixedResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest []ResponseTimeFixedResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: Medium, High, Low
	// Possible Values: `Medium`, `High`, `Low`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ResponseTimeFixedObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeFixedOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of all requests degrades beyond this threshold:
	ResponseTimeAll []ResponseTimeFixedResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest []ResponseTimeFixedResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: Medium, High, Low
	// Possible Values: `Medium`, `High`, `Low`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ResponseTimeFixedOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeFixedOverAlertingProtectionObservation struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	ActionsPerMinute *float64 `json:"actionsPerMinute,omitempty" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeFixedOverAlertingProtectionParameters struct {

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	ActionsPerMinute *float64 `json:"actionsPerMinute" tf:"actions_per_minute,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`
}

type ResponseTimeFixedParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ResponseTimeFixedOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all user actions degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of all requests degrades beyond this threshold:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []ResponseTimeFixedResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []ResponseTimeFixedResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: Medium, High, Low
	// Possible Values: `Medium`, `High`, `Low`
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`
}

type ResponseTimeFixedResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`
}

type TrafficDropsInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic drops within your application.
	TrafficDrops []TrafficDropsTrafficDropsInitParameters `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`
}

type TrafficDropsObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic drops within your application.
	TrafficDrops []TrafficDropsTrafficDropsObservation `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`
}

type TrafficDropsParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic drops within your application.
	// +kubebuilder:validation:Optional
	TrafficDrops []TrafficDropsTrafficDropsParameters `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`
}

type TrafficDropsTrafficDropsInitParameters struct {

	// (Number) Minutes the observed traffic has to stay in abnormal state before alert
	// Minutes the observed traffic has to stay in abnormal state before alert
	AbnormalStateAbnormalState *float64 `json:"abnormalStateAbnormalState,omitempty" tf:"abnormal_state_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is less than this percentage of the expected value
	// Alert if the observed traffic is less than this percentage of the expected value
	TrafficDropPercentage *float64 `json:"trafficDropPercentage,omitempty" tf:"traffic_drop_percentage,omitempty"`
}

type TrafficDropsTrafficDropsObservation struct {

	// (Number) Minutes the observed traffic has to stay in abnormal state before alert
	// Minutes the observed traffic has to stay in abnormal state before alert
	AbnormalStateAbnormalState *float64 `json:"abnormalStateAbnormalState,omitempty" tf:"abnormal_state_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is less than this percentage of the expected value
	// Alert if the observed traffic is less than this percentage of the expected value
	TrafficDropPercentage *float64 `json:"trafficDropPercentage,omitempty" tf:"traffic_drop_percentage,omitempty"`
}

type TrafficDropsTrafficDropsParameters struct {

	// (Number) Minutes the observed traffic has to stay in abnormal state before alert
	// Minutes the observed traffic has to stay in abnormal state before alert
	// +kubebuilder:validation:Optional
	AbnormalStateAbnormalState *float64 `json:"abnormalStateAbnormalState" tf:"abnormal_state_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is less than this percentage of the expected value
	// Alert if the observed traffic is less than this percentage of the expected value
	// +kubebuilder:validation:Optional
	TrafficDropPercentage *float64 `json:"trafficDropPercentage" tf:"traffic_drop_percentage,omitempty"`
}

type TrafficSpikesInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
	TrafficSpikes []TrafficSpikesTrafficSpikesInitParameters `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type TrafficSpikesObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
	TrafficSpikes []TrafficSpikesTrafficSpikesObservation `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type TrafficSpikesParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Dynatrace learns your typical application traffic over an observation period of one week.
	//
	// Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
	// +kubebuilder:validation:Optional
	TrafficSpikes []TrafficSpikesTrafficSpikesParameters `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type TrafficSpikesTrafficSpikesInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Minutes an application has to stay in abnormal state before alert
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is more than this percentage of the expected value
	// Alert if the observed traffic is more than this percentage of the expected value
	TrafficSpikePercentage *float64 `json:"trafficSpikePercentage,omitempty" tf:"traffic_spike_percentage,omitempty"`
}

type TrafficSpikesTrafficSpikesObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Minutes an application has to stay in abnormal state before alert
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is more than this percentage of the expected value
	// Alert if the observed traffic is more than this percentage of the expected value
	TrafficSpikePercentage *float64 `json:"trafficSpikePercentage,omitempty" tf:"traffic_spike_percentage,omitempty"`
}

type TrafficSpikesTrafficSpikesParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Minutes an application has to stay in abnormal state before alert
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Alert if the observed traffic is more than this percentage of the expected value
	// Alert if the observed traffic is more than this percentage of the expected value
	// +kubebuilder:validation:Optional
	TrafficSpikePercentage *float64 `json:"trafficSpikePercentage" tf:"traffic_spike_percentage,omitempty"`
}

type WebAppAnomaliesInitParameters struct {

	// (Block List, Min: 1, Max: 1) Error rate (see below for nested schema)
	// Error rate
	ErrorRate []ErrorRateInitParameters `json:"errorRate,omitempty" tf:"error_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []WebAppAnomaliesResponseTimeInitParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	// The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Detect traffic drops
	TrafficDrops []TrafficDropsInitParameters `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Detect traffic spikes
	TrafficSpikes []TrafficSpikesInitParameters `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type WebAppAnomaliesObservation struct {

	// (Block List, Min: 1, Max: 1) Error rate (see below for nested schema)
	// Error rate
	ErrorRate []ErrorRateObservation `json:"errorRate,omitempty" tf:"error_rate,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []WebAppAnomaliesResponseTimeObservation `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	// The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Detect traffic drops
	TrafficDrops []TrafficDropsObservation `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Detect traffic spikes
	TrafficSpikes []TrafficSpikesObservation `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type WebAppAnomaliesParameters struct {

	// (Block List, Min: 1, Max: 1) Error rate (see below for nested schema)
	// Error rate
	// +kubebuilder:validation:Optional
	ErrorRate []ErrorRateParameters `json:"errorRate,omitempty" tf:"error_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	// +kubebuilder:validation:Optional
	ResponseTime []WebAppAnomaliesResponseTimeParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	// The scope of this setting (APPLICATION_METHOD, APPLICATION). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic drops (see below for nested schema)
	// Detect traffic drops
	// +kubebuilder:validation:Optional
	TrafficDrops []TrafficDropsParameters `json:"trafficDrops,omitempty" tf:"traffic_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Detect traffic spikes (see below for nested schema)
	// Detect traffic spikes
	// +kubebuilder:validation:Optional
	TrafficSpikes []TrafficSpikesParameters `json:"trafficSpikes,omitempty" tf:"traffic_spikes,omitempty"`
}

type WebAppAnomaliesResponseTimeInitParameters struct {

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ResponseTimeAuto []ResponseTimeAutoInitParameters `json:"responseTimeAuto,omitempty" tf:"response_time_auto,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ResponseTimeFixed []ResponseTimeFixedInitParameters `json:"responseTimeFixed,omitempty" tf:"response_time_fixed,omitempty"`
}

type WebAppAnomaliesResponseTimeObservation struct {

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ResponseTimeAuto []ResponseTimeAutoObservation `json:"responseTimeAuto,omitempty" tf:"response_time_auto,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	ResponseTimeFixed []ResponseTimeFixedObservation `json:"responseTimeFixed,omitempty" tf:"response_time_fixed,omitempty"`
}

type WebAppAnomaliesResponseTimeParameters struct {

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	// +kubebuilder:validation:Optional
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ResponseTimeAuto []ResponseTimeAutoParameters `json:"responseTimeAuto,omitempty" tf:"response_time_auto,omitempty"`

	// (Block List, Max: 1) no documentation available (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	ResponseTimeFixed []ResponseTimeFixedParameters `json:"responseTimeFixed,omitempty" tf:"response_time_fixed,omitempty"`
}

// WebAppAnomaliesSpec defines the desired state of WebAppAnomalies
type WebAppAnomaliesSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebAppAnomaliesParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WebAppAnomaliesInitParameters `json:"initProvider,omitempty"`
}

// WebAppAnomaliesStatus defines the observed state of WebAppAnomalies.
type WebAppAnomaliesStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebAppAnomaliesObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// WebAppAnomalies is the Schema for the WebAppAnomaliess API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type WebAppAnomalies struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.errorRate) || (has(self.initProvider) && has(self.initProvider.errorRate))",message="spec.forProvider.errorRate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.responseTime) || (has(self.initProvider) && has(self.initProvider.responseTime))",message="spec.forProvider.responseTime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.trafficDrops) || (has(self.initProvider) && has(self.initProvider.trafficDrops))",message="spec.forProvider.trafficDrops is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.trafficSpikes) || (has(self.initProvider) && has(self.initProvider.trafficSpikes))",message="spec.forProvider.trafficSpikes is a required parameter"
	Spec   WebAppAnomaliesSpec   `json:"spec"`
	Status WebAppAnomaliesStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebAppAnomaliesList contains a list of WebAppAnomaliess
type WebAppAnomaliesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebAppAnomalies `json:"items"`
}

// Repository type metadata.
var (
	WebAppAnomalies_Kind             = "WebAppAnomalies"
	WebAppAnomalies_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebAppAnomalies_Kind}.String()
	WebAppAnomalies_KindAPIVersion   = WebAppAnomalies_Kind + "." + CRDGroupVersion.String()
	WebAppAnomalies_GroupVersionKind = CRDGroupVersion.WithKind(WebAppAnomalies_Kind)
)

func init() {
	SchemeBuilder.Register(&WebAppAnomalies{}, &WebAppAnomaliesList{})
}
