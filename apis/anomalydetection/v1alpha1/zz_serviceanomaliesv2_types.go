// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoDetectionResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type AutoDetectionResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	DegradationPercent *float64 `json:"degradationPercent,omitempty" tf:"degradation_percent,omitempty"`
}

type AutoDetectionResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	DegradationPercent *float64 `json:"degradationPercent" tf:"degradation_percent,omitempty"`
}

type AutoDetectionResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type AutoDetectionResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent,omitempty" tf:"slowest_degradation_percent,omitempty"`
}

type AutoDetectionResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	SlowestDegradationPercent *float64 `json:"slowestDegradationPercent" tf:"slowest_degradation_percent,omitempty"`
}

type FailureRateAutoDetectionInitParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FailureRateAutoDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type FailureRateAutoDetectionObservation struct {

	// (Number) Absolute threshold
	// Absolute threshold
	AbsoluteIncrease *float64 `json:"absoluteIncrease,omitempty" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FailureRateAutoDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	RelativeIncrease *float64 `json:"relativeIncrease,omitempty" tf:"relative_increase,omitempty"`
}

type FailureRateAutoDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FailureRateAutoDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FailureRateAutoDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type FailureRateAutoDetectionParameters struct {

	// (Number) Absolute threshold
	// Absolute threshold
	// +kubebuilder:validation:Optional
	AbsoluteIncrease *float64 `json:"absoluteIncrease" tf:"absolute_increase,omitempty"`

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []FailureRateAutoDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Number) Relative threshold
	// Relative threshold
	// +kubebuilder:validation:Optional
	RelativeIncrease *float64 `json:"relativeIncrease" tf:"relative_increase,omitempty"`
}

type FailureRateFixedDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FailureRateFixedDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type FailureRateFixedDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []FailureRateFixedDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type FailureRateFixedDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FailureRateFixedDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type FailureRateFixedDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type FailureRateFixedDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []FailureRateFixedDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`

	// (Number) no documentation available
	// no documentation available
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`
}

type ResponseTimeAutoDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeAutoDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeAutoDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeAllInitParameters struct {

	// (Number) Absolute threshold
	// Alert if the response time degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeAllObservation struct {

	// (Number) Absolute threshold
	// Alert if the response time degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds *float64 `json:"degradationMilliseconds,omitempty" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeAllParameters struct {

	// (Number) Absolute threshold
	// Alert if the response time degrades beyond this many ms within an observation period of 5 minutes
	// +kubebuilder:validation:Optional
	DegradationMilliseconds *float64 `json:"degradationMilliseconds" tf:"degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeSlowestInitParameters struct {

	// (Number) Absolute threshold
	// Alert if the response time of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeSlowestObservation struct {

	// (Number) Absolute threshold
	// Alert if the response time of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds,omitempty" tf:"slowest_degradation_milliseconds,omitempty"`
}

type ResponseTimeFixedDetectionResponseTimeSlowestParameters struct {

	// (Number) Absolute threshold
	// Alert if the response time of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	// +kubebuilder:validation:Optional
	SlowestDegradationMilliseconds *float64 `json:"slowestDegradationMilliseconds" tf:"slowest_degradation_milliseconds,omitempty"`
}

type ServiceAnomaliesV2FailureRateInitParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	AutoDetection []FailureRateAutoDetectionInitParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	FixedDetection []FailureRateFixedDetectionInitParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ServiceAnomaliesV2FailureRateObservation struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	AutoDetection []FailureRateAutoDetectionObservation `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	FixedDetection []FailureRateFixedDetectionObservation `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ServiceAnomaliesV2FailureRateParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	AutoDetection []FailureRateAutoDetectionParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	// +kubebuilder:validation:Optional
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// Alert if a given failure rate is exceeded during any 5-minute-period
	// +kubebuilder:validation:Optional
	FixedDetection []FailureRateFixedDetectionParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ServiceAnomaliesV2InitParameters struct {

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	FailureRate []ServiceAnomaliesV2FailureRateInitParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:
	LoadDrops []ServiceAnomaliesV2LoadDropsInitParameters `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:
	LoadSpikes []ServiceAnomaliesV2LoadSpikesInitParameters `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []ServiceAnomaliesV2ResponseTimeInitParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ServiceAnomaliesV2LoadDropsInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2LoadDropsObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2LoadDropsParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	// +kubebuilder:validation:Optional
	LoadDropPercent *float64 `json:"loadDropPercent,omitempty" tf:"load_drop_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2LoadSpikesInitParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2LoadSpikesObservation struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2LoadSpikesParameters struct {

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// (Number) Threshold
	// Threshold
	// +kubebuilder:validation:Optional
	LoadSpikePercent *float64 `json:"loadSpikePercent,omitempty" tf:"load_spike_percent,omitempty"`

	// (Number) Only alert if the abnormal state remains for at least
	// Time span
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`
}

type ServiceAnomaliesV2Observation struct {

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	FailureRate []ServiceAnomaliesV2FailureRateObservation `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:
	LoadDrops []ServiceAnomaliesV2LoadDropsObservation `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:
	LoadSpikes []ServiceAnomaliesV2LoadSpikesObservation `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	ResponseTime []ServiceAnomaliesV2ResponseTimeObservation `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ServiceAnomaliesV2Parameters struct {

	// (Block List, Min: 1, Max: 1) Failure rate (see below for nested schema)
	// Failure rate
	// +kubebuilder:validation:Optional
	FailureRate []ServiceAnomaliesV2FailureRateParameters `json:"failureRate,omitempty" tf:"failure_rate,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load is lower than the expected load by a specified margin for a specified amount of time:
	// +kubebuilder:validation:Optional
	LoadDrops []ServiceAnomaliesV2LoadDropsParameters `json:"loadDrops,omitempty" tf:"load_drops,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time: (see below for nested schema)
	// Alert if the observed load exceeds the expected load by a specified margin for a specified amount of time:
	// +kubebuilder:validation:Optional
	LoadSpikes []ServiceAnomaliesV2LoadSpikesParameters `json:"loadSpikes,omitempty" tf:"load_spikes,omitempty"`

	// (Block List, Min: 1, Max: 1) Response time (see below for nested schema)
	// Response time
	// +kubebuilder:validation:Optional
	ResponseTime []ServiceAnomaliesV2ResponseTimeParameters `json:"responseTime,omitempty" tf:"response_time,omitempty"`

	// (String) The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// The scope of this setting (SERVICE_METHOD, SERVICE, HOST_GROUP). Omit this property if you want to cover the whole environment.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeAutoDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeAutoDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []AutoDetectionResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []AutoDetectionResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeAutoDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ResponseTimeAutoDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll []AutoDetectionResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest []AutoDetectionResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeAutoDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ResponseTimeAutoDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []AutoDetectionResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []AutoDetectionResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionInitParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionInitParameters `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold:
	ResponseTimeAll []ResponseTimeFixedDetectionResponseTimeAllInitParameters `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest []ResponseTimeFixedDetectionResponseTimeSlowestInitParameters `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionObservation struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	OverAlertingProtection []ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionObservation `json:"overAlertingProtection,omitempty" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold:
	ResponseTimeAll []ResponseTimeFixedDetectionResponseTimeAllObservation `json:"responseTimeAll,omitempty" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest []ResponseTimeFixedDetectionResponseTimeSlowestObservation `json:"responseTimeSlowest,omitempty" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	Sensitivity *string `json:"sensitivity,omitempty" tf:"sensitivity,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionInitParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionObservation struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState *float64 `json:"minutesAbnormalState,omitempty" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	RequestsPerMinute *float64 `json:"requestsPerMinute,omitempty" tf:"requests_per_minute,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionParameters struct {

	// (Number) Only alert if the abnormal state remains for at least
	// Only alert if the abnormal state remains for at least
	// +kubebuilder:validation:Optional
	MinutesAbnormalState *float64 `json:"minutesAbnormalState" tf:"minutes_abnormal_state,omitempty"`

	// (Number) Only alert if there are at least
	// Only alert if there are at least
	// +kubebuilder:validation:Optional
	RequestsPerMinute *float64 `json:"requestsPerMinute" tf:"requests_per_minute,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeFixedDetectionParameters struct {

	// alerting (see below for nested schema)
	// Avoid over-alerting
	// +kubebuilder:validation:Optional
	OverAlertingProtection []ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtectionParameters `json:"overAlertingProtection" tf:"over_alerting_protection,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the median response time of all requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the median response time of all requests degrades beyond this threshold:
	// +kubebuilder:validation:Optional
	ResponseTimeAll []ResponseTimeFixedDetectionResponseTimeAllParameters `json:"responseTimeAll" tf:"response_time_all,omitempty"`

	// (Block List, Min: 1, Max: 1) Alert if the response time of the slowest 10% of requests degrades beyond both the absolute and relative thresholds: (see below for nested schema)
	// Alert if the response time of the slowest 10% of requests degrades beyond this threshold:
	// +kubebuilder:validation:Optional
	ResponseTimeSlowest []ResponseTimeFixedDetectionResponseTimeSlowestParameters `json:"responseTimeSlowest" tf:"response_time_slowest,omitempty"`

	// (String) Possible Values: High, Low, Medium
	// Possible Values: `High`, `Low`, `Medium`
	// +kubebuilder:validation:Optional
	Sensitivity *string `json:"sensitivity" tf:"sensitivity,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeInitParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	AutoDetection []ServiceAnomaliesV2ResponseTimeAutoDetectionInitParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	FixedDetection []ServiceAnomaliesV2ResponseTimeFixedDetectionInitParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeObservation struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	AutoDetection []ServiceAnomaliesV2ResponseTimeAutoDetectionObservation `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	FixedDetection []ServiceAnomaliesV2ResponseTimeFixedDetectionObservation `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

type ServiceAnomaliesV2ResponseTimeParameters struct {

	// (Block List, Max: 1) Alert if the percentage of failing service calls increases by both the absolute and relative thresholds: (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	AutoDetection []ServiceAnomaliesV2ResponseTimeAutoDetectionParameters `json:"autoDetection,omitempty" tf:"auto_detection,omitempty"`

	// (String) Possible Values: Auto, Fixed
	// Possible Values: `Auto`, `Fixed`
	// +kubebuilder:validation:Optional
	DetectionMode *string `json:"detectionMode,omitempty" tf:"detection_mode,omitempty"`

	// (Boolean) This setting is enabled (true) or disabled (false)
	// This setting is enabled (`true`) or disabled (`false`)
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// minute-period (see below for nested schema)
	// no documentation available
	// +kubebuilder:validation:Optional
	FixedDetection []ServiceAnomaliesV2ResponseTimeFixedDetectionParameters `json:"fixedDetection,omitempty" tf:"fixed_detection,omitempty"`
}

// ServiceAnomaliesV2Spec defines the desired state of ServiceAnomaliesV2
type ServiceAnomaliesV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceAnomaliesV2Parameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceAnomaliesV2InitParameters `json:"initProvider,omitempty"`
}

// ServiceAnomaliesV2Status defines the observed state of ServiceAnomaliesV2.
type ServiceAnomaliesV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceAnomaliesV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceAnomaliesV2 is the Schema for the ServiceAnomaliesV2s API. The resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,dynatrace}
type ServiceAnomaliesV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.failureRate) || (has(self.initProvider) && has(self.initProvider.failureRate))",message="spec.forProvider.failureRate is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadDrops) || (has(self.initProvider) && has(self.initProvider.loadDrops))",message="spec.forProvider.loadDrops is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadSpikes) || (has(self.initProvider) && has(self.initProvider.loadSpikes))",message="spec.forProvider.loadSpikes is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.responseTime) || (has(self.initProvider) && has(self.initProvider.responseTime))",message="spec.forProvider.responseTime is a required parameter"
	Spec   ServiceAnomaliesV2Spec   `json:"spec"`
	Status ServiceAnomaliesV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAnomaliesV2List contains a list of ServiceAnomaliesV2s
type ServiceAnomaliesV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAnomaliesV2 `json:"items"`
}

// Repository type metadata.
var (
	ServiceAnomaliesV2_Kind             = "ServiceAnomaliesV2"
	ServiceAnomaliesV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAnomaliesV2_Kind}.String()
	ServiceAnomaliesV2_KindAPIVersion   = ServiceAnomaliesV2_Kind + "." + CRDGroupVersion.String()
	ServiceAnomaliesV2_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAnomaliesV2_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAnomaliesV2{}, &ServiceAnomaliesV2List{})
}
